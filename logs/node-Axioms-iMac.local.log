[INFO ] 2019-08-20T10:08:46,632Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-100845.421/custom-cordapp_1_4_74ff9d6c-9432-4b39-9f07-b8ef7754e55e.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T10:08:47,026Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-100845.421/custom-cordapp_1_4_74ff9d6c-9432-4b39-9f07-b8ef7754e55e.jar {}
[INFO ] 2019-08-20T10:08:47,232Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T10:08:48,943Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:08:48,948Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:08:49,027Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T10:08:49,178Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-100845.421/custom-cordapp_1_4_74ff9d6c-9432-4b39-9f07-b8ef7754e55e.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T10:08:49,178Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-100845.421/custom-cordapp_1_4_74ff9d6c-9432-4b39-9f07-b8ef7754e55e.jar {}
[INFO ] 2019-08-20T10:08:49,203Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T10:08:49,293Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:08:49,361Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:08:49,427Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T10:08:49,477Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-100845.421/custom-cordapp_1_4_74ff9d6c-9432-4b39-9f07-b8ef7754e55e.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T10:08:49,482Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-100845.421/custom-cordapp_1_4_74ff9d6c-9432-4b39-9f07-b8ef7754e55e.jar {}
[INFO ] 2019-08-20T10:08:49,505Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T10:08:49,605Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-100845.421/custom-cordapp_1_4_74ff9d6c-9432-4b39-9f07-b8ef7754e55e.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T10:08:49,606Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-100845.421/custom-cordapp_1_4_74ff9d6c-9432-4b39-9f07-b8ef7754e55e.jar {}
[INFO ] 2019-08-20T10:08:49,631Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T10:08:49,714Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:08:49,774Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T10:08:49,813Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-100845.421/custom-cordapp_1_4_74ff9d6c-9432-4b39-9f07-b8ef7754e55e.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T10:08:49,813Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-100845.421/custom-cordapp_1_4_74ff9d6c-9432-4b39-9f07-b8ef7754e55e.jar {}
[INFO ] 2019-08-20T10:08:49,843Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T10:08:49,907Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:08:49,951Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T10:08:49,986Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-100845.421/custom-cordapp_1_4_74ff9d6c-9432-4b39-9f07-b8ef7754e55e.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T10:08:49,986Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-100845.421/custom-cordapp_1_4_74ff9d6c-9432-4b39-9f07-b8ef7754e55e.jar {}
[INFO ] 2019-08-20T10:08:50,011Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T10:08:50,075Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:08:50,113Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T10:08:50,143Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-100845.421/custom-cordapp_1_4_74ff9d6c-9432-4b39-9f07-b8ef7754e55e.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T10:08:50,144Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-100845.421/custom-cordapp_1_4_74ff9d6c-9432-4b39-9f07-b8ef7754e55e.jar {}
[INFO ] 2019-08-20T10:08:50,167Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T10:08:50,226Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:08:50,261Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:08:50,299Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T10:08:50,329Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-100845.421/custom-cordapp_1_4_74ff9d6c-9432-4b39-9f07-b8ef7754e55e.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T10:08:50,329Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-100845.421/custom-cordapp_1_4_74ff9d6c-9432-4b39-9f07-b8ef7754e55e.jar {}
[INFO ] 2019-08-20T10:08:50,354Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T10:08:50,418Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:08:50,421Z [main] contracts.AttachmentConstraint.warnOnce - Found state bootcamp.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[WARN ] 2019-08-20T10:08:53,351Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:08:53,355Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:08:53,385Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T10:10:28,949Z [Test worker] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-101027.753/custom-cordapp_1_4_9e2842df-8a25-4178-a562-3f854689882c.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T10:10:29,138Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-101027.753/custom-cordapp_1_4_9e2842df-8a25-4178-a562-3f854689882c.jar {}
[INFO ] 2019-08-20T10:10:29,296Z [Test worker] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T10:10:31,917Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:10:31,937Z [Test worker] contracts.AttachmentConstraint.warnOnce - Found state bootcamp.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[WARN ] 2019-08-20T10:10:33,634Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:10:33,639Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:10:33,689Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T10:14:43,561Z [Test worker] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-101442.057/custom-cordapp_1_4_388c1023-974b-4bee-ab5a-bb2af2258a46.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T10:14:43,709Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-101442.057/custom-cordapp_1_4_388c1023-974b-4bee-ab5a-bb2af2258a46.jar {}
[INFO ] 2019-08-20T10:14:43,866Z [Test worker] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T10:14:47,156Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:14:47,181Z [Test worker] contracts.AttachmentConstraint.warnOnce - Found state bootcamp.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[WARN ] 2019-08-20T10:14:50,041Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:14:50,056Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:14:50,127Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T10:16:45,162Z [Test worker] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-101643.813/custom-cordapp_1_4_66d42ca1-819f-435e-9edc-98a710d707d3.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T10:16:45,319Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-101643.813/custom-cordapp_1_4_66d42ca1-819f-435e-9edc-98a710d707d3.jar {}
[INFO ] 2019-08-20T10:16:45,462Z [Test worker] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T10:36:18,040Z [Test worker] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-103616.778/custom-cordapp_1_4_2aa966cb-7d0e-4816-879e-7dd6e6540a42.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T10:36:18,168Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-103616.778/custom-cordapp_1_4_2aa966cb-7d0e-4816-879e-7dd6e6540a42.jar {}
[INFO ] 2019-08-20T10:36:18,311Z [Test worker] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T10:38:51,361Z [Test worker] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-103850.193/custom-cordapp_1_4_d5af475e-92bd-4873-92ac-38ac08566425.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T10:38:51,515Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-103850.193/custom-cordapp_1_4_d5af475e-92bd-4873-92ac-38ac08566425.jar {}
[INFO ] 2019-08-20T10:38:51,645Z [Test worker] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T10:38:54,239Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:38:54,265Z [Test worker] contracts.AttachmentConstraint.warnOnce - Found state bootcamp.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[WARN ] 2019-08-20T10:38:56,041Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:38:56,137Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:38:56,145Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:38:56,168Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:38:56,172Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:38:56,180Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T10:38:56,181Z [Test worker] internal.Verifier.verifyContracts - Error validating transaction BCC19981C10C62BC64BDBA95C6F150259C6BDC0F6F9CF4875BC737A852997EE9. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:16) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]
[WARN ] 2019-08-20T10:38:56,196Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:38:56,204Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:38:56,210Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T10:38:56,210Z [Test worker] internal.Verifier.verifyContracts - Error validating transaction BCC19981C10C62BC64BDBA95C6F150259C6BDC0F6F9CF4875BC737A852997EE9. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:16) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]
[WARN ] 2019-08-20T10:38:56,256Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:38:56,276Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:38:58,184Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:38:58,191Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T10:55:00,495Z [Test worker] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-105459.084/custom-cordapp_1_4_e814b318-4dde-4c13-8a12-bdccedc95fc1.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T10:55:00,677Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-105459.084/custom-cordapp_1_4_e814b318-4dde-4c13-8a12-bdccedc95fc1.jar {}
[INFO ] 2019-08-20T10:55:00,830Z [Test worker] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T10:55:03,835Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:55:03,849Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:55:03,901Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:55:03,902Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:55:05,748Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:55:05,753Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T10:55:05,782Z [Test worker] internal.Verifier.verifyContracts - Error validating transaction 540F223DC8C544EAB5C16EC54CD3DBB3395AEABE2A66944153EA136CB080EB53. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:20) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]
[WARN ] 2019-08-20T10:55:05,840Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:55:05,847Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T10:55:05,848Z [Test worker] internal.Verifier.verifyContracts - Error validating transaction 540F223DC8C544EAB5C16EC54CD3DBB3395AEABE2A66944153EA136CB080EB53. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:20) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]
[WARN ] 2019-08-20T10:55:05,904Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:55:05,932Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:55:08,312Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T10:55:08,321Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T11:06:41,076Z [Test worker] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-110639.774/custom-cordapp_1_4_289480f1-2838-42a3-9d8d-f783904afb0a.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:06:41,243Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-110639.774/custom-cordapp_1_4_289480f1-2838-42a3-9d8d-f783904afb0a.jar {}
[INFO ] 2019-08-20T11:06:41,405Z [Test worker] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:06:44,614Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:06:44,672Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:06:46,632Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:06:46,665Z [Test worker] internal.Verifier.verifyContracts - Error validating transaction DDDDF4131D250B1DE74E388D02F8AE17C0FA1AD2B10DA50E3D8EB4612595394A. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]
[WARN ] 2019-08-20T11:06:46,679Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:06:46,681Z [Test worker] internal.Verifier.verifyContracts - Error validating transaction DDDDF4131D250B1DE74E388D02F8AE17C0FA1AD2B10DA50E3D8EB4612595394A. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]
[WARN ] 2019-08-20T11:06:46,747Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:06:46,825Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:06:48,673Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:06:48,678Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T11:08:06,014Z [Test worker] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-110804.723/custom-cordapp_1_4_15741f25-1273-4258-940f-80c184d9d2a3.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:08:06,137Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-110804.723/custom-cordapp_1_4_15741f25-1273-4258-940f-80c184d9d2a3.jar {}
[INFO ] 2019-08-20T11:08:06,274Z [Test worker] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:08:08,868Z [Test worker] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:08:08,919Z [Test worker] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:08:10,598Z [Test worker] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:08:10,603Z [Test worker] internal.Verifier.warnOnce - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-20T11:08:10,604Z [Test worker] internal.Verifier.verifyContracts - Error validating transaction 43485181D2654C518546593D80E09D242B53B6998621B8308AB9F5314EC788FB. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: commands should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:28) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]
[WARN ] 2019-08-20T11:08:10,612Z [Test worker] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:08:10,613Z [Test worker] internal.Verifier.verifyContracts - Error validating transaction 43485181D2654C518546593D80E09D242B53B6998621B8308AB9F5314EC788FB. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: commands should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:28) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]
[WARN ] 2019-08-20T11:08:10,661Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:08:10,706Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:08:12,791Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:08:12,813Z [Test worker] internal.Verifier.verifyContracts - Error validating transaction 507E52506A292E5284887831881EC853DD0BC454E2DAC69FFCBC017CC10E5924. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: commands should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:28) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.verifies(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$7(ContractTests.java:100) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:96) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]
[WARN ] 2019-08-20T11:08:12,818Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:08:12,818Z [Test worker] internal.Verifier.verifyContracts - Error validating transaction 507E52506A292E5284887831881EC853DD0BC454E2DAC69FFCBC017CC10E5924. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: commands should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:28) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.verifies(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$7(ContractTests.java:100) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:96) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]
[INFO ] 2019-08-20T11:08:44,844Z [Test worker] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-110843.664/custom-cordapp_1_4_dcc655d1-736a-41da-9c70-cdc34c9716bd.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:08:44,983Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-110843.664/custom-cordapp_1_4_dcc655d1-736a-41da-9c70-cdc34c9716bd.jar {}
[INFO ] 2019-08-20T11:08:45,121Z [Test worker] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:08:47,619Z [Test worker] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:08:47,678Z [Test worker] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:08:49,234Z [Test worker] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:08:49,238Z [Test worker] internal.Verifier.warnOnce - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-20T11:08:49,239Z [Test worker] internal.Verifier.verifyContracts - Error validating transaction 03C8FE3A819857A6A84BAB5960C4F5FBDAEAE6F65C73591264B3B1AFF647BF55. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:28) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]
[WARN ] 2019-08-20T11:08:49,248Z [Test worker] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:08:49,248Z [Test worker] internal.Verifier.verifyContracts - Error validating transaction 03C8FE3A819857A6A84BAB5960C4F5FBDAEAE6F65C73591264B3B1AFF647BF55. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:28) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]
[WARN ] 2019-08-20T11:08:49,290Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:08:49,311Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:08:51,072Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:08:51,096Z [Test worker] internal.Verifier.verifyContracts - Error validating transaction 2E5001494CFDF1A5993C1CEDF9557CB99756A7A28362E52721354D9B7F8CC6CD. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:28) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.verifies(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$7(ContractTests.java:100) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:96) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]
[WARN ] 2019-08-20T11:08:51,101Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:08:51,102Z [Test worker] internal.Verifier.verifyContracts - Error validating transaction 2E5001494CFDF1A5993C1CEDF9557CB99756A7A28362E52721354D9B7F8CC6CD. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:28) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.verifies(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$7(ContractTests.java:100) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:96) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]
[INFO ] 2019-08-20T11:11:17,720Z [Test worker] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-111116.488/custom-cordapp_1_4_57ab8814-b191-485f-a254-9f176c1de894.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:11:17,849Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-111116.488/custom-cordapp_1_4_57ab8814-b191-485f-a254-9f176c1de894.jar {}
[INFO ] 2019-08-20T11:11:17,978Z [Test worker] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:11:20,480Z [Test worker] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:11:20,526Z [Test worker] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:11:22,177Z [Test worker] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:11:22,181Z [Test worker] internal.Verifier.warnOnce - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-20T11:11:22,183Z [Test worker] internal.Verifier.verifyContracts - Error validating transaction 91F6E961C2F5079805300EA58D2B3BF2120A4E564B1C861AD932E735E239C350. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]
[WARN ] 2019-08-20T11:11:22,193Z [Test worker] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:11:22,194Z [Test worker] internal.Verifier.verifyContracts - Error validating transaction 91F6E961C2F5079805300EA58D2B3BF2120A4E564B1C861AD932E735E239C350. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]
[WARN ] 2019-08-20T11:11:22,249Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:11:22,270Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:11:23,913Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:11:23,943Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T11:48:19,820Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-114819.039/custom-cordapp_1_4_ffc23dd3-f03a-4b7c-9ec7-e2fa4b3e2491.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:48:19,867Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-114819.039/custom-cordapp_1_4_ffc23dd3-f03a-4b7c-9ec7-e2fa4b3e2491.jar {}
[INFO ] 2019-08-20T11:48:19,933Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:48:21,334Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:21,343Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:21,382Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:21,382Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:23,004Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:23,008Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:48:23,038Z [main] internal.Verifier.verifyContracts - Error validating transaction 9AD2820E264571A0194472FA753A47FCF34AF35E45E66A1677C8536AACD3A853. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:22) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:48:23,044Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:23,047Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:48:23,048Z [main] internal.Verifier.verifyContracts - Error validating transaction 9AD2820E264571A0194472FA753A47FCF34AF35E45E66A1677C8536AACD3A853. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:22) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:48:23,096Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:23,119Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:24,683Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:24,689Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T11:48:24,712Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-114819.039/custom-cordapp_1_4_ffc23dd3-f03a-4b7c-9ec7-e2fa4b3e2491.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:48:24,712Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-114819.039/custom-cordapp_1_4_ffc23dd3-f03a-4b7c-9ec7-e2fa4b3e2491.jar {}
[INFO ] 2019-08-20T11:48:24,737Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T11:48:24,810Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-114819.039/custom-cordapp_1_4_ffc23dd3-f03a-4b7c-9ec7-e2fa4b3e2491.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:48:24,810Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-114819.039/custom-cordapp_1_4_ffc23dd3-f03a-4b7c-9ec7-e2fa4b3e2491.jar {}
[INFO ] 2019-08-20T11:48:24,834Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:48:24,903Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:24,924Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:25,883Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:25,884Z [main] internal.Verifier.warnOnce - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-20T11:48:25,884Z [main] internal.Verifier.verifyContracts - Error validating transaction 00761041B01C0934D9DB0D52E2EDC9D24CB0A1082DC67122B33012BDF5DCCB51. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:48:25,887Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:48:25,888Z [main] internal.Verifier.verifyContracts - Error validating transaction 00761041B01C0934D9DB0D52E2EDC9D24CB0A1082DC67122B33012BDF5DCCB51. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:48:25,921Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:25,936Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:27,139Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:27,143Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T11:48:27,163Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-114819.039/custom-cordapp_1_4_ffc23dd3-f03a-4b7c-9ec7-e2fa4b3e2491.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:48:27,163Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-114819.039/custom-cordapp_1_4_ffc23dd3-f03a-4b7c-9ec7-e2fa4b3e2491.jar {}
[INFO ] 2019-08-20T11:48:27,188Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:48:27,256Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:27,271Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:28,297Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:48:28,298Z [main] internal.Verifier.verifyContracts - Error validating transaction F8AFF7C44CF8AC28A92A365E90EF2D291A0A1FA459203E705434EC3876EFF28D. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:39) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:48:28,301Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:48:28,302Z [main] internal.Verifier.verifyContracts - Error validating transaction F8AFF7C44CF8AC28A92A365E90EF2D291A0A1FA459203E705434EC3876EFF28D. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:39) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:48:28,330Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:28,342Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:29,406Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:29,409Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T11:48:29,426Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-114819.039/custom-cordapp_1_4_ffc23dd3-f03a-4b7c-9ec7-e2fa4b3e2491.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:48:29,427Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-114819.039/custom-cordapp_1_4_ffc23dd3-f03a-4b7c-9ec7-e2fa4b3e2491.jar {}
[INFO ] 2019-08-20T11:48:29,450Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:48:29,507Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:29,519Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:30,617Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:48:30,617Z [main] internal.Verifier.verifyContracts - Error validating transaction EB9122F4CE3D428A3130D61B3A7B727BF4794C70E00BF58EE7C7046A77B3F0CA. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:26) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:48:30,623Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:48:30,623Z [main] internal.Verifier.verifyContracts - Error validating transaction EB9122F4CE3D428A3130D61B3A7B727BF4794C70E00BF58EE7C7046A77B3F0CA. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:26) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:48:30,647Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:30,658Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:31,567Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:31,572Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T11:48:31,590Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-114819.039/custom-cordapp_1_4_ffc23dd3-f03a-4b7c-9ec7-e2fa4b3e2491.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:48:31,590Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-114819.039/custom-cordapp_1_4_ffc23dd3-f03a-4b7c-9ec7-e2fa4b3e2491.jar {}
[INFO ] 2019-08-20T11:48:31,613Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:48:31,665Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:31,676Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:32,518Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:32,521Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T11:48:32,541Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-114819.039/custom-cordapp_1_4_ffc23dd3-f03a-4b7c-9ec7-e2fa4b3e2491.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:48:32,542Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-114819.039/custom-cordapp_1_4_ffc23dd3-f03a-4b7c-9ec7-e2fa4b3e2491.jar {}
[INFO ] 2019-08-20T11:48:32,564Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:48:32,610Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:32,613Z [main] contracts.AttachmentConstraint.warnOnce - Found state bootcamp.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[WARN ] 2019-08-20T11:48:33,593Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:48:33,593Z [main] internal.Verifier.verifyContracts - Error validating transaction EDA3FFD600EF2D8D6B5A66A5D4C52E57A0DE2AF90F2F31109C0B6B74FEFD6CBD. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:39) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:30) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:48:33,600Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:33,605Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:33,620Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:33,622Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:33,626Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:48:33,626Z [main] internal.Verifier.verifyContracts - Error validating transaction 4E1685F391ED11FEE8EE2B008A532C456792875F7F1E15A295A4EBDAD771F74B. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:18) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:48:33,630Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:33,632Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:33,635Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:48:33,635Z [main] internal.Verifier.verifyContracts - Error validating transaction 4E1685F391ED11FEE8EE2B008A532C456792875F7F1E15A295A4EBDAD771F74B. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:18) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:48:33,669Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:33,679Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:34,461Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:48:34,464Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T11:50:15,453Z [Test worker] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115014.170/custom-cordapp_1_4_eab06a91-1f9c-4062-ab9e-fedeca3ce606.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:50:15,595Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115014.170/custom-cordapp_1_4_eab06a91-1f9c-4062-ab9e-fedeca3ce606.jar {}
[INFO ] 2019-08-20T11:50:15,733Z [Test worker] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:50:18,390Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:50:18,438Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:50:20,046Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:50:20,081Z [Test worker] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T11:51:06,171Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115105.520/custom-cordapp_1_4_b158632a-f90f-4b7c-8b5c-ae857947dcf6.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:51:06,211Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115105.520/custom-cordapp_1_4_b158632a-f90f-4b7c-8b5c-ae857947dcf6.jar {}
[INFO ] 2019-08-20T11:51:06,271Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:51:07,507Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:07,511Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:07,543Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:07,544Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:09,171Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:09,174Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:51:09,200Z [main] internal.Verifier.verifyContracts - Error validating transaction FC7ADF63870B14AE4DCBB54473CFC2260E2ED32E363425CEA28D4A44773D69CC. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:22) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:51:09,206Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:09,209Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:51:09,209Z [main] internal.Verifier.verifyContracts - Error validating transaction FC7ADF63870B14AE4DCBB54473CFC2260E2ED32E363425CEA28D4A44773D69CC. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:22) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:51:09,246Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:09,268Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:10,772Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:10,778Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T11:51:10,800Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115105.520/custom-cordapp_1_4_b158632a-f90f-4b7c-8b5c-ae857947dcf6.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:51:10,800Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115105.520/custom-cordapp_1_4_b158632a-f90f-4b7c-8b5c-ae857947dcf6.jar {}
[INFO ] 2019-08-20T11:51:10,826Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:51:10,901Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:10,921Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:11,917Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:11,921Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T11:51:11,945Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115105.520/custom-cordapp_1_4_b158632a-f90f-4b7c-8b5c-ae857947dcf6.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:51:11,945Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115105.520/custom-cordapp_1_4_b158632a-f90f-4b7c-8b5c-ae857947dcf6.jar {}
[INFO ] 2019-08-20T11:51:11,969Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T11:51:12,026Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115105.520/custom-cordapp_1_4_b158632a-f90f-4b7c-8b5c-ae857947dcf6.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:51:12,026Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115105.520/custom-cordapp_1_4_b158632a-f90f-4b7c-8b5c-ae857947dcf6.jar {}
[INFO ] 2019-08-20T11:51:12,063Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:51:12,135Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:12,149Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:13,306Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:13,307Z [main] internal.Verifier.warnOnce - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-20T11:51:13,308Z [main] internal.Verifier.verifyContracts - Error validating transaction F3F894EED08AD33C1D2A27791E21BC8F0E894A264F6428B7E94A527300A37AFE. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:51:13,311Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:51:13,312Z [main] internal.Verifier.verifyContracts - Error validating transaction F3F894EED08AD33C1D2A27791E21BC8F0E894A264F6428B7E94A527300A37AFE. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:51:13,340Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:13,353Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:14,325Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:14,328Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T11:51:14,345Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115105.520/custom-cordapp_1_4_b158632a-f90f-4b7c-8b5c-ae857947dcf6.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:51:14,345Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115105.520/custom-cordapp_1_4_b158632a-f90f-4b7c-8b5c-ae857947dcf6.jar {}
[INFO ] 2019-08-20T11:51:14,369Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:51:14,427Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:14,439Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:15,431Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:51:15,431Z [main] internal.Verifier.verifyContracts - Error validating transaction 63463A4496843F6EB10D186BF69867A7BBD91FFC3C58B957F251A3881FCB7780. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:39) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:51:15,435Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:51:15,435Z [main] internal.Verifier.verifyContracts - Error validating transaction 63463A4496843F6EB10D186BF69867A7BBD91FFC3C58B957F251A3881FCB7780. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:39) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:51:15,459Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:15,473Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:16,534Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:16,539Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T11:51:16,555Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115105.520/custom-cordapp_1_4_b158632a-f90f-4b7c-8b5c-ae857947dcf6.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:51:16,555Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115105.520/custom-cordapp_1_4_b158632a-f90f-4b7c-8b5c-ae857947dcf6.jar {}
[INFO ] 2019-08-20T11:51:16,577Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:51:16,633Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:16,644Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:17,475Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:51:17,475Z [main] internal.Verifier.verifyContracts - Error validating transaction EE2AFDEEBCBA4409A2EAD93391CD067F6DA18D59329E5EA92F168ECA74E8FE2B. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:26) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:51:17,485Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:51:17,485Z [main] internal.Verifier.verifyContracts - Error validating transaction EE2AFDEEBCBA4409A2EAD93391CD067F6DA18D59329E5EA92F168ECA74E8FE2B. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:26) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:51:17,508Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:17,517Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:18,374Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:18,378Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T11:51:18,393Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115105.520/custom-cordapp_1_4_b158632a-f90f-4b7c-8b5c-ae857947dcf6.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:51:18,394Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115105.520/custom-cordapp_1_4_b158632a-f90f-4b7c-8b5c-ae857947dcf6.jar {}
[INFO ] 2019-08-20T11:51:18,417Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:51:18,469Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:18,479Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:19,401Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:19,405Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T11:51:19,424Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115105.520/custom-cordapp_1_4_b158632a-f90f-4b7c-8b5c-ae857947dcf6.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T11:51:19,425Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-115105.520/custom-cordapp_1_4_b158632a-f90f-4b7c-8b5c-ae857947dcf6.jar {}
[INFO ] 2019-08-20T11:51:19,445Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T11:51:19,481Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:19,483Z [main] contracts.AttachmentConstraint.warnOnce - Found state bootcamp.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[WARN ] 2019-08-20T11:51:20,245Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:51:20,245Z [main] internal.Verifier.verifyContracts - Error validating transaction 0995BE8B4BC1DBD817912E6771D74A357D75930FD9201EF1085DA6CCFFDA55AC. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:39) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:30) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:51:20,248Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:20,250Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:20,261Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:20,263Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:20,266Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:51:20,267Z [main] internal.Verifier.verifyContracts - Error validating transaction FB4743B4BEF61AD7C077AB43741BA756326FB80A2C32EB07163243789912A8B9. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:18) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:51:20,270Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:20,273Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:20,276Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T11:51:20,276Z [main] internal.Verifier.verifyContracts - Error validating transaction FB4743B4BEF61AD7C077AB43741BA756326FB80A2C32EB07163243789912A8B9. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:18) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T11:51:20,297Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:20,306Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:21,126Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T11:51:21,129Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T12:28:31,202Z [Test worker] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-122829.866/custom-cordapp_1_4_398c540f-ced5-4003-8f32-0446006f3a6b.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T12:28:31,350Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-122829.866/custom-cordapp_1_4_398c540f-ced5-4003-8f32-0446006f3a6b.jar {}
[INFO ] 2019-08-20T12:28:31,497Z [Test worker] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T12:38:28,062Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123827.389/custom-cordapp_1_4_397d1393-91d8-44bc-bfe2-5d3983c0ce9f.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T12:38:28,104Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123827.389/custom-cordapp_1_4_397d1393-91d8-44bc-bfe2-5d3983c0ce9f.jar {}
[INFO ] 2019-08-20T12:38:28,166Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T12:38:29,385Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123827.389/custom-cordapp_1_4_397d1393-91d8-44bc-bfe2-5d3983c0ce9f.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T12:38:29,389Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123827.389/custom-cordapp_1_4_397d1393-91d8-44bc-bfe2-5d3983c0ce9f.jar {}
[INFO ] 2019-08-20T12:38:29,418Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T12:38:29,563Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:29,578Z [main] contracts.AttachmentConstraint.warnOnce - Found state bootcamp.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[WARN ] 2019-08-20T12:38:31,302Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T12:38:31,332Z [main] internal.Verifier.verifyContracts - Error validating transaction 938CA2CB047ED73766D7C3785E8690A07A856AD10EF47C10325B8A024BCCE466. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: 
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:30) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T12:38:31,336Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:31,341Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:31,365Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:31,368Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:31,375Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T12:38:31,376Z [main] internal.Verifier.verifyContracts - Error validating transaction 8590861C082721948DE40976A8EB254C8635518016B94522619ED750B90E4DE6. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:18) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T12:38:31,383Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:31,387Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:31,392Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T12:38:31,392Z [main] internal.Verifier.verifyContracts - Error validating transaction 8590861C082721948DE40976A8EB254C8635518016B94522619ED750B90E4DE6. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:18) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T12:38:31,444Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:31,470Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:32,984Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:32,989Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T12:38:44,449Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123843.765/custom-cordapp_1_4_5917ac48-1f0f-4b09-8ac0-f863aa60ba92.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T12:38:44,492Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123843.765/custom-cordapp_1_4_5917ac48-1f0f-4b09-8ac0-f863aa60ba92.jar {}
[INFO ] 2019-08-20T12:38:44,552Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T12:38:45,936Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:45,949Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:46,020Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:46,032Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:47,732Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:47,736Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T12:38:47,762Z [main] internal.Verifier.verifyContracts - Error validating transaction A51477CBBD895DBC6B64DF6C6C25D882169D15102B6CEB9224D25B0935F7FAD9. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:21) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T12:38:47,769Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:47,773Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T12:38:47,773Z [main] internal.Verifier.verifyContracts - Error validating transaction A51477CBBD895DBC6B64DF6C6C25D882169D15102B6CEB9224D25B0935F7FAD9. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:21) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T12:38:47,818Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:47,844Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:49,343Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:49,349Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T12:38:49,370Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123843.765/custom-cordapp_1_4_5917ac48-1f0f-4b09-8ac0-f863aa60ba92.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T12:38:49,371Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123843.765/custom-cordapp_1_4_5917ac48-1f0f-4b09-8ac0-f863aa60ba92.jar {}
[INFO ] 2019-08-20T12:38:49,395Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T12:38:49,473Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:49,492Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:50,541Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:50,544Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T12:38:50,568Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123843.765/custom-cordapp_1_4_5917ac48-1f0f-4b09-8ac0-f863aa60ba92.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T12:38:50,569Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123843.765/custom-cordapp_1_4_5917ac48-1f0f-4b09-8ac0-f863aa60ba92.jar {}
[INFO ] 2019-08-20T12:38:50,594Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T12:38:50,652Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123843.765/custom-cordapp_1_4_5917ac48-1f0f-4b09-8ac0-f863aa60ba92.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T12:38:50,653Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123843.765/custom-cordapp_1_4_5917ac48-1f0f-4b09-8ac0-f863aa60ba92.jar {}
[INFO ] 2019-08-20T12:38:50,674Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T12:38:50,749Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:50,763Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:52,147Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:52,148Z [main] internal.Verifier.warnOnce - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-20T12:38:52,149Z [main] internal.Verifier.verifyContracts - Error validating transaction 15D54F75C4E2294C6C7902659676B9EAA24B858B19373B2F0E182DAA71579E59. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:32) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T12:38:52,152Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T12:38:52,152Z [main] internal.Verifier.verifyContracts - Error validating transaction 15D54F75C4E2294C6C7902659676B9EAA24B858B19373B2F0E182DAA71579E59. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:32) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T12:38:52,180Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:52,194Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:53,475Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:53,482Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T12:38:53,502Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123843.765/custom-cordapp_1_4_5917ac48-1f0f-4b09-8ac0-f863aa60ba92.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T12:38:53,502Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123843.765/custom-cordapp_1_4_5917ac48-1f0f-4b09-8ac0-f863aa60ba92.jar {}
[INFO ] 2019-08-20T12:38:53,520Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T12:38:53,581Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:53,593Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:54,852Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T12:38:54,852Z [main] internal.Verifier.verifyContracts - Error validating transaction 0FE7D538FF7D145D646CF326197777C8F13E64CB28AA38935DF78F7AA148F53C. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: 
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T12:38:54,857Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T12:38:54,857Z [main] internal.Verifier.verifyContracts - Error validating transaction 0FE7D538FF7D145D646CF326197777C8F13E64CB28AA38935DF78F7AA148F53C. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: 
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T12:38:54,883Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:54,899Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:55,928Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:55,932Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T12:38:55,948Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123843.765/custom-cordapp_1_4_5917ac48-1f0f-4b09-8ac0-f863aa60ba92.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T12:38:55,949Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123843.765/custom-cordapp_1_4_5917ac48-1f0f-4b09-8ac0-f863aa60ba92.jar {}
[INFO ] 2019-08-20T12:38:55,962Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T12:38:56,014Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:56,026Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:57,163Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T12:38:57,163Z [main] internal.Verifier.verifyContracts - Error validating transaction 31050E592E1A67868AC9F8B09FFDFCB45BAD31F7782ADC7A25D5785013BEC10C. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T12:38:57,169Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T12:38:57,170Z [main] internal.Verifier.verifyContracts - Error validating transaction 31050E592E1A67868AC9F8B09FFDFCB45BAD31F7782ADC7A25D5785013BEC10C. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T12:38:57,192Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:57,204Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:58,482Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:58,497Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T12:38:58,538Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123843.765/custom-cordapp_1_4_5917ac48-1f0f-4b09-8ac0-f863aa60ba92.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T12:38:58,539Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123843.765/custom-cordapp_1_4_5917ac48-1f0f-4b09-8ac0-f863aa60ba92.jar {}
[INFO ] 2019-08-20T12:38:58,558Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T12:38:58,644Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:58,654Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:59,797Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:59,801Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T12:38:59,822Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123843.765/custom-cordapp_1_4_5917ac48-1f0f-4b09-8ac0-f863aa60ba92.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T12:38:59,822Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-123843.765/custom-cordapp_1_4_5917ac48-1f0f-4b09-8ac0-f863aa60ba92.jar {}
[INFO ] 2019-08-20T12:38:59,844Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T12:38:59,905Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:38:59,907Z [main] contracts.AttachmentConstraint.warnOnce - Found state bootcamp.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[WARN ] 2019-08-20T12:39:00,920Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T12:39:00,921Z [main] internal.Verifier.verifyContracts - Error validating transaction C5070CBA63F88BD0A41C17F586A9956DA84AE6DA5E9DE19BEE210A09AD355571. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: 
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:30) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T12:39:00,925Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:39:00,927Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:39:00,939Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:39:00,942Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:39:00,945Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T12:39:00,946Z [main] internal.Verifier.verifyContracts - Error validating transaction B79BE1F1596C7164F48E770F72262D712245DC3D0431133C25C349A526F0FC72. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:18) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T12:39:00,949Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:39:00,951Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:39:00,954Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T12:39:00,954Z [main] internal.Verifier.verifyContracts - Error validating transaction B79BE1F1596C7164F48E770F72262D712245DC3D0431133C25C349A526F0FC72. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:18) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T12:39:00,988Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:39:01,001Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:39:02,231Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T12:39:02,235Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T14:42:59,942Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144259.270/custom-cordapp_1_4_e9f961cd-fff6-42ae-8d58-ee89c0cb8444.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T14:43:00,022Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144259.270/custom-cordapp_1_4_e9f961cd-fff6-42ae-8d58-ee89c0cb8444.jar {}
[INFO ] 2019-08-20T14:43:00,086Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T14:43:01,312Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:01,316Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:01,364Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:01,364Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:03,094Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:03,099Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:43:03,125Z [main] internal.Verifier.verifyContracts - Error validating transaction EAD8F23ED281384BFB6083394B6F840BCDA84B50111D6EBE9EF0608893A10B92. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:21) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:43:03,133Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:03,137Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:43:03,137Z [main] internal.Verifier.verifyContracts - Error validating transaction EAD8F23ED281384BFB6083394B6F840BCDA84B50111D6EBE9EF0608893A10B92. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:21) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:43:03,181Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:03,247Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:04,800Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:04,806Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T14:43:04,828Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144259.270/custom-cordapp_1_4_e9f961cd-fff6-42ae-8d58-ee89c0cb8444.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T14:43:04,828Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144259.270/custom-cordapp_1_4_e9f961cd-fff6-42ae-8d58-ee89c0cb8444.jar {}
[INFO ] 2019-08-20T14:43:04,852Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T14:43:04,922Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:04,941Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:06,112Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:06,116Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T14:43:06,140Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144259.270/custom-cordapp_1_4_e9f961cd-fff6-42ae-8d58-ee89c0cb8444.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T14:43:06,140Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144259.270/custom-cordapp_1_4_e9f961cd-fff6-42ae-8d58-ee89c0cb8444.jar {}
[INFO ] 2019-08-20T14:43:06,165Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T14:43:06,223Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144259.270/custom-cordapp_1_4_e9f961cd-fff6-42ae-8d58-ee89c0cb8444.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T14:43:06,223Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144259.270/custom-cordapp_1_4_e9f961cd-fff6-42ae-8d58-ee89c0cb8444.jar {}
[INFO ] 2019-08-20T14:43:06,247Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T14:43:06,312Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:06,326Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:07,908Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:07,910Z [main] internal.Verifier.warnOnce - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-20T14:43:07,910Z [main] internal.Verifier.verifyContracts - Error validating transaction 3C4B6A04761AE47AEEF388F3362402FB5793D2FD2999E05DB6111DB28611D6CB. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:32) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:43:07,913Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:43:07,913Z [main] internal.Verifier.verifyContracts - Error validating transaction 3C4B6A04761AE47AEEF388F3362402FB5793D2FD2999E05DB6111DB28611D6CB. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:32) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:43:07,958Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:07,971Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:09,201Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:09,205Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T14:43:09,222Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144259.270/custom-cordapp_1_4_e9f961cd-fff6-42ae-8d58-ee89c0cb8444.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T14:43:09,222Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144259.270/custom-cordapp_1_4_e9f961cd-fff6-42ae-8d58-ee89c0cb8444.jar {}
[INFO ] 2019-08-20T14:43:09,245Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T14:43:09,303Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:09,317Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:10,535Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:43:10,536Z [main] internal.Verifier.verifyContracts - Error validating transaction 139BB64C49DA46A5CA603623C00E81B57A5BF2F590915C8B3FB83A5754A772D1. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:43:10,540Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:43:10,540Z [main] internal.Verifier.verifyContracts - Error validating transaction 139BB64C49DA46A5CA603623C00E81B57A5BF2F590915C8B3FB83A5754A772D1. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:43:10,561Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:10,573Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:11,619Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:11,624Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T14:43:11,641Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144259.270/custom-cordapp_1_4_e9f961cd-fff6-42ae-8d58-ee89c0cb8444.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T14:43:11,641Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144259.270/custom-cordapp_1_4_e9f961cd-fff6-42ae-8d58-ee89c0cb8444.jar {}
[INFO ] 2019-08-20T14:43:11,664Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T14:43:11,718Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:11,729Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:12,581Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:43:12,581Z [main] internal.Verifier.verifyContracts - Error validating transaction 6DA03F8505A9C59030DA926CAFD69955F0FDFAAB042A71CA4267374083582BAF. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:43:12,586Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:43:12,587Z [main] internal.Verifier.verifyContracts - Error validating transaction 6DA03F8505A9C59030DA926CAFD69955F0FDFAAB042A71CA4267374083582BAF. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:43:12,610Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:12,620Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:13,349Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:13,355Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T14:43:13,371Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144259.270/custom-cordapp_1_4_e9f961cd-fff6-42ae-8d58-ee89c0cb8444.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T14:43:13,371Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144259.270/custom-cordapp_1_4_e9f961cd-fff6-42ae-8d58-ee89c0cb8444.jar {}
[INFO ] 2019-08-20T14:43:13,394Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T14:43:13,446Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:13,455Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:14,494Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:14,498Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T14:43:14,517Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144259.270/custom-cordapp_1_4_e9f961cd-fff6-42ae-8d58-ee89c0cb8444.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T14:43:14,517Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144259.270/custom-cordapp_1_4_e9f961cd-fff6-42ae-8d58-ee89c0cb8444.jar {}
[INFO ] 2019-08-20T14:43:14,540Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T14:43:14,591Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:14,593Z [main] contracts.AttachmentConstraint.warnOnce - Found state bootcamp.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[WARN ] 2019-08-20T14:43:15,409Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:43:15,410Z [main] internal.Verifier.verifyContracts - Error validating transaction C412842B836E96CD87178BFEAE1E063D22C4CFB30581A7EB2B1398FDBDB5A488. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:30) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:43:15,412Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:15,414Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:15,426Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:15,428Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:15,432Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:43:15,432Z [main] internal.Verifier.verifyContracts - Error validating transaction 65EE45E87A222B174F6011E54F4D6EAF01376EAB91F2217E648A73D151188269. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:18) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:43:15,435Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:15,437Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:15,439Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:43:15,440Z [main] internal.Verifier.verifyContracts - Error validating transaction 65EE45E87A222B174F6011E54F4D6EAF01376EAB91F2217E648A73D151188269. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:18) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:43:15,458Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:15,467Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:16,206Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:43:16,209Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T14:44:15,461Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144414.834/custom-cordapp_1_4_d98f64bb-e373-455f-986f-3bbb47a1831b.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T14:44:15,534Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144414.834/custom-cordapp_1_4_d98f64bb-e373-455f-986f-3bbb47a1831b.jar {}
[INFO ] 2019-08-20T14:44:15,595Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T14:44:16,925Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:16,930Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:16,962Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:16,963Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:18,727Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:18,731Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:44:18,779Z [main] internal.Verifier.verifyContracts - Error validating transaction 945EC6AB1BEC4425BA64E71B86E6B93112314E53D116A338267A62D678E35D2F. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:21) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:44:18,785Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:18,789Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:44:18,789Z [main] internal.Verifier.verifyContracts - Error validating transaction 945EC6AB1BEC4425BA64E71B86E6B93112314E53D116A338267A62D678E35D2F. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:21) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:44:18,839Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:18,864Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:20,408Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:20,414Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T14:44:20,435Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144414.834/custom-cordapp_1_4_d98f64bb-e373-455f-986f-3bbb47a1831b.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T14:44:20,435Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144414.834/custom-cordapp_1_4_d98f64bb-e373-455f-986f-3bbb47a1831b.jar {}
[INFO ] 2019-08-20T14:44:20,460Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T14:44:20,535Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:20,554Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:21,657Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:21,661Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T14:44:21,685Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144414.834/custom-cordapp_1_4_d98f64bb-e373-455f-986f-3bbb47a1831b.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T14:44:21,685Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144414.834/custom-cordapp_1_4_d98f64bb-e373-455f-986f-3bbb47a1831b.jar {}
[INFO ] 2019-08-20T14:44:21,710Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T14:44:21,770Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144414.834/custom-cordapp_1_4_d98f64bb-e373-455f-986f-3bbb47a1831b.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T14:44:21,770Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144414.834/custom-cordapp_1_4_d98f64bb-e373-455f-986f-3bbb47a1831b.jar {}
[INFO ] 2019-08-20T14:44:21,795Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T14:44:21,857Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:21,870Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:23,092Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:23,094Z [main] internal.Verifier.warnOnce - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-20T14:44:23,094Z [main] internal.Verifier.verifyContracts - Error validating transaction 6E7B493F372B59F93C32B69D5834F3D51F380429439420B2B02B1F49EF2395B8. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:32) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:44:23,097Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:44:23,098Z [main] internal.Verifier.verifyContracts - Error validating transaction 6E7B493F372B59F93C32B69D5834F3D51F380429439420B2B02B1F49EF2395B8. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:32) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:44:23,127Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:23,140Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:24,184Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:24,187Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T14:44:24,206Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144414.834/custom-cordapp_1_4_d98f64bb-e373-455f-986f-3bbb47a1831b.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T14:44:24,206Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144414.834/custom-cordapp_1_4_d98f64bb-e373-455f-986f-3bbb47a1831b.jar {}
[INFO ] 2019-08-20T14:44:24,223Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T14:44:24,282Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:24,294Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:25,277Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:44:25,277Z [main] internal.Verifier.verifyContracts - Error validating transaction 4AA912326D7D09097DBFF192976E894295291643313C4292916D70619F89CDAB. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:44:25,282Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:44:25,282Z [main] internal.Verifier.verifyContracts - Error validating transaction 4AA912326D7D09097DBFF192976E894295291643313C4292916D70619F89CDAB. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:44:25,306Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:25,318Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:26,456Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:26,461Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T14:44:26,478Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144414.834/custom-cordapp_1_4_d98f64bb-e373-455f-986f-3bbb47a1831b.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T14:44:26,478Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144414.834/custom-cordapp_1_4_d98f64bb-e373-455f-986f-3bbb47a1831b.jar {}
[INFO ] 2019-08-20T14:44:26,497Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T14:44:26,554Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:26,566Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:27,452Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:44:27,453Z [main] internal.Verifier.verifyContracts - Error validating transaction E2CFE06C58DD45C33591081C55BC41BE896D8C977FD98970968E51341799CA5E. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:44:27,458Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:44:27,458Z [main] internal.Verifier.verifyContracts - Error validating transaction E2CFE06C58DD45C33591081C55BC41BE896D8C977FD98970968E51341799CA5E. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:44:27,481Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:27,491Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:28,372Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:28,376Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T14:44:28,391Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144414.834/custom-cordapp_1_4_d98f64bb-e373-455f-986f-3bbb47a1831b.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T14:44:28,391Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144414.834/custom-cordapp_1_4_d98f64bb-e373-455f-986f-3bbb47a1831b.jar {}
[INFO ] 2019-08-20T14:44:28,414Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T14:44:28,469Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:28,480Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:29,478Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:29,485Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T14:44:29,507Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144414.834/custom-cordapp_1_4_d98f64bb-e373-455f-986f-3bbb47a1831b.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T14:44:29,508Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-144414.834/custom-cordapp_1_4_d98f64bb-e373-455f-986f-3bbb47a1831b.jar {}
[INFO ] 2019-08-20T14:44:29,530Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T14:44:29,583Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:29,586Z [main] contracts.AttachmentConstraint.warnOnce - Found state bootcamp.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[WARN ] 2019-08-20T14:44:30,364Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:44:30,365Z [main] internal.Verifier.verifyContracts - Error validating transaction C523A1F8824787AF6E072ECD6A0B7763BA7CA5CA34F06F951640420B21035B95. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:30) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:44:30,368Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:30,371Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:30,384Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:30,389Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:30,397Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:44:30,397Z [main] internal.Verifier.verifyContracts - Error validating transaction FC4B572345A193C700A4A99438D08A333BA6BDB531D31A1D0BB65F5B1F5A5EA0. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:18) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:44:30,404Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:30,406Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:30,410Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T14:44:30,411Z [main] internal.Verifier.verifyContracts - Error validating transaction FC4B572345A193C700A4A99438D08A333BA6BDB531D31A1D0BB65F5B1F5A5EA0. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:18) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T14:44:30,433Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:30,444Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:31,306Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T14:44:31,309Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:09:40,616Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-150939.940/custom-cordapp_1_4_2b930589-33ec-4b26-bb8e-ccd6d5d4ec74.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:09:40,834Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-150939.940/custom-cordapp_1_4_2b930589-33ec-4b26-bb8e-ccd6d5d4ec74.jar {}
[INFO ] 2019-08-20T15:09:40,895Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:09:42,271Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:42,275Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:42,307Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:42,307Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:44,163Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:44,168Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:09:44,196Z [main] internal.Verifier.verifyContracts - Error validating transaction BFC268CE7084D1A922A363E58A3BAB7BCF3CCA99BB6B2D2FBE36C782676964E5. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:21) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:09:44,203Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:44,206Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:09:44,207Z [main] internal.Verifier.verifyContracts - Error validating transaction BFC268CE7084D1A922A363E58A3BAB7BCF3CCA99BB6B2D2FBE36C782676964E5. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:21) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:09:44,245Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:44,269Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:45,873Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:45,879Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:09:45,900Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-150939.940/custom-cordapp_1_4_2b930589-33ec-4b26-bb8e-ccd6d5d4ec74.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:09:45,900Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-150939.940/custom-cordapp_1_4_2b930589-33ec-4b26-bb8e-ccd6d5d4ec74.jar {}
[INFO ] 2019-08-20T15:09:45,925Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:09:46,000Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:46,019Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:47,023Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:47,027Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:09:47,051Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-150939.940/custom-cordapp_1_4_2b930589-33ec-4b26-bb8e-ccd6d5d4ec74.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:09:47,051Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-150939.940/custom-cordapp_1_4_2b930589-33ec-4b26-bb8e-ccd6d5d4ec74.jar {}
[INFO ] 2019-08-20T15:09:47,074Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T15:09:47,132Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-150939.940/custom-cordapp_1_4_2b930589-33ec-4b26-bb8e-ccd6d5d4ec74.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:09:47,132Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-150939.940/custom-cordapp_1_4_2b930589-33ec-4b26-bb8e-ccd6d5d4ec74.jar {}
[INFO ] 2019-08-20T15:09:47,156Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:09:47,217Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:47,230Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:48,466Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:48,468Z [main] internal.Verifier.warnOnce - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-20T15:09:48,468Z [main] internal.Verifier.verifyContracts - Error validating transaction 525F4D8FEBA1C3F4DCCFC9762C87F5D5908A7C384200907D61DD7A2341197AB5. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:32) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:09:48,471Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:09:48,472Z [main] internal.Verifier.verifyContracts - Error validating transaction 525F4D8FEBA1C3F4DCCFC9762C87F5D5908A7C384200907D61DD7A2341197AB5. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:32) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:09:48,500Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:48,515Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:49,498Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:49,501Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:09:49,518Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-150939.940/custom-cordapp_1_4_2b930589-33ec-4b26-bb8e-ccd6d5d4ec74.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:09:49,519Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-150939.940/custom-cordapp_1_4_2b930589-33ec-4b26-bb8e-ccd6d5d4ec74.jar {}
[INFO ] 2019-08-20T15:09:49,542Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:09:49,600Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:49,613Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:50,758Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:09:50,758Z [main] internal.Verifier.verifyContracts - Error validating transaction A21491D4F135A273A3CB9CD8BBDA2227D9FC990DDE0AFB518C33672D1911FB65. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:09:50,762Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:09:50,762Z [main] internal.Verifier.verifyContracts - Error validating transaction A21491D4F135A273A3CB9CD8BBDA2227D9FC990DDE0AFB518C33672D1911FB65. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:09:50,785Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:50,797Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:51,652Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:51,657Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:09:51,673Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-150939.940/custom-cordapp_1_4_2b930589-33ec-4b26-bb8e-ccd6d5d4ec74.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:09:51,673Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-150939.940/custom-cordapp_1_4_2b930589-33ec-4b26-bb8e-ccd6d5d4ec74.jar {}
[INFO ] 2019-08-20T15:09:51,696Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:09:51,751Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:51,761Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:52,611Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:09:52,611Z [main] internal.Verifier.verifyContracts - Error validating transaction 92799374555C810E0B57CFA880175C1DA39CEDED83333F2BB57B93D4F490BA4E. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:09:52,617Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:09:52,617Z [main] internal.Verifier.verifyContracts - Error validating transaction 92799374555C810E0B57CFA880175C1DA39CEDED83333F2BB57B93D4F490BA4E. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:09:52,639Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:52,648Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:53,671Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:53,674Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:09:53,689Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-150939.940/custom-cordapp_1_4_2b930589-33ec-4b26-bb8e-ccd6d5d4ec74.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:09:53,689Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-150939.940/custom-cordapp_1_4_2b930589-33ec-4b26-bb8e-ccd6d5d4ec74.jar {}
[INFO ] 2019-08-20T15:09:53,712Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:09:53,762Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:53,773Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:54,586Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:54,589Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:09:54,605Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-150939.940/custom-cordapp_1_4_2b930589-33ec-4b26-bb8e-ccd6d5d4ec74.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:09:54,606Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-150939.940/custom-cordapp_1_4_2b930589-33ec-4b26-bb8e-ccd6d5d4ec74.jar {}
[INFO ] 2019-08-20T15:09:54,627Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:09:54,675Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:54,677Z [main] contracts.AttachmentConstraint.warnOnce - Found state bootcamp.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[WARN ] 2019-08-20T15:09:55,550Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:09:55,550Z [main] internal.Verifier.verifyContracts - Error validating transaction CE074FB21CDA8806A7FF143F5B09B15EEB843847340E9CBAE6A8CABDC9566486. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:30) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:09:55,554Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:55,556Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:55,569Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:55,571Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:55,575Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:09:55,575Z [main] internal.Verifier.verifyContracts - Error validating transaction E8D028D97445765CC73E95F9B212B2637AC65E243CE1A5437292211CD0EB90EC. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:18) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:09:55,578Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:55,580Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:55,583Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:09:55,583Z [main] internal.Verifier.verifyContracts - Error validating transaction E8D028D97445765CC73E95F9B212B2637AC65E243CE1A5437292211CD0EB90EC. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:18) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:09:55,603Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:55,613Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:56,612Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:09:56,616Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:12:14,957Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151214.310/custom-cordapp_1_4_29b90c18-9ad9-4711-b2d9-dbc2ae626037.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:12:15,037Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151214.310/custom-cordapp_1_4_29b90c18-9ad9-4711-b2d9-dbc2ae626037.jar {}
[INFO ] 2019-08-20T15:12:15,099Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:12:16,357Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:16,364Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:16,400Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:16,400Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:18,151Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:18,155Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:12:18,182Z [main] internal.Verifier.verifyContracts - Error validating transaction 5DAD084C0D9EAB65AB435932872606DFBBF237FEB3160DBE631FB0109434C427. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:21) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:12:18,188Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:18,191Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:12:18,192Z [main] internal.Verifier.verifyContracts - Error validating transaction 5DAD084C0D9EAB65AB435932872606DFBBF237FEB3160DBE631FB0109434C427. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:21) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:12:18,236Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:18,258Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:19,791Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:19,796Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:12:19,818Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151214.310/custom-cordapp_1_4_29b90c18-9ad9-4711-b2d9-dbc2ae626037.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:12:19,818Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151214.310/custom-cordapp_1_4_29b90c18-9ad9-4711-b2d9-dbc2ae626037.jar {}
[INFO ] 2019-08-20T15:12:19,844Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:12:19,927Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:19,951Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:20,885Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:20,889Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:12:20,912Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151214.310/custom-cordapp_1_4_29b90c18-9ad9-4711-b2d9-dbc2ae626037.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:12:20,913Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151214.310/custom-cordapp_1_4_29b90c18-9ad9-4711-b2d9-dbc2ae626037.jar {}
[INFO ] 2019-08-20T15:12:20,937Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T15:12:20,993Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151214.310/custom-cordapp_1_4_29b90c18-9ad9-4711-b2d9-dbc2ae626037.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:12:20,993Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151214.310/custom-cordapp_1_4_29b90c18-9ad9-4711-b2d9-dbc2ae626037.jar {}
[INFO ] 2019-08-20T15:12:21,014Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:12:21,080Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:21,094Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:22,275Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:22,277Z [main] internal.Verifier.warnOnce - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-20T15:12:22,277Z [main] internal.Verifier.verifyContracts - Error validating transaction 2BDA39EDF12EB9CDC0D6491B649257525948280E99581F16D9100D982937359C. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:32) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:12:22,280Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:12:22,281Z [main] internal.Verifier.verifyContracts - Error validating transaction 2BDA39EDF12EB9CDC0D6491B649257525948280E99581F16D9100D982937359C. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:32) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:12:22,308Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:22,321Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:23,316Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:23,320Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:12:23,338Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151214.310/custom-cordapp_1_4_29b90c18-9ad9-4711-b2d9-dbc2ae626037.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:12:23,338Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151214.310/custom-cordapp_1_4_29b90c18-9ad9-4711-b2d9-dbc2ae626037.jar {}
[INFO ] 2019-08-20T15:12:23,363Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:12:23,419Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:23,432Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:24,357Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:12:24,357Z [main] internal.Verifier.verifyContracts - Error validating transaction 6417FE4454705C7F875DA8C58067A9FC8DBFF6F3C1C543A5BC70E71BD0611180. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:12:24,362Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:12:24,362Z [main] internal.Verifier.verifyContracts - Error validating transaction 6417FE4454705C7F875DA8C58067A9FC8DBFF6F3C1C543A5BC70E71BD0611180. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:12:24,386Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:24,397Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:25,537Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:25,542Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:12:25,558Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151214.310/custom-cordapp_1_4_29b90c18-9ad9-4711-b2d9-dbc2ae626037.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:12:25,558Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151214.310/custom-cordapp_1_4_29b90c18-9ad9-4711-b2d9-dbc2ae626037.jar {}
[INFO ] 2019-08-20T15:12:25,582Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:12:25,635Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:25,645Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:26,490Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:12:26,490Z [main] internal.Verifier.verifyContracts - Error validating transaction 507FF790DED8E4BBF0D3044556E8E5CFC406E86287B37B90DB42311B077D4C1C. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:12:26,497Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:12:26,498Z [main] internal.Verifier.verifyContracts - Error validating transaction 507FF790DED8E4BBF0D3044556E8E5CFC406E86287B37B90DB42311B077D4C1C. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:12:26,521Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:26,531Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:27,323Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:27,327Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:12:27,341Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151214.310/custom-cordapp_1_4_29b90c18-9ad9-4711-b2d9-dbc2ae626037.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:12:27,341Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151214.310/custom-cordapp_1_4_29b90c18-9ad9-4711-b2d9-dbc2ae626037.jar {}
[INFO ] 2019-08-20T15:12:27,358Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:12:27,403Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:27,413Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:28,316Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:28,320Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:12:28,342Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151214.310/custom-cordapp_1_4_29b90c18-9ad9-4711-b2d9-dbc2ae626037.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:12:28,342Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151214.310/custom-cordapp_1_4_29b90c18-9ad9-4711-b2d9-dbc2ae626037.jar {}
[INFO ] 2019-08-20T15:12:28,375Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:12:28,412Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:28,414Z [main] contracts.AttachmentConstraint.warnOnce - Found state bootcamp.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[WARN ] 2019-08-20T15:12:29,172Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:12:29,174Z [main] internal.Verifier.verifyContracts - Error validating transaction DD026F7F80B961D3526DBAEF7867C1A8657BE32DD2DBF16010DDFC4ACE1B8131. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:35) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:30) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:12:29,180Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:29,182Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:29,194Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:29,198Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:29,202Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:12:29,202Z [main] internal.Verifier.verifyContracts - Error validating transaction 01F75EC6D5A63E239B4FE2BDEC934A9CD89C8A182904781AD29CEDCDD2B9F30F. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:18) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:12:29,205Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:29,207Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:29,210Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:12:29,210Z [main] internal.Verifier.verifyContracts - Error validating transaction 01F75EC6D5A63E239B4FE2BDEC934A9CD89C8A182904781AD29CEDCDD2B9F30F. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:18) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:12:29,231Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:29,246Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:30,001Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:12:30,005Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:18:23,263Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151822.599/custom-cordapp_1_4_95362227-fedb-4b10-87ee-67f3bdb203c9.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:18:23,302Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151822.599/custom-cordapp_1_4_95362227-fedb-4b10-87ee-67f3bdb203c9.jar {}
[INFO ] 2019-08-20T15:18:23,359Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:18:24,570Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:24,576Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:24,611Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:24,611Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:26,204Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:26,207Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:18:26,231Z [main] internal.Verifier.verifyContracts - Error validating transaction DB3F5B8E84A140F7C4AC2183D4753CE6519FAA63948DB0DEEF8F38CCFFF298DD. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:18:26,237Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:26,240Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:18:26,240Z [main] internal.Verifier.verifyContracts - Error validating transaction DB3F5B8E84A140F7C4AC2183D4753CE6519FAA63948DB0DEEF8F38CCFFF298DD. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:18:26,281Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:26,304Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:27,845Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:27,850Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:18:27,871Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151822.599/custom-cordapp_1_4_95362227-fedb-4b10-87ee-67f3bdb203c9.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:18:27,871Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151822.599/custom-cordapp_1_4_95362227-fedb-4b10-87ee-67f3bdb203c9.jar {}
[INFO ] 2019-08-20T15:18:27,895Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:18:27,969Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:27,989Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:29,005Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:18:29,006Z [main] internal.Verifier.verifyContracts - Error validating transaction 3949469BCFCF27CC06861332725EDF2F6D0DE0EA30EDB2271CB29861CFFDF4C9. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:46) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$14(ContractTests.java:171) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:167) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:18:29,010Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:18:29,010Z [main] internal.Verifier.verifyContracts - Error validating transaction 3949469BCFCF27CC06861332725EDF2F6D0DE0EA30EDB2271CB29861CFFDF4C9. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:46) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$14(ContractTests.java:171) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:167) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:18:29,042Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:29,057Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:30,257Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:18:30,257Z [main] internal.Verifier.verifyContracts - Error validating transaction 4E2A49D27530B6E2547CE71DB4464F679BF179A2391494FC3C534D5F3D97B1AD. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:46) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$15(ContractTests.java:179) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:175) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:18:30,261Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:18:30,261Z [main] internal.Verifier.verifyContracts - Error validating transaction 4E2A49D27530B6E2547CE71DB4464F679BF179A2391494FC3C534D5F3D97B1AD. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:46) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$15(ContractTests.java:179) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:175) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:18:30,293Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:30,306Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:31,315Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:31,319Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:31,347Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:31,360Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:32,288Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:32,291Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:18:32,311Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151822.599/custom-cordapp_1_4_95362227-fedb-4b10-87ee-67f3bdb203c9.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:18:32,311Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151822.599/custom-cordapp_1_4_95362227-fedb-4b10-87ee-67f3bdb203c9.jar {}
[INFO ] 2019-08-20T15:18:32,334Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T15:18:32,391Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151822.599/custom-cordapp_1_4_95362227-fedb-4b10-87ee-67f3bdb203c9.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:18:32,391Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151822.599/custom-cordapp_1_4_95362227-fedb-4b10-87ee-67f3bdb203c9.jar {}
[INFO ] 2019-08-20T15:18:32,417Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:18:32,474Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:32,486Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:33,589Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:33,590Z [main] internal.Verifier.warnOnce - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-20T15:18:33,590Z [main] internal.Verifier.verifyContracts - Error validating transaction D38D07D86766F5E4E3D80427B1CC8D49329996A2503F04D401315081BE74CE02. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:34) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:18:33,594Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:18:33,594Z [main] internal.Verifier.verifyContracts - Error validating transaction D38D07D86766F5E4E3D80427B1CC8D49329996A2503F04D401315081BE74CE02. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:34) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:18:33,618Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:33,629Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:34,564Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:34,568Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:18:34,585Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151822.599/custom-cordapp_1_4_95362227-fedb-4b10-87ee-67f3bdb203c9.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:18:34,586Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151822.599/custom-cordapp_1_4_95362227-fedb-4b10-87ee-67f3bdb203c9.jar {}
[INFO ] 2019-08-20T15:18:34,609Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:18:34,662Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:34,673Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:35,593Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:18:35,593Z [main] internal.Verifier.verifyContracts - Error validating transaction 2B20C94DAEEE3A6A47E58D75CA16632E8652AFF41C49196DF93EF8DE7775537F. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:37) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:18:35,597Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:18:35,597Z [main] internal.Verifier.verifyContracts - Error validating transaction 2B20C94DAEEE3A6A47E58D75CA16632E8652AFF41C49196DF93EF8DE7775537F. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:37) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:18:35,619Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:35,630Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:36,712Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:36,716Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:18:36,733Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151822.599/custom-cordapp_1_4_95362227-fedb-4b10-87ee-67f3bdb203c9.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:18:36,733Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151822.599/custom-cordapp_1_4_95362227-fedb-4b10-87ee-67f3bdb203c9.jar {}
[INFO ] 2019-08-20T15:18:36,757Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:18:36,808Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:36,818Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:37,694Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:18:37,695Z [main] internal.Verifier.verifyContracts - Error validating transaction 42C04C61AE2A2CA215F837764573F12766EE5C112377C08A682883551A7CE2B7. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:26) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:18:37,699Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:18:37,700Z [main] internal.Verifier.verifyContracts - Error validating transaction 42C04C61AE2A2CA215F837764573F12766EE5C112377C08A682883551A7CE2B7. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:26) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:18:37,719Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:37,728Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:38,484Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:38,487Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:18:38,503Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151822.599/custom-cordapp_1_4_95362227-fedb-4b10-87ee-67f3bdb203c9.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:18:38,505Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151822.599/custom-cordapp_1_4_95362227-fedb-4b10-87ee-67f3bdb203c9.jar {}
[INFO ] 2019-08-20T15:18:38,529Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:18:38,575Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:38,584Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:39,320Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:39,323Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:18:39,345Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151822.599/custom-cordapp_1_4_95362227-fedb-4b10-87ee-67f3bdb203c9.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:18:39,346Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151822.599/custom-cordapp_1_4_95362227-fedb-4b10-87ee-67f3bdb203c9.jar {}
[INFO ] 2019-08-20T15:18:39,354Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:18:39,395Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:39,397Z [main] contracts.AttachmentConstraint.warnOnce - Found state bootcamp.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[WARN ] 2019-08-20T15:18:40,316Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:18:40,316Z [main] internal.Verifier.verifyContracts - Error validating transaction C72DE63D1426375952DAFE8492B3C945A816AF061BF6ADB13CC8F2943251E8F6. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:37) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:30) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:18:40,319Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:40,322Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:40,350Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:40,352Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:40,356Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:18:40,356Z [main] internal.Verifier.verifyContracts - Error validating transaction 28DA8A93600F5AC97D13BED76D0C2AC8CBE5B570EECC1978E7E6DC36EA95D840. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:22) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:18:40,359Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:40,361Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:40,363Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:18:40,364Z [main] internal.Verifier.verifyContracts - Error validating transaction 28DA8A93600F5AC97D13BED76D0C2AC8CBE5B570EECC1978E7E6DC36EA95D840. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:22) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:18:40,389Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:40,399Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:41,253Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:18:41,256Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:19:50,017Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151949.345/custom-cordapp_1_4_a8f9d1ea-d83c-42f3-9e0f-7756304a8fa6.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:19:50,083Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151949.345/custom-cordapp_1_4_a8f9d1ea-d83c-42f3-9e0f-7756304a8fa6.jar {}
[INFO ] 2019-08-20T15:19:50,145Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:19:51,350Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:51,354Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:51,388Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:51,388Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:53,064Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:53,068Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:19:53,093Z [main] internal.Verifier.verifyContracts - Error validating transaction 9B021A237BF980CB7FE0A931A5C963CB68452693B6F1ED40FA8DF3D5E8883E4E. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:19:53,099Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:53,103Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:19:53,103Z [main] internal.Verifier.verifyContracts - Error validating transaction 9B021A237BF980CB7FE0A931A5C963CB68452693B6F1ED40FA8DF3D5E8883E4E. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:19:53,139Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:53,160Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:54,716Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:54,721Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:19:54,742Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151949.345/custom-cordapp_1_4_a8f9d1ea-d83c-42f3-9e0f-7756304a8fa6.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:19:54,742Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151949.345/custom-cordapp_1_4_a8f9d1ea-d83c-42f3-9e0f-7756304a8fa6.jar {}
[INFO ] 2019-08-20T15:19:54,767Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:19:54,881Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:54,899Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:55,858Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:19:55,859Z [main] internal.Verifier.verifyContracts - Error validating transaction C432B08B8982943D03B883316EE6A163350CA4CCE94E1FFC16D9D2EF8662C54F. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:47) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$14(ContractTests.java:171) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:167) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:19:55,863Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:19:55,863Z [main] internal.Verifier.verifyContracts - Error validating transaction C432B08B8982943D03B883316EE6A163350CA4CCE94E1FFC16D9D2EF8662C54F. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:47) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$14(ContractTests.java:171) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:167) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:19:55,892Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:55,907Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:57,075Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:19:57,076Z [main] internal.Verifier.verifyContracts - Error validating transaction DF71F1E45DD6A4424838A7891605FCDC2BAC55AD21F885F16448CF1415AFD690. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:47) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$15(ContractTests.java:179) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:175) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:19:57,079Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:19:57,080Z [main] internal.Verifier.verifyContracts - Error validating transaction DF71F1E45DD6A4424838A7891605FCDC2BAC55AD21F885F16448CF1415AFD690. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:47) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$15(ContractTests.java:179) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:175) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:19:57,110Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:57,123Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:58,070Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:58,073Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:58,100Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:58,112Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:59,117Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:59,120Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:19:59,139Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151949.345/custom-cordapp_1_4_a8f9d1ea-d83c-42f3-9e0f-7756304a8fa6.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:19:59,139Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151949.345/custom-cordapp_1_4_a8f9d1ea-d83c-42f3-9e0f-7756304a8fa6.jar {}
[INFO ] 2019-08-20T15:19:59,163Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T15:19:59,218Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151949.345/custom-cordapp_1_4_a8f9d1ea-d83c-42f3-9e0f-7756304a8fa6.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:19:59,219Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151949.345/custom-cordapp_1_4_a8f9d1ea-d83c-42f3-9e0f-7756304a8fa6.jar {}
[INFO ] 2019-08-20T15:19:59,242Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:19:59,296Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:19:59,310Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:00,410Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:00,411Z [main] internal.Verifier.warnOnce - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-20T15:20:00,411Z [main] internal.Verifier.verifyContracts - Error validating transaction 4672AD45D583451CDBB215EC3C149E3BC8090E092C2B2D42F70433E306DB5B97. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:34) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:20:00,414Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:20:00,415Z [main] internal.Verifier.verifyContracts - Error validating transaction 4672AD45D583451CDBB215EC3C149E3BC8090E092C2B2D42F70433E306DB5B97. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:34) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:20:00,438Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:00,449Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:01,434Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:01,438Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:20:01,455Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151949.345/custom-cordapp_1_4_a8f9d1ea-d83c-42f3-9e0f-7756304a8fa6.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:20:01,455Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151949.345/custom-cordapp_1_4_a8f9d1ea-d83c-42f3-9e0f-7756304a8fa6.jar {}
[INFO ] 2019-08-20T15:20:01,479Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:20:01,523Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:01,534Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:02,316Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:20:02,317Z [main] internal.Verifier.verifyContracts - Error validating transaction E831F28D25A3DAA18A611BF32D7F8D6510538C8A2C15EFE3B0268E091B058628. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:37) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:20:02,320Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:20:02,320Z [main] internal.Verifier.verifyContracts - Error validating transaction E831F28D25A3DAA18A611BF32D7F8D6510538C8A2C15EFE3B0268E091B058628. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:37) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:20:02,341Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:02,351Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:03,290Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:03,296Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:20:03,316Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151949.345/custom-cordapp_1_4_a8f9d1ea-d83c-42f3-9e0f-7756304a8fa6.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:20:03,317Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151949.345/custom-cordapp_1_4_a8f9d1ea-d83c-42f3-9e0f-7756304a8fa6.jar {}
[INFO ] 2019-08-20T15:20:03,342Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:20:03,392Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:03,401Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:04,185Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:20:04,186Z [main] internal.Verifier.verifyContracts - Error validating transaction 1399EF920883CB3186CAF9EC92420B780D2641D8CCAA2709428C3B6F7ABB8B72. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:26) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:20:04,190Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:20:04,191Z [main] internal.Verifier.verifyContracts - Error validating transaction 1399EF920883CB3186CAF9EC92420B780D2641D8CCAA2709428C3B6F7ABB8B72. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:26) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:20:04,211Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:04,220Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:04,982Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:04,985Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:20:04,998Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151949.345/custom-cordapp_1_4_a8f9d1ea-d83c-42f3-9e0f-7756304a8fa6.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:20:04,998Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151949.345/custom-cordapp_1_4_a8f9d1ea-d83c-42f3-9e0f-7756304a8fa6.jar {}
[INFO ] 2019-08-20T15:20:05,011Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:20:05,056Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:05,064Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:05,819Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:05,823Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:20:05,844Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151949.345/custom-cordapp_1_4_a8f9d1ea-d83c-42f3-9e0f-7756304a8fa6.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:20:05,844Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-151949.345/custom-cordapp_1_4_a8f9d1ea-d83c-42f3-9e0f-7756304a8fa6.jar {}
[INFO ] 2019-08-20T15:20:05,866Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:20:05,915Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:05,917Z [main] contracts.AttachmentConstraint.warnOnce - Found state bootcamp.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[WARN ] 2019-08-20T15:20:06,809Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:20:06,809Z [main] internal.Verifier.verifyContracts - Error validating transaction D6216537C949AA134797201D538F675DB94FE63AE52246159CC3BE0E2598895A. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:37) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:30) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:20:06,812Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:06,814Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:06,828Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:06,830Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:06,833Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:20:06,833Z [main] internal.Verifier.verifyContracts - Error validating transaction 6DEB7745EE61E4FC2DD445E54B764335F1E9D85D8C3E2830C7AC6E34D734F478. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:22) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:20:06,836Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:06,838Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:06,841Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:20:06,841Z [main] internal.Verifier.verifyContracts - Error validating transaction 6DEB7745EE61E4FC2DD445E54B764335F1E9D85D8C3E2830C7AC6E34D734F478. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:22) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:20:06,862Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:06,871Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:07,632Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:20:07,635Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:25:13,120Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-152512.354/custom-cordapp_1_4_19957fa3-661e-4ce5-8255-b994bc8abad8.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:25:13,191Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-152512.354/custom-cordapp_1_4_19957fa3-661e-4ce5-8255-b994bc8abad8.jar {}
[INFO ] 2019-08-20T15:25:13,259Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:25:14,952Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:14,961Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:15,001Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:15,002Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:17,139Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:17,142Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:25:17,170Z [main] internal.Verifier.verifyContracts - Error validating transaction C062565253AD8DD8AA2BE7CFBE3FAD9C97DF84786E9CB5D1610E84CBD988B228. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:25:17,176Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:17,181Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:25:17,182Z [main] internal.Verifier.verifyContracts - Error validating transaction C062565253AD8DD8AA2BE7CFBE3FAD9C97DF84786E9CB5D1610E84CBD988B228. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:25:17,224Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:17,252Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:19,324Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:19,331Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:25:19,357Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-152512.354/custom-cordapp_1_4_19957fa3-661e-4ce5-8255-b994bc8abad8.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:25:19,357Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-152512.354/custom-cordapp_1_4_19957fa3-661e-4ce5-8255-b994bc8abad8.jar {}
[INFO ] 2019-08-20T15:25:19,382Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:25:19,468Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:19,493Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:21,206Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:25:21,206Z [main] internal.Verifier.verifyContracts - Error validating transaction E2557D9B267EB7EE57D6D3F862BF54FA9FF628CE0C6952BB29993527743B1C02. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:47) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$14(ContractTests.java:171) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:167) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:25:21,210Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:25:21,211Z [main] internal.Verifier.verifyContracts - Error validating transaction E2557D9B267EB7EE57D6D3F862BF54FA9FF628CE0C6952BB29993527743B1C02. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:47) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$14(ContractTests.java:171) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:167) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:25:21,254Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:21,276Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:23,041Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:25:23,041Z [main] internal.Verifier.verifyContracts - Error validating transaction 523A1CCDE98DF3EA2FC3496154904D5972D17D1A1CE277B432D40D5AD11E941B. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:47) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$15(ContractTests.java:179) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:175) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:25:23,049Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:25:23,050Z [main] internal.Verifier.verifyContracts - Error validating transaction 523A1CCDE98DF3EA2FC3496154904D5972D17D1A1CE277B432D40D5AD11E941B. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:47) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$15(ContractTests.java:179) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:175) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:25:23,083Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:23,097Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:24,182Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:24,186Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:24,214Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:24,230Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:25,432Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:25,435Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:25:25,455Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-152512.354/custom-cordapp_1_4_19957fa3-661e-4ce5-8255-b994bc8abad8.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:25:25,455Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-152512.354/custom-cordapp_1_4_19957fa3-661e-4ce5-8255-b994bc8abad8.jar {}
[INFO ] 2019-08-20T15:25:25,478Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T15:25:25,532Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-152512.354/custom-cordapp_1_4_19957fa3-661e-4ce5-8255-b994bc8abad8.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:25:25,532Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-152512.354/custom-cordapp_1_4_19957fa3-661e-4ce5-8255-b994bc8abad8.jar {}
[INFO ] 2019-08-20T15:25:25,557Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:25:25,623Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:25,642Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:26,990Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:26,991Z [main] internal.Verifier.warnOnce - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-20T15:25:26,991Z [main] internal.Verifier.verifyContracts - Error validating transaction 789BCB73413947BF23B9DC57BED490B6E1C10CA2682F6A1D7DEFF0F102EF44A2. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:34) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:25:26,995Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:25:26,996Z [main] internal.Verifier.verifyContracts - Error validating transaction 789BCB73413947BF23B9DC57BED490B6E1C10CA2682F6A1D7DEFF0F102EF44A2. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:34) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:25:27,023Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:27,035Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:28,152Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:28,156Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:25:28,174Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-152512.354/custom-cordapp_1_4_19957fa3-661e-4ce5-8255-b994bc8abad8.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:25:28,175Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-152512.354/custom-cordapp_1_4_19957fa3-661e-4ce5-8255-b994bc8abad8.jar {}
[INFO ] 2019-08-20T15:25:28,200Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:25:28,257Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:28,270Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:29,304Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:25:29,304Z [main] internal.Verifier.verifyContracts - Error validating transaction 1EF2820E96B73ACC19B8384EA10B39864DB749F55B7B842BCD92D8B3D2211867. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:37) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:25:29,309Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:25:29,309Z [main] internal.Verifier.verifyContracts - Error validating transaction 1EF2820E96B73ACC19B8384EA10B39864DB749F55B7B842BCD92D8B3D2211867. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:37) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:25:29,339Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:29,360Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:30,546Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:30,553Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:25:30,571Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-152512.354/custom-cordapp_1_4_19957fa3-661e-4ce5-8255-b994bc8abad8.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:25:30,571Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-152512.354/custom-cordapp_1_4_19957fa3-661e-4ce5-8255-b994bc8abad8.jar {}
[INFO ] 2019-08-20T15:25:30,586Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:25:30,638Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:30,650Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:31,684Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:25:31,685Z [main] internal.Verifier.verifyContracts - Error validating transaction 74FFD4A562EB9C9723E5AE435CB7E1557F69DF096D5354D2B3A581F9D1D1E6F6. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:26) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:25:31,690Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:25:31,691Z [main] internal.Verifier.verifyContracts - Error validating transaction 74FFD4A562EB9C9723E5AE435CB7E1557F69DF096D5354D2B3A581F9D1D1E6F6. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:26) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:25:31,715Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:31,725Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:32,682Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:32,686Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:25:32,702Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-152512.354/custom-cordapp_1_4_19957fa3-661e-4ce5-8255-b994bc8abad8.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:25:32,702Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-152512.354/custom-cordapp_1_4_19957fa3-661e-4ce5-8255-b994bc8abad8.jar {}
[INFO ] 2019-08-20T15:25:32,720Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:25:32,774Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:32,784Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:33,759Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:33,762Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T15:25:33,784Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-152512.354/custom-cordapp_1_4_19957fa3-661e-4ce5-8255-b994bc8abad8.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T15:25:33,785Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-152512.354/custom-cordapp_1_4_19957fa3-661e-4ce5-8255-b994bc8abad8.jar {}
[INFO ] 2019-08-20T15:25:33,802Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T15:25:33,911Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:33,914Z [main] contracts.AttachmentConstraint.warnOnce - Found state bootcamp.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[WARN ] 2019-08-20T15:25:34,939Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:25:34,940Z [main] internal.Verifier.verifyContracts - Error validating transaction A3BA6B741CD4F5DB567C5B17315876925FCF36F6130D2A78246F0BF438D69F53. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:37) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:30) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:25:34,943Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:34,946Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:34,960Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:34,962Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:34,965Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:25:34,966Z [main] internal.Verifier.verifyContracts - Error validating transaction D7661A8139A0A0CDE457FBEEA1D341E943BAC1B78226BFD9A1A1B9F8BBCE7E32. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:22) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:25:34,969Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:34,971Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:34,974Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T15:25:34,974Z [main] internal.Verifier.verifyContracts - Error validating transaction D7661A8139A0A0CDE457FBEEA1D341E943BAC1B78226BFD9A1A1B9F8BBCE7E32. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:22) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T15:25:34,997Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:35,008Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:35,955Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T15:25:35,958Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T16:43:43,849Z [main] internal.TestCordappImpl.apply - Generating CorDapp jar from local project in /Users/asadikhlas/Desktop/Asad/bootcamp-cordapp ... {}
[INFO ] 2019-08-20T16:43:48,753Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164336.412/nodes/0/cordapps] {}
[INFO ] 2019-08-20T16:43:48,765Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164336.412/nodes/0/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:43:48,796Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164336.412/nodes/0/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:43:48,904Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:43:49,818Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:43:49,956Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:43:49,957Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:43:49,963Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:43:50,229Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:43:36.169Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:43:57,022Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:43:57,029Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164336.412/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:43:57,029Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:43:57,031Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:43:57,106Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:43:57,113Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:00,172Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:01,200Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:01,302Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:01,329Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:01,330Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:01,824Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:01,837Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:01,838Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319441837) {}
[INFO ] 2019-08-20T16:44:01,846Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:02,057Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319441837) {}
[INFO ] 2019-08-20T16:44:02,127Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:02,151Z [MockNode-1-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319441837) {}
[INFO ] 2019-08-20T16:44:02,187Z [MockNode-1-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:02,260Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:02,265Z [main] utilities.NotaryLoader.loadService - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-20T16:44:02,270Z [main] notary.SinglePartyNotaryService.<init> - Starting notary in validating mode {}
[INFO ] 2019-08-20T16:44:02,743Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319441837) {}
[INFO ] 2019-08-20T16:44:02,767Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319441837) {}
[INFO ] 2019-08-20T16:44:02,771Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:02,773Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319441837) {}
[INFO ] 2019-08-20T16:44:02,773Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:02,782Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164336.412/nodes/1/cordapps] {}
[INFO ] 2019-08-20T16:44:02,783Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164336.412/nodes/1/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:44:02,783Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164336.412/nodes/1/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:44:02,813Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:44:02,826Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:44:02,870Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:02,871Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:44:02,871Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:02,876Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:43:36.169Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:44:03,581Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:44:03,586Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164336.412/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:44:03,586Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:44:03,587Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:44:03,591Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:03,591Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:03,707Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:03,722Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:03,726Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:03,727Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T16:44:03,750Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:03,750Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:03,932Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:03,937Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:03,937Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319443937) {}
[INFO ] 2019-08-20T16:44:03,940Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:03,951Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319443937) {}
[INFO ] 2019-08-20T16:44:03,962Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:03,965Z [MockNode-2-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319443937) {}
[INFO ] 2019-08-20T16:44:03,971Z [MockNode-2-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:04,039Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:04,050Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319443937) {}
[INFO ] 2019-08-20T16:44:04,052Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319441837) {}
[INFO ] 2019-08-20T16:44:04,054Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:04,068Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319443937) {}
[INFO ] 2019-08-20T16:44:04,070Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:04,083Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319443937) {}
[INFO ] 2019-08-20T16:44:04,083Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:04,083Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319443937) {}
[INFO ] 2019-08-20T16:44:04,084Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:04,087Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164336.412/nodes/2/cordapps] {}
[INFO ] 2019-08-20T16:44:04,088Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164336.412/nodes/2/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:44:04,088Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164336.412/nodes/2/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:44:04,113Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:44:04,121Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:44:04,156Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:04,156Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:44:04,156Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:04,164Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:43:36.169Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:44:04,950Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:44:04,953Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164336.412/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:44:04,953Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:44:04,955Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:44:04,958Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:04,958Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:05,116Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:05,131Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:05,133Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:05,134Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T16:44:05,170Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:05,170Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:05,389Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:05,395Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:05,397Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319445395) {}
[INFO ] 2019-08-20T16:44:05,400Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:05,409Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319445395) {}
[INFO ] 2019-08-20T16:44:05,423Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:05,426Z [MockNode-3-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319445395) {}
[INFO ] 2019-08-20T16:44:05,439Z [MockNode-3-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:05,492Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:05,507Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319445395) {}
[INFO ] 2019-08-20T16:44:05,514Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319441837) {}
[INFO ] 2019-08-20T16:44:05,516Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:05,528Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319445395) {}
[INFO ] 2019-08-20T16:44:05,535Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:05,550Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319443937) {}
[INFO ] 2019-08-20T16:44:05,552Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:05,571Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319445395) {}
[INFO ] 2019-08-20T16:44:05,573Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:05,588Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319445395) {}
[INFO ] 2019-08-20T16:44:05,588Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:05,589Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319445395) {}
[INFO ] 2019-08-20T16:44:05,589Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-20T16:44:05,983Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc4b0a82-ddce-4747-bd9a-9761d6258d13, invocation_id=5fc59e12-392c-421f-a52d-ef109e629d9a, invocation_timestamp=2019-08-20T16:44:05.634Z, origin=Only For Testing, session_id=5fc59e12-392c-421f-a52d-ef109e629d9a, session_timestamp=2019-08-20T16:44:05.634Z, thread-id=102}
[WARN ] 2019-08-20T16:44:06,010Z [Mock network] transactions.TransactionBuilder.warnOnce - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc4b0a82-ddce-4747-bd9a-9761d6258d13, invocation_id=5fc59e12-392c-421f-a52d-ef109e629d9a, invocation_timestamp=2019-08-20T16:44:05.634Z, origin=Only For Testing, session_id=5fc59e12-392c-421f-a52d-ef109e629d9a, session_timestamp=2019-08-20T16:44:05.634Z, thread-id=102}
[WARN ] 2019-08-20T16:44:06,011Z [Mock network] transactions.TransactionBuilder.warnOnce - Reverting back to using hash constraints for contract bootcamp.TokenContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc4b0a82-ddce-4747-bd9a-9761d6258d13, invocation_id=5fc59e12-392c-421f-a52d-ef109e629d9a, invocation_timestamp=2019-08-20T16:44:05.634Z, origin=Only For Testing, session_id=5fc59e12-392c-421f-a52d-ef109e629d9a, session_timestamp=2019-08-20T16:44:05.634Z, thread-id=102}
[WARN ] 2019-08-20T16:44:06,014Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc4b0a82-ddce-4747-bd9a-9761d6258d13, invocation_id=5fc59e12-392c-421f-a52d-ef109e629d9a, invocation_timestamp=2019-08-20T16:44:05.634Z, origin=Only For Testing, session_id=5fc59e12-392c-421f-a52d-ef109e629d9a, session_timestamp=2019-08-20T16:44:05.634Z, thread-id=102}
[WARN ] 2019-08-20T16:44:08,263Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc4b0a82-ddce-4747-bd9a-9761d6258d13, invocation_id=5fc59e12-392c-421f-a52d-ef109e629d9a, invocation_timestamp=2019-08-20T16:44:05.634Z, origin=Only For Testing, session_id=5fc59e12-392c-421f-a52d-ef109e629d9a, session_timestamp=2019-08-20T16:44:05.634Z, thread-id=102}
[WARN ] 2019-08-20T16:44:08,301Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc4b0a82-ddce-4747-bd9a-9761d6258d13, invocation_id=5fc59e12-392c-421f-a52d-ef109e629d9a, invocation_timestamp=2019-08-20T16:44:05.634Z, origin=Only For Testing, session_id=5fc59e12-392c-421f-a52d-ef109e629d9a, session_timestamp=2019-08-20T16:44:05.634Z, thread-id=102}
[WARN ] 2019-08-20T16:44:08,335Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc4b0a82-ddce-4747-bd9a-9761d6258d13, invocation_id=5fc59e12-392c-421f-a52d-ef109e629d9a, invocation_timestamp=2019-08-20T16:44:05.634Z, origin=Only For Testing, session_id=5fc59e12-392c-421f-a52d-ef109e629d9a, session_timestamp=2019-08-20T16:44:05.634Z, thread-id=102}
[WARN ] 2019-08-20T16:44:08,347Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc4b0a82-ddce-4747-bd9a-9761d6258d13, invocation_id=5fc59e12-392c-421f-a52d-ef109e629d9a, invocation_timestamp=2019-08-20T16:44:05.634Z, origin=Only For Testing, session_id=5fc59e12-392c-421f-a52d-ef109e629d9a, session_timestamp=2019-08-20T16:44:05.634Z, thread-id=102}
[WARN ] 2019-08-20T16:44:08,525Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc4b0a82-ddce-4747-bd9a-9761d6258d13, invocation_id=5fc59e12-392c-421f-a52d-ef109e629d9a, invocation_timestamp=2019-08-20T16:44:05.634Z, origin=Only For Testing, session_id=5fc59e12-392c-421f-a52d-ef109e629d9a, session_timestamp=2019-08-20T16:44:05.634Z, thread-id=102}
[WARN ] 2019-08-20T16:44:08,550Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc4b0a82-ddce-4747-bd9a-9761d6258d13, invocation_id=5fc59e12-392c-421f-a52d-ef109e629d9a, invocation_timestamp=2019-08-20T16:44:05.634Z, origin=Only For Testing, session_id=5fc59e12-392c-421f-a52d-ef109e629d9a, session_timestamp=2019-08-20T16:44:05.634Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
[INFO ] 2019-08-20T16:44:08,558Z [Mock network] corda.flow.notariseAndRecord - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc4b0a82-ddce-4747-bd9a-9761d6258d13, invocation_id=5fc59e12-392c-421f-a52d-ef109e629d9a, invocation_timestamp=2019-08-20T16:44:05.634Z, origin=Only For Testing, session_id=5fc59e12-392c-421f-a52d-ef109e629d9a, session_timestamp=2019-08-20T16:44:05.634Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
[INFO ] 2019-08-20T16:44:08,560Z [Mock network] corda.flow.notariseAndRecord - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc4b0a82-ddce-4747-bd9a-9761d6258d13, invocation_id=5fc59e12-392c-421f-a52d-ef109e629d9a, invocation_timestamp=2019-08-20T16:44:05.634Z, origin=Only For Testing, session_id=5fc59e12-392c-421f-a52d-ef109e629d9a, session_timestamp=2019-08-20T16:44:05.634Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
[INFO ] 2019-08-20T16:44:08,663Z [Mock network] corda.flow.notariseAndRecord - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc4b0a82-ddce-4747-bd9a-9761d6258d13, invocation_id=5fc59e12-392c-421f-a52d-ef109e629d9a, invocation_timestamp=2019-08-20T16:44:05.634Z, origin=Only For Testing, session_id=5fc59e12-392c-421f-a52d-ef109e629d9a, session_timestamp=2019-08-20T16:44:05.634Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
[INFO ] 2019-08-20T16:44:08,984Z [Mock network] corda.flow.call - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=272a537f-4dd1-4818-8065-eb8d3e53d3f1, invocation_id=28762687-d7fd-4bfe-abac-37ba25ad4648, invocation_timestamp=2019-08-20T16:44:08.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28762687-d7fd-4bfe-abac-37ba25ad4648, session_timestamp=2019-08-20T16:44:08.881Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
[WARN ] 2019-08-20T16:44:09,002Z [Mock network] corda.flow.maybeWireUpProgressTracking - ProgressTracker has not been started {fiber-id=10000002, flow-id=272a537f-4dd1-4818-8065-eb8d3e53d3f1, invocation_id=28762687-d7fd-4bfe-abac-37ba25ad4648, invocation_timestamp=2019-08-20T16:44:08.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28762687-d7fd-4bfe-abac-37ba25ad4648, session_timestamp=2019-08-20T16:44:08.881Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
[INFO ] 2019-08-20T16:44:09,061Z [Mock network] corda.flow.call - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=272a537f-4dd1-4818-8065-eb8d3e53d3f1, invocation_id=28762687-d7fd-4bfe-abac-37ba25ad4648, invocation_timestamp=2019-08-20T16:44:08.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28762687-d7fd-4bfe-abac-37ba25ad4648, session_timestamp=2019-08-20T16:44:08.881Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
[WARN ] 2019-08-20T16:44:09,071Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {fiber-id=10000002, flow-id=272a537f-4dd1-4818-8065-eb8d3e53d3f1, invocation_id=28762687-d7fd-4bfe-abac-37ba25ad4648, invocation_timestamp=2019-08-20T16:44:08.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28762687-d7fd-4bfe-abac-37ba25ad4648, session_timestamp=2019-08-20T16:44:08.881Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
[INFO ] 2019-08-20T16:44:09,099Z [Mock network] corda.flow.call - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc4b0a82-ddce-4747-bd9a-9761d6258d13, invocation_id=5fc59e12-392c-421f-a52d-ef109e629d9a, invocation_timestamp=2019-08-20T16:44:05.634Z, origin=Only For Testing, session_id=5fc59e12-392c-421f-a52d-ef109e629d9a, session_timestamp=2019-08-20T16:44:05.634Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
[INFO ] 2019-08-20T16:44:09,099Z [Mock network] corda.flow.call - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc4b0a82-ddce-4747-bd9a-9761d6258d13, invocation_id=5fc59e12-392c-421f-a52d-ef109e629d9a, invocation_timestamp=2019-08-20T16:44:05.634Z, origin=Only For Testing, session_id=5fc59e12-392c-421f-a52d-ef109e629d9a, session_timestamp=2019-08-20T16:44:05.634Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
[INFO ] 2019-08-20T16:44:09,148Z [Mock network] corda.flow.run - Flow raised an error... sending it to flow hospital {fiber-id=10000002, flow-id=272a537f-4dd1-4818-8065-eb8d3e53d3f1, invocation_id=28762687-d7fd-4bfe-abac-37ba25ad4648, invocation_timestamp=2019-08-20T16:44:08.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28762687-d7fd-4bfe-abac-37ba25ad4648, session_timestamp=2019-08-20T16:44:08.881Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-837866519312344288) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:44:09,152Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Invocation, sessionId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-837866519312344288)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D-3867791409854202394-7932202829630381657)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))]), frozenFiber=7070CDCDD16C7F2FEB61C891D2F856783E50B27171CD34069766622118E0750C), errorState=Clean, numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@1091b507, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@795b6525], isFlowResumed=true, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=a435cc6c-6b9e-4225-9fbe-64c77763313b) {fiber-id=10000002, flow-id=272a537f-4dd1-4818-8065-eb8d3e53d3f1, invocation_id=28762687-d7fd-4bfe-abac-37ba25ad4648, invocation_timestamp=2019-08-20T16:44:08.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28762687-d7fd-4bfe-abac-37ba25ad4648, session_timestamp=2019-08-20T16:44:08.881Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
[INFO ] 2019-08-20T16:44:09,154Z [Mock network] statemachine.StaffedFlowHospital.invoke - Flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] has error [0] {fiber-id=10000002, flow-id=272a537f-4dd1-4818-8065-eb8d3e53d3f1, invocation_id=28762687-d7fd-4bfe-abac-37ba25ad4648, invocation_timestamp=2019-08-20T16:44:08.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28762687-d7fd-4bfe-abac-37ba25ad4648, session_timestamp=2019-08-20T16:44:08.881Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-837866519312344288) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:44:09,159Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] error allowed to propagate {fiber-id=10000002, flow-id=272a537f-4dd1-4818-8065-eb8d3e53d3f1, invocation_id=28762687-d7fd-4bfe-abac-37ba25ad4648, invocation_timestamp=2019-08-20T16:44:08.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28762687-d7fd-4bfe-abac-37ba25ad4648, session_timestamp=2019-08-20T16:44:08.881Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
[WARN ] 2019-08-20T16:44:09,253Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] errored, dumping all transitions:

 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:08.932Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[272a537f-4dd1-4818-8065-eb8d3e53d3f1], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Invocation, sessionId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=D34E7D90A4EC21629D988DD964FE196C0FCCA2FB551B16D9D193313B3AF2C3EB), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2da36b79])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2da36b79])
    SignalFlowHasStarted(flowId=[272a537f-4dd1-4818-8065-eb8d3e53d3f1])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3867791409854202394), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-837866519312344288), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-3867791409854202394-7932202829630381657-0-0), senderUUID=a435cc6c-6b9e-4225-9fbe-64c77763313b))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-837866519312344288): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=3867791409854202394)), errors=[], deduplicationSeed=D-3867791409854202394-7932202829630381657)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2da36b79]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:08.937Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:08.944Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:08.967Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))]), maySkipCheckpoint=false, fiber=B986EBD89B53A7E63601D04FB76E8F8F3E7F37F43800EF7DECCD64CD94B858FB, )
  Actions: 
    PersistCheckpoint(id=[272a537f-4dd1-4818-8065-eb8d3e53d3f1], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Invocation, sessionId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-837866519312344288)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=3867791409854202394)), errors=[], deduplicationSeed=D-3867791409854202394-7932202829630381657)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))]), frozenFiber=B986EBD89B53A7E63601D04FB76E8F8F3E7F37F43800EF7DECCD64CD94B858FB), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=D34E7D90A4EC21629D988DD964FE196C0FCCA2FB551B16D9D193313B3AF2C3EB)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))]), frozenFiber=B986EBD89B53A7E63601D04FB76E8F8F3E7F37F43800EF7DECCD64CD94B858FB)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:08.978Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-837866519312344288).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.003Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.039Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=661E173062D0A1D05F9FF2BF28FD20624B5AE01B2A45C25CE72FCF4DCD943471, )
  Actions: 
    PersistCheckpoint(id=[272a537f-4dd1-4818-8065-eb8d3e53d3f1], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Invocation, sessionId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-837866519312344288)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=3867791409854202394)), errors=[], deduplicationSeed=D-3867791409854202394-7932202829630381657)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=661E173062D0A1D05F9FF2BF28FD20624B5AE01B2A45C25CE72FCF4DCD943471), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    B986EBD89B53A7E63601D04FB76E8F8F3E7F37F43800EF7DECCD64CD94B858FB
    661E173062D0A1D05F9FF2BF28FD20624B5AE01B2A45C25CE72FCF4DCD943471
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.055Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3867791409854202394), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-3867791409854202394-7932202829630381657-2-0), senderUUID=a435cc6c-6b9e-4225-9fbe-64c77763313b))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.061Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.074Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.080Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))]), maySkipCheckpoint=false, fiber=7070CDCDD16C7F2FEB61C891D2F856783E50B27171CD34069766622118E0750C, )
  Actions: 
    PersistCheckpoint(id=[272a537f-4dd1-4818-8065-eb8d3e53d3f1], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Invocation, sessionId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-837866519312344288)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=3867791409854202394)), errors=[], deduplicationSeed=D-3867791409854202394-7932202829630381657)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))]), frozenFiber=7070CDCDD16C7F2FEB61C891D2F856783E50B27171CD34069766622118E0750C), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))])
checkpoint.flowState.frozenFiber.hash: 
    661E173062D0A1D05F9FF2BF28FD20624B5AE01B2A45C25CE72FCF4DCD943471
    7070CDCDD16C7F2FEB61C891D2F856783E50B27171CD34069766622118E0750C
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.081Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.147Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-837866519312344288), payload=net.corda.node.services.statemachine.EndSessionMessage@17b69124), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@795b6525, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-837866519312344288).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=3867791409854202394))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@795b6525]


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.147Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-837866519312344288) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.148Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.162Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-837866519312344288) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=8677016946022149514, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-837866519312344288) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.167Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.217Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000002, flow-id=272a537f-4dd1-4818-8065-eb8d3e53d3f1, invocation_id=28762687-d7fd-4bfe-abac-37ba25ad4648, invocation_timestamp=2019-08-20T16:44:08.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28762687-d7fd-4bfe-abac-37ba25ad4648, session_timestamp=2019-08-20T16:44:08.881Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
[WARN ] 2019-08-20T16:44:09,253Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000002, flow-id=272a537f-4dd1-4818-8065-eb8d3e53d3f1, invocation_id=28762687-d7fd-4bfe-abac-37ba25ad4648, invocation_timestamp=2019-08-20T16:44:08.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28762687-d7fd-4bfe-abac-37ba25ad4648, session_timestamp=2019-08-20T16:44:08.881Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-837866519312344288) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[WARN ] 2019-08-20T16:44:09,298Z [Mock network] statemachine.ActionExecutorImpl.executePropagateErrors - Propagating error {fiber-id=10000002, flow-id=272a537f-4dd1-4818-8065-eb8d3e53d3f1, invocation_id=28762687-d7fd-4bfe-abac-37ba25ad4648, invocation_timestamp=2019-08-20T16:44:08.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28762687-d7fd-4bfe-abac-37ba25ad4648, session_timestamp=2019-08-20T16:44:08.881Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
[WARN ] 2019-08-20T16:44:09,357Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] errored, dumping all transitions:

 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:08.932Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[272a537f-4dd1-4818-8065-eb8d3e53d3f1], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Invocation, sessionId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=D34E7D90A4EC21629D988DD964FE196C0FCCA2FB551B16D9D193313B3AF2C3EB), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2da36b79])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2da36b79])
    SignalFlowHasStarted(flowId=[272a537f-4dd1-4818-8065-eb8d3e53d3f1])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3867791409854202394), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-837866519312344288), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-3867791409854202394-7932202829630381657-0-0), senderUUID=a435cc6c-6b9e-4225-9fbe-64c77763313b))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-837866519312344288): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=3867791409854202394)), errors=[], deduplicationSeed=D-3867791409854202394-7932202829630381657)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2da36b79]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:08.937Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:08.944Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:08.967Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))]), maySkipCheckpoint=false, fiber=B986EBD89B53A7E63601D04FB76E8F8F3E7F37F43800EF7DECCD64CD94B858FB, )
  Actions: 
    PersistCheckpoint(id=[272a537f-4dd1-4818-8065-eb8d3e53d3f1], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Invocation, sessionId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-837866519312344288)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=3867791409854202394)), errors=[], deduplicationSeed=D-3867791409854202394-7932202829630381657)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))]), frozenFiber=B986EBD89B53A7E63601D04FB76E8F8F3E7F37F43800EF7DECCD64CD94B858FB), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=D34E7D90A4EC21629D988DD964FE196C0FCCA2FB551B16D9D193313B3AF2C3EB)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))]), frozenFiber=B986EBD89B53A7E63601D04FB76E8F8F3E7F37F43800EF7DECCD64CD94B858FB)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:08.978Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-837866519312344288).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.003Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.039Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=661E173062D0A1D05F9FF2BF28FD20624B5AE01B2A45C25CE72FCF4DCD943471, )
  Actions: 
    PersistCheckpoint(id=[272a537f-4dd1-4818-8065-eb8d3e53d3f1], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Invocation, sessionId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-837866519312344288)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=3867791409854202394)), errors=[], deduplicationSeed=D-3867791409854202394-7932202829630381657)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=661E173062D0A1D05F9FF2BF28FD20624B5AE01B2A45C25CE72FCF4DCD943471), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    B986EBD89B53A7E63601D04FB76E8F8F3E7F37F43800EF7DECCD64CD94B858FB
    661E173062D0A1D05F9FF2BF28FD20624B5AE01B2A45C25CE72FCF4DCD943471
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.055Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3867791409854202394), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-3867791409854202394-7932202829630381657-2-0), senderUUID=a435cc6c-6b9e-4225-9fbe-64c77763313b))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.061Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.074Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.080Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))]), maySkipCheckpoint=false, fiber=7070CDCDD16C7F2FEB61C891D2F856783E50B27171CD34069766622118E0750C, )
  Actions: 
    PersistCheckpoint(id=[272a537f-4dd1-4818-8065-eb8d3e53d3f1], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Invocation, sessionId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-837866519312344288)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=3867791409854202394)), errors=[], deduplicationSeed=D-3867791409854202394-7932202829630381657)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))]), frozenFiber=7070CDCDD16C7F2FEB61C891D2F856783E50B27171CD34069766622118E0750C), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))])
checkpoint.flowState.frozenFiber.hash: 
    661E173062D0A1D05F9FF2BF28FD20624B5AE01B2A45C25CE72FCF4DCD943471
    7070CDCDD16C7F2FEB61C891D2F856783E50B27171CD34069766622118E0750C
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.081Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.147Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-837866519312344288), payload=net.corda.node.services.statemachine.EndSessionMessage@17b69124), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@795b6525, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-837866519312344288).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=3867791409854202394))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@795b6525]


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.147Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-837866519312344288) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.148Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.162Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-837866519312344288) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=8677016946022149514, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-837866519312344288) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.167Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.217Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] ---
  Timestamp: 2019-08-20T16:44:09.346Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=8677016946022149514)], sessions=[Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D-3867791409854202394-7932202829630381657)], senderUUID=a435cc6c-6b9e-4225-9fbe-64c77763313b)
    CreateTransaction
    RemoveCheckpoint(id=[272a537f-4dd1-4818-8065-eb8d3e53d3f1])
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@795b6525])
    ReleaseSoftLocks(uuid=272a537f-4dd1-4818-8065-eb8d3e53d3f1)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@795b6525])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-837866519312344288)])
    RemoveFlow(flowId=[272a537f-4dd1-4818-8065-eb8d3e53d3f1], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=8677016946022149514, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-837866519312344288) with empty buffer)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Invocation, sessionId=28762687-d7fd-4bfe-abac-37ba25ad4648, timestamp: 2019-08-20T16:44:08.881Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-837866519312344288)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D-3867791409854202394-7932202829630381657)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-837866519312344288))]), frozenFiber=7070CDCDD16C7F2FEB61C891D2F856783E50B27171CD34069766622118E0750C), errorState=Errored(errors=[FlowError(errorId=8677016946022149514, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-837866519312344288) with empty buffer)], propagatedIndex=1, propagating=true), numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@1091b507, pendingDeduplicationHandlers=[], isFlowResumed=false, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=a435cc6c-6b9e-4225-9fbe-64c77763313b))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.errorState.propagatedIndex: 
    0
    1
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@795b6525]
    []
isRemoved: 
    false
    true
 {fiber-id=10000002, flow-id=272a537f-4dd1-4818-8065-eb8d3e53d3f1, invocation_id=28762687-d7fd-4bfe-abac-37ba25ad4648, invocation_timestamp=2019-08-20T16:44:08.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28762687-d7fd-4bfe-abac-37ba25ad4648, session_timestamp=2019-08-20T16:44:08.881Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
[WARN ] 2019-08-20T16:44:09,357Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [272a537f-4dd1-4818-8065-eb8d3e53d3f1] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000002, flow-id=272a537f-4dd1-4818-8065-eb8d3e53d3f1, invocation_id=28762687-d7fd-4bfe-abac-37ba25ad4648, invocation_timestamp=2019-08-20T16:44:08.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28762687-d7fd-4bfe-abac-37ba25ad4648, session_timestamp=2019-08-20T16:44:08.881Z, thread-id=102, tx_id=F7931C66DF1C79AEF63DE438FC0071D06942ED3C12902CBBF342057A4CEA1F37}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-837866519312344288) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:44:09,471Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164409.386/nodes/0/cordapps] {}
[INFO ] 2019-08-20T16:44:09,472Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164409.386/nodes/0/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:44:09,472Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164409.386/nodes/0/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:44:09,496Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:44:09,503Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:44:09,507Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:09,507Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:44:09,508Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:09,514Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:44:09.386Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:44:10,180Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:44:10,185Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164409.386/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:44:10,185Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:44:10,186Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:44:10,195Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:10,196Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:10,341Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:10,357Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:10,417Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:10,426Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:10,426Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:10,658Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:10,670Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:10,670Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319450670) {}
[INFO ] 2019-08-20T16:44:10,675Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:10,703Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319450670) {}
[INFO ] 2019-08-20T16:44:10,715Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:10,718Z [MockNode-4-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319450670) {}
[INFO ] 2019-08-20T16:44:10,724Z [MockNode-4-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:10,784Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:10,790Z [main] utilities.NotaryLoader.loadService - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-20T16:44:10,791Z [main] notary.SinglePartyNotaryService.<init> - Starting notary in validating mode {}
[INFO ] 2019-08-20T16:44:10,807Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319450670) {}
[INFO ] 2019-08-20T16:44:10,811Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319450670) {}
[INFO ] 2019-08-20T16:44:10,812Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:10,812Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319450670) {}
[INFO ] 2019-08-20T16:44:10,812Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:10,817Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164409.386/nodes/1/cordapps] {}
[INFO ] 2019-08-20T16:44:10,817Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164409.386/nodes/1/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:44:10,818Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164409.386/nodes/1/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:44:10,845Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:44:10,857Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:44:10,898Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:10,898Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:44:10,898Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:10,902Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:44:09.386Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:44:11,500Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:44:11,503Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164409.386/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:44:11,503Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:44:11,505Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:44:11,509Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:11,509Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:11,627Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:11,641Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:11,643Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:11,643Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T16:44:11,671Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:11,671Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:11,880Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:11,887Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:11,887Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319451887) {}
[INFO ] 2019-08-20T16:44:11,889Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:11,906Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319451887) {}
[INFO ] 2019-08-20T16:44:11,924Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:11,928Z [MockNode-5-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319451887) {}
[INFO ] 2019-08-20T16:44:11,935Z [MockNode-5-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:11,984Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:11,997Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319451887) {}
[INFO ] 2019-08-20T16:44:12,006Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319450670) {}
[INFO ] 2019-08-20T16:44:12,007Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:12,021Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319451887) {}
[INFO ] 2019-08-20T16:44:12,022Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:12,039Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319451887) {}
[INFO ] 2019-08-20T16:44:12,039Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:12,039Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319451887) {}
[INFO ] 2019-08-20T16:44:12,039Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:12,042Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164409.386/nodes/2/cordapps] {}
[INFO ] 2019-08-20T16:44:12,043Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164409.386/nodes/2/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:44:12,043Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164409.386/nodes/2/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:44:12,069Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:44:12,078Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:44:12,111Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:12,111Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:44:12,111Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:12,115Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:44:09.386Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:44:12,694Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:44:12,698Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164409.386/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:44:12,698Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:44:12,700Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:44:12,706Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:12,706Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:12,808Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:12,825Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:12,829Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:12,829Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T16:44:12,860Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:12,861Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:13,025Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:13,031Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:13,031Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319453031) {}
[INFO ] 2019-08-20T16:44:13,034Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:13,045Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319453031) {}
[INFO ] 2019-08-20T16:44:13,057Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:13,060Z [MockNode-6-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319453031) {}
[INFO ] 2019-08-20T16:44:13,066Z [MockNode-6-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:13,127Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:13,134Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319453031) {}
[INFO ] 2019-08-20T16:44:13,141Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319450670) {}
[INFO ] 2019-08-20T16:44:13,143Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:13,157Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319453031) {}
[INFO ] 2019-08-20T16:44:13,159Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:13,170Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319451887) {}
[INFO ] 2019-08-20T16:44:13,173Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:13,183Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319453031) {}
[INFO ] 2019-08-20T16:44:13,187Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:13,197Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319453031) {}
[INFO ] 2019-08-20T16:44:13,197Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:13,197Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319453031) {}
[INFO ] 2019-08-20T16:44:13,197Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-20T16:44:13,202Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e373a5c1-a529-4172-b3e5-bcab48ea6283, invocation_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, invocation_timestamp=2019-08-20T16:44:13.198Z, origin=Only For Testing, session_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, session_timestamp=2019-08-20T16:44:13.198Z, thread-id=194}
[WARN ] 2019-08-20T16:44:13,207Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e373a5c1-a529-4172-b3e5-bcab48ea6283, invocation_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, invocation_timestamp=2019-08-20T16:44:13.198Z, origin=Only For Testing, session_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, session_timestamp=2019-08-20T16:44:13.198Z, thread-id=194}
[WARN ] 2019-08-20T16:44:14,704Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e373a5c1-a529-4172-b3e5-bcab48ea6283, invocation_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, invocation_timestamp=2019-08-20T16:44:13.198Z, origin=Only For Testing, session_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, session_timestamp=2019-08-20T16:44:13.198Z, thread-id=194}
[WARN ] 2019-08-20T16:44:14,707Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e373a5c1-a529-4172-b3e5-bcab48ea6283, invocation_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, invocation_timestamp=2019-08-20T16:44:13.198Z, origin=Only For Testing, session_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, session_timestamp=2019-08-20T16:44:13.198Z, thread-id=194}
[WARN ] 2019-08-20T16:44:14,708Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e373a5c1-a529-4172-b3e5-bcab48ea6283, invocation_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, invocation_timestamp=2019-08-20T16:44:13.198Z, origin=Only For Testing, session_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, session_timestamp=2019-08-20T16:44:13.198Z, thread-id=194}
[WARN ] 2019-08-20T16:44:14,716Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e373a5c1-a529-4172-b3e5-bcab48ea6283, invocation_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, invocation_timestamp=2019-08-20T16:44:13.198Z, origin=Only For Testing, session_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, session_timestamp=2019-08-20T16:44:13.198Z, thread-id=194}
[WARN ] 2019-08-20T16:44:14,742Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e373a5c1-a529-4172-b3e5-bcab48ea6283, invocation_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, invocation_timestamp=2019-08-20T16:44:13.198Z, origin=Only For Testing, session_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, session_timestamp=2019-08-20T16:44:13.198Z, thread-id=194}
[WARN ] 2019-08-20T16:44:14,749Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e373a5c1-a529-4172-b3e5-bcab48ea6283, invocation_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, invocation_timestamp=2019-08-20T16:44:13.198Z, origin=Only For Testing, session_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, session_timestamp=2019-08-20T16:44:13.198Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
[INFO ] 2019-08-20T16:44:14,749Z [Mock network] corda.flow.notariseAndRecord - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e373a5c1-a529-4172-b3e5-bcab48ea6283, invocation_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, invocation_timestamp=2019-08-20T16:44:13.198Z, origin=Only For Testing, session_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, session_timestamp=2019-08-20T16:44:13.198Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
[INFO ] 2019-08-20T16:44:14,749Z [Mock network] corda.flow.notariseAndRecord - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e373a5c1-a529-4172-b3e5-bcab48ea6283, invocation_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, invocation_timestamp=2019-08-20T16:44:13.198Z, origin=Only For Testing, session_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, session_timestamp=2019-08-20T16:44:13.198Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
[INFO ] 2019-08-20T16:44:14,771Z [Mock network] corda.flow.notariseAndRecord - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e373a5c1-a529-4172-b3e5-bcab48ea6283, invocation_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, invocation_timestamp=2019-08-20T16:44:13.198Z, origin=Only For Testing, session_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, session_timestamp=2019-08-20T16:44:13.198Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
[INFO ] 2019-08-20T16:44:14,833Z [Mock network] corda.flow.call - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=2d76e4e6-4886-42d5-98c1-fd4d05361d63, invocation_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, invocation_timestamp=2019-08-20T16:44:14.810Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, session_timestamp=2019-08-20T16:44:14.810Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
[WARN ] 2019-08-20T16:44:14,833Z [Mock network] corda.flow.maybeWireUpProgressTracking - ProgressTracker has not been started {fiber-id=10000004, flow-id=2d76e4e6-4886-42d5-98c1-fd4d05361d63, invocation_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, invocation_timestamp=2019-08-20T16:44:14.810Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, session_timestamp=2019-08-20T16:44:14.810Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
[INFO ] 2019-08-20T16:44:14,847Z [Mock network] corda.flow.call - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=2d76e4e6-4886-42d5-98c1-fd4d05361d63, invocation_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, invocation_timestamp=2019-08-20T16:44:14.810Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, session_timestamp=2019-08-20T16:44:14.810Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
[WARN ] 2019-08-20T16:44:14,852Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {fiber-id=10000004, flow-id=2d76e4e6-4886-42d5-98c1-fd4d05361d63, invocation_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, invocation_timestamp=2019-08-20T16:44:14.810Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, session_timestamp=2019-08-20T16:44:14.810Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
[INFO ] 2019-08-20T16:44:14,870Z [Mock network] corda.flow.call - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e373a5c1-a529-4172-b3e5-bcab48ea6283, invocation_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, invocation_timestamp=2019-08-20T16:44:13.198Z, origin=Only For Testing, session_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, session_timestamp=2019-08-20T16:44:13.198Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
[INFO ] 2019-08-20T16:44:14,870Z [Mock network] corda.flow.call - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e373a5c1-a529-4172-b3e5-bcab48ea6283, invocation_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, invocation_timestamp=2019-08-20T16:44:13.198Z, origin=Only For Testing, session_id=8c17a89e-afbd-4bb7-86c8-21f5dab7f7ab, session_timestamp=2019-08-20T16:44:13.198Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
[INFO ] 2019-08-20T16:44:14,881Z [Mock network] corda.flow.run - Flow raised an error... sending it to flow hospital {fiber-id=10000004, flow-id=2d76e4e6-4886-42d5-98c1-fd4d05361d63, invocation_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, invocation_timestamp=2019-08-20T16:44:14.810Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, session_timestamp=2019-08-20T16:44:14.810Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4983831478779225315) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:44:14,882Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Invocation, sessionId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-4983831478779225315)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--4350185493594152346--8159994443410073524)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))]), frozenFiber=74B57BEF1AE17783A41D343D91CE8576ED5F2EAE07F5B59BFDF15171FC1C6934), errorState=Clean, numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@32fffe5, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ebaf8fc], isFlowResumed=true, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=d2e8ec85-b48a-4b3d-9cc2-99ff3a193a89) {fiber-id=10000004, flow-id=2d76e4e6-4886-42d5-98c1-fd4d05361d63, invocation_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, invocation_timestamp=2019-08-20T16:44:14.810Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, session_timestamp=2019-08-20T16:44:14.810Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
[INFO ] 2019-08-20T16:44:14,882Z [Mock network] statemachine.StaffedFlowHospital.invoke - Flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] has error [0] {fiber-id=10000004, flow-id=2d76e4e6-4886-42d5-98c1-fd4d05361d63, invocation_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, invocation_timestamp=2019-08-20T16:44:14.810Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, session_timestamp=2019-08-20T16:44:14.810Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4983831478779225315) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:44:14,882Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] error allowed to propagate {fiber-id=10000004, flow-id=2d76e4e6-4886-42d5-98c1-fd4d05361d63, invocation_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, invocation_timestamp=2019-08-20T16:44:14.810Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, session_timestamp=2019-08-20T16:44:14.810Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
[WARN ] 2019-08-20T16:44:14,888Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] errored, dumping all transitions:

 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.821Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[2d76e4e6-4886-42d5-98c1-fd4d05361d63], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Invocation, sessionId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=1C0BBAEF3E84B666E0D6BF6D86E73D604651C3F1DD8FE3B1B0D38C66EF243D94), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@36cdf881])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@36cdf881])
    SignalFlowHasStarted(flowId=[2d76e4e6-4886-42d5-98c1-fd4d05361d63])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4350185493594152346), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-4983831478779225315), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--4350185493594152346--8159994443410073524-0-0), senderUUID=d2e8ec85-b48a-4b3d-9cc2-99ff3a193a89))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-4983831478779225315): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4350185493594152346)), errors=[], deduplicationSeed=D--4350185493594152346--8159994443410073524)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@36cdf881]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.821Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.821Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.828Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))]), maySkipCheckpoint=false, fiber=433B37F53C29893D8A51F7B7947B27F921959926CD94D459A665DDB730A6664C, )
  Actions: 
    PersistCheckpoint(id=[2d76e4e6-4886-42d5-98c1-fd4d05361d63], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Invocation, sessionId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-4983831478779225315)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4350185493594152346)), errors=[], deduplicationSeed=D--4350185493594152346--8159994443410073524)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))]), frozenFiber=433B37F53C29893D8A51F7B7947B27F921959926CD94D459A665DDB730A6664C), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=1C0BBAEF3E84B666E0D6BF6D86E73D604651C3F1DD8FE3B1B0D38C66EF243D94)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))]), frozenFiber=433B37F53C29893D8A51F7B7947B27F921959926CD94D459A665DDB730A6664C)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.829Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-4983831478779225315).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.834Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.844Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=6537E395C5B5896D8061DF9F4F276609D2E14B2D6CFB7B0B03201970700B9D9E, )
  Actions: 
    PersistCheckpoint(id=[2d76e4e6-4886-42d5-98c1-fd4d05361d63], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Invocation, sessionId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-4983831478779225315)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4350185493594152346)), errors=[], deduplicationSeed=D--4350185493594152346--8159994443410073524)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=6537E395C5B5896D8061DF9F4F276609D2E14B2D6CFB7B0B03201970700B9D9E), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    433B37F53C29893D8A51F7B7947B27F921959926CD94D459A665DDB730A6664C
    6537E395C5B5896D8061DF9F4F276609D2E14B2D6CFB7B0B03201970700B9D9E
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.847Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4350185493594152346), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--4350185493594152346--8159994443410073524-2-0), senderUUID=d2e8ec85-b48a-4b3d-9cc2-99ff3a193a89))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.847Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.852Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.859Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))]), maySkipCheckpoint=false, fiber=74B57BEF1AE17783A41D343D91CE8576ED5F2EAE07F5B59BFDF15171FC1C6934, )
  Actions: 
    PersistCheckpoint(id=[2d76e4e6-4886-42d5-98c1-fd4d05361d63], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Invocation, sessionId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-4983831478779225315)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4350185493594152346)), errors=[], deduplicationSeed=D--4350185493594152346--8159994443410073524)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))]), frozenFiber=74B57BEF1AE17783A41D343D91CE8576ED5F2EAE07F5B59BFDF15171FC1C6934), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))])
checkpoint.flowState.frozenFiber.hash: 
    6537E395C5B5896D8061DF9F4F276609D2E14B2D6CFB7B0B03201970700B9D9E
    74B57BEF1AE17783A41D343D91CE8576ED5F2EAE07F5B59BFDF15171FC1C6934
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.862Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.881Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4983831478779225315), payload=net.corda.node.services.statemachine.EndSessionMessage@17b69124), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ebaf8fc, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-4983831478779225315).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=-4350185493594152346))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ebaf8fc]


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.881Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4983831478779225315) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.881Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.882Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4983831478779225315) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-6986608656117523641, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4983831478779225315) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.883Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.883Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000004, flow-id=2d76e4e6-4886-42d5-98c1-fd4d05361d63, invocation_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, invocation_timestamp=2019-08-20T16:44:14.810Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, session_timestamp=2019-08-20T16:44:14.810Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
[WARN ] 2019-08-20T16:44:14,888Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000004, flow-id=2d76e4e6-4886-42d5-98c1-fd4d05361d63, invocation_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, invocation_timestamp=2019-08-20T16:44:14.810Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, session_timestamp=2019-08-20T16:44:14.810Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4983831478779225315) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[WARN ] 2019-08-20T16:44:14,888Z [Mock network] statemachine.ActionExecutorImpl.executePropagateErrors - Propagating error {fiber-id=10000004, flow-id=2d76e4e6-4886-42d5-98c1-fd4d05361d63, invocation_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, invocation_timestamp=2019-08-20T16:44:14.810Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, session_timestamp=2019-08-20T16:44:14.810Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
[WARN ] 2019-08-20T16:44:14,901Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] errored, dumping all transitions:

 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.821Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[2d76e4e6-4886-42d5-98c1-fd4d05361d63], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Invocation, sessionId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=1C0BBAEF3E84B666E0D6BF6D86E73D604651C3F1DD8FE3B1B0D38C66EF243D94), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@36cdf881])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@36cdf881])
    SignalFlowHasStarted(flowId=[2d76e4e6-4886-42d5-98c1-fd4d05361d63])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4350185493594152346), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-4983831478779225315), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--4350185493594152346--8159994443410073524-0-0), senderUUID=d2e8ec85-b48a-4b3d-9cc2-99ff3a193a89))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-4983831478779225315): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4350185493594152346)), errors=[], deduplicationSeed=D--4350185493594152346--8159994443410073524)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@36cdf881]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.821Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.821Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.828Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))]), maySkipCheckpoint=false, fiber=433B37F53C29893D8A51F7B7947B27F921959926CD94D459A665DDB730A6664C, )
  Actions: 
    PersistCheckpoint(id=[2d76e4e6-4886-42d5-98c1-fd4d05361d63], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Invocation, sessionId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-4983831478779225315)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4350185493594152346)), errors=[], deduplicationSeed=D--4350185493594152346--8159994443410073524)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))]), frozenFiber=433B37F53C29893D8A51F7B7947B27F921959926CD94D459A665DDB730A6664C), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=1C0BBAEF3E84B666E0D6BF6D86E73D604651C3F1DD8FE3B1B0D38C66EF243D94)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))]), frozenFiber=433B37F53C29893D8A51F7B7947B27F921959926CD94D459A665DDB730A6664C)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.829Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-4983831478779225315).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.834Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.844Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=6537E395C5B5896D8061DF9F4F276609D2E14B2D6CFB7B0B03201970700B9D9E, )
  Actions: 
    PersistCheckpoint(id=[2d76e4e6-4886-42d5-98c1-fd4d05361d63], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Invocation, sessionId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-4983831478779225315)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4350185493594152346)), errors=[], deduplicationSeed=D--4350185493594152346--8159994443410073524)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=6537E395C5B5896D8061DF9F4F276609D2E14B2D6CFB7B0B03201970700B9D9E), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    433B37F53C29893D8A51F7B7947B27F921959926CD94D459A665DDB730A6664C
    6537E395C5B5896D8061DF9F4F276609D2E14B2D6CFB7B0B03201970700B9D9E
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.847Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4350185493594152346), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--4350185493594152346--8159994443410073524-2-0), senderUUID=d2e8ec85-b48a-4b3d-9cc2-99ff3a193a89))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.847Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.852Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.859Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))]), maySkipCheckpoint=false, fiber=74B57BEF1AE17783A41D343D91CE8576ED5F2EAE07F5B59BFDF15171FC1C6934, )
  Actions: 
    PersistCheckpoint(id=[2d76e4e6-4886-42d5-98c1-fd4d05361d63], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Invocation, sessionId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-4983831478779225315)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4350185493594152346)), errors=[], deduplicationSeed=D--4350185493594152346--8159994443410073524)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))]), frozenFiber=74B57BEF1AE17783A41D343D91CE8576ED5F2EAE07F5B59BFDF15171FC1C6934), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))])
checkpoint.flowState.frozenFiber.hash: 
    6537E395C5B5896D8061DF9F4F276609D2E14B2D6CFB7B0B03201970700B9D9E
    74B57BEF1AE17783A41D343D91CE8576ED5F2EAE07F5B59BFDF15171FC1C6934
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.862Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.881Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4983831478779225315), payload=net.corda.node.services.statemachine.EndSessionMessage@17b69124), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ebaf8fc, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-4983831478779225315).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=-4350185493594152346))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ebaf8fc]


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.881Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4983831478779225315) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.881Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.882Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4983831478779225315) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-6986608656117523641, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4983831478779225315) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.883Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.883Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] ---
  Timestamp: 2019-08-20T16:44:14.897Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-6986608656117523641)], sessions=[Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--4350185493594152346--8159994443410073524)], senderUUID=d2e8ec85-b48a-4b3d-9cc2-99ff3a193a89)
    CreateTransaction
    RemoveCheckpoint(id=[2d76e4e6-4886-42d5-98c1-fd4d05361d63])
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ebaf8fc])
    ReleaseSoftLocks(uuid=2d76e4e6-4886-42d5-98c1-fd4d05361d63)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ebaf8fc])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-4983831478779225315)])
    RemoveFlow(flowId=[2d76e4e6-4886-42d5-98c1-fd4d05361d63], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-6986608656117523641, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4983831478779225315) with empty buffer)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Invocation, sessionId=78268959-2b7d-4b0a-aa91-f19e03987c0f, timestamp: 2019-08-20T16:44:14.810Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-4983831478779225315)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--4350185493594152346--8159994443410073524)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4983831478779225315))]), frozenFiber=74B57BEF1AE17783A41D343D91CE8576ED5F2EAE07F5B59BFDF15171FC1C6934), errorState=Errored(errors=[FlowError(errorId=-6986608656117523641, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4983831478779225315) with empty buffer)], propagatedIndex=1, propagating=true), numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@32fffe5, pendingDeduplicationHandlers=[], isFlowResumed=false, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=d2e8ec85-b48a-4b3d-9cc2-99ff3a193a89))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.errorState.propagatedIndex: 
    0
    1
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ebaf8fc]
    []
isRemoved: 
    false
    true
 {fiber-id=10000004, flow-id=2d76e4e6-4886-42d5-98c1-fd4d05361d63, invocation_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, invocation_timestamp=2019-08-20T16:44:14.810Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, session_timestamp=2019-08-20T16:44:14.810Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
[WARN ] 2019-08-20T16:44:14,901Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [2d76e4e6-4886-42d5-98c1-fd4d05361d63] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000004, flow-id=2d76e4e6-4886-42d5-98c1-fd4d05361d63, invocation_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, invocation_timestamp=2019-08-20T16:44:14.810Z, origin=O=Mock Company 1, L=London, C=GB, session_id=78268959-2b7d-4b0a-aa91-f19e03987c0f, session_timestamp=2019-08-20T16:44:14.810Z, thread-id=194, tx_id=EDBA3184B4436CB1DB0E91A9E3B1015903C9714780C34EF8FBEBA5CFCFF86C1A}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4983831478779225315) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:44:15,014Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164414.917/nodes/0/cordapps] {}
[INFO ] 2019-08-20T16:44:15,015Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164414.917/nodes/0/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:44:15,015Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164414.917/nodes/0/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:44:15,037Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:44:15,043Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:44:15,049Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:15,049Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:44:15,049Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:15,056Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:44:14.917Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:44:15,824Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:44:15,832Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164414.917/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:44:15,833Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:44:15,834Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:44:15,838Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:15,838Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:15,953Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:15,965Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:16,001Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:16,008Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:16,008Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:16,237Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:16,241Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:16,241Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319456241) {}
[INFO ] 2019-08-20T16:44:16,243Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:16,267Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319456241) {}
[INFO ] 2019-08-20T16:44:16,283Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:16,286Z [MockNode-7-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319456241) {}
[INFO ] 2019-08-20T16:44:16,292Z [MockNode-7-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:16,345Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:16,348Z [main] utilities.NotaryLoader.loadService - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-20T16:44:16,348Z [main] notary.SinglePartyNotaryService.<init> - Starting notary in validating mode {}
[INFO ] 2019-08-20T16:44:16,355Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319456241) {}
[INFO ] 2019-08-20T16:44:16,357Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319456241) {}
[INFO ] 2019-08-20T16:44:16,357Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:16,357Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319456241) {}
[INFO ] 2019-08-20T16:44:16,357Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:16,364Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164414.917/nodes/1/cordapps] {}
[INFO ] 2019-08-20T16:44:16,364Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164414.917/nodes/1/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:44:16,365Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164414.917/nodes/1/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:44:16,388Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:44:16,399Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:44:16,443Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:16,443Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:44:16,443Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:16,453Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:44:14.917Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:44:16,994Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:44:16,995Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164414.917/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:44:16,995Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:44:16,998Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:44:17,000Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:17,001Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:17,115Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:17,128Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:17,132Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:17,133Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T16:44:17,155Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:17,155Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:17,374Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:17,383Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:17,383Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319457383) {}
[INFO ] 2019-08-20T16:44:17,386Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:17,393Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319457383) {}
[INFO ] 2019-08-20T16:44:17,403Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:17,406Z [MockNode-8-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319457383) {}
[INFO ] 2019-08-20T16:44:17,410Z [MockNode-8-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:17,456Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:17,474Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319457383) {}
[INFO ] 2019-08-20T16:44:17,490Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319456241) {}
[INFO ] 2019-08-20T16:44:17,493Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:17,509Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319457383) {}
[INFO ] 2019-08-20T16:44:17,512Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:17,539Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319457383) {}
[INFO ] 2019-08-20T16:44:17,539Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:17,539Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319457383) {}
[INFO ] 2019-08-20T16:44:17,539Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:17,543Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164414.917/nodes/2/cordapps] {}
[INFO ] 2019-08-20T16:44:17,544Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164414.917/nodes/2/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:44:17,544Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164414.917/nodes/2/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:44:17,562Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:44:17,575Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:44:17,624Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:17,625Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:44:17,625Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:17,628Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:44:14.917Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:44:18,602Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:44:18,607Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164414.917/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:44:18,607Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:44:18,609Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:44:18,611Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:18,611Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:18,702Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:18,713Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:18,716Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:18,717Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T16:44:18,760Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:18,761Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:18,896Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:18,900Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:18,900Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319458900) {}
[INFO ] 2019-08-20T16:44:18,904Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:18,912Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319458900) {}
[INFO ] 2019-08-20T16:44:18,920Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:18,924Z [MockNode-9-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319458900) {}
[INFO ] 2019-08-20T16:44:18,928Z [MockNode-9-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:18,974Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:18,982Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319458900) {}
[INFO ] 2019-08-20T16:44:18,989Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319456241) {}
[INFO ] 2019-08-20T16:44:18,991Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:19,004Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319458900) {}
[INFO ] 2019-08-20T16:44:19,007Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:19,017Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319457383) {}
[INFO ] 2019-08-20T16:44:19,020Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:19,031Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319458900) {}
[INFO ] 2019-08-20T16:44:19,033Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:19,046Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319458900) {}
[INFO ] 2019-08-20T16:44:19,046Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:19,046Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319458900) {}
[INFO ] 2019-08-20T16:44:19,046Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-20T16:44:19,051Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=e20634cf-c190-4d08-9b4f-0d884ceb66bf, invocation_id=8042f087-62e4-4430-b54e-c59f17a687ec, invocation_timestamp=2019-08-20T16:44:19.047Z, origin=Only For Testing, session_id=8042f087-62e4-4430-b54e-c59f17a687ec, session_timestamp=2019-08-20T16:44:19.047Z, thread-id=284}
[WARN ] 2019-08-20T16:44:19,055Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=e20634cf-c190-4d08-9b4f-0d884ceb66bf, invocation_id=8042f087-62e4-4430-b54e-c59f17a687ec, invocation_timestamp=2019-08-20T16:44:19.047Z, origin=Only For Testing, session_id=8042f087-62e4-4430-b54e-c59f17a687ec, session_timestamp=2019-08-20T16:44:19.047Z, thread-id=284}
[WARN ] 2019-08-20T16:44:20,164Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=e20634cf-c190-4d08-9b4f-0d884ceb66bf, invocation_id=8042f087-62e4-4430-b54e-c59f17a687ec, invocation_timestamp=2019-08-20T16:44:19.047Z, origin=Only For Testing, session_id=8042f087-62e4-4430-b54e-c59f17a687ec, session_timestamp=2019-08-20T16:44:19.047Z, thread-id=284}
[WARN ] 2019-08-20T16:44:20,168Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=e20634cf-c190-4d08-9b4f-0d884ceb66bf, invocation_id=8042f087-62e4-4430-b54e-c59f17a687ec, invocation_timestamp=2019-08-20T16:44:19.047Z, origin=Only For Testing, session_id=8042f087-62e4-4430-b54e-c59f17a687ec, session_timestamp=2019-08-20T16:44:19.047Z, thread-id=284}
[WARN ] 2019-08-20T16:44:20,169Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=e20634cf-c190-4d08-9b4f-0d884ceb66bf, invocation_id=8042f087-62e4-4430-b54e-c59f17a687ec, invocation_timestamp=2019-08-20T16:44:19.047Z, origin=Only For Testing, session_id=8042f087-62e4-4430-b54e-c59f17a687ec, session_timestamp=2019-08-20T16:44:19.047Z, thread-id=284}
[WARN ] 2019-08-20T16:44:20,175Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=e20634cf-c190-4d08-9b4f-0d884ceb66bf, invocation_id=8042f087-62e4-4430-b54e-c59f17a687ec, invocation_timestamp=2019-08-20T16:44:19.047Z, origin=Only For Testing, session_id=8042f087-62e4-4430-b54e-c59f17a687ec, session_timestamp=2019-08-20T16:44:19.047Z, thread-id=284}
[WARN ] 2019-08-20T16:44:20,202Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=e20634cf-c190-4d08-9b4f-0d884ceb66bf, invocation_id=8042f087-62e4-4430-b54e-c59f17a687ec, invocation_timestamp=2019-08-20T16:44:19.047Z, origin=Only For Testing, session_id=8042f087-62e4-4430-b54e-c59f17a687ec, session_timestamp=2019-08-20T16:44:19.047Z, thread-id=284}
[WARN ] 2019-08-20T16:44:20,209Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=e20634cf-c190-4d08-9b4f-0d884ceb66bf, invocation_id=8042f087-62e4-4430-b54e-c59f17a687ec, invocation_timestamp=2019-08-20T16:44:19.047Z, origin=Only For Testing, session_id=8042f087-62e4-4430-b54e-c59f17a687ec, session_timestamp=2019-08-20T16:44:19.047Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
[INFO ] 2019-08-20T16:44:20,209Z [Mock network] corda.flow.notariseAndRecord - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=e20634cf-c190-4d08-9b4f-0d884ceb66bf, invocation_id=8042f087-62e4-4430-b54e-c59f17a687ec, invocation_timestamp=2019-08-20T16:44:19.047Z, origin=Only For Testing, session_id=8042f087-62e4-4430-b54e-c59f17a687ec, session_timestamp=2019-08-20T16:44:19.047Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
[INFO ] 2019-08-20T16:44:20,209Z [Mock network] corda.flow.notariseAndRecord - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=e20634cf-c190-4d08-9b4f-0d884ceb66bf, invocation_id=8042f087-62e4-4430-b54e-c59f17a687ec, invocation_timestamp=2019-08-20T16:44:19.047Z, origin=Only For Testing, session_id=8042f087-62e4-4430-b54e-c59f17a687ec, session_timestamp=2019-08-20T16:44:19.047Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
[INFO ] 2019-08-20T16:44:20,228Z [Mock network] corda.flow.notariseAndRecord - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=e20634cf-c190-4d08-9b4f-0d884ceb66bf, invocation_id=8042f087-62e4-4430-b54e-c59f17a687ec, invocation_timestamp=2019-08-20T16:44:19.047Z, origin=Only For Testing, session_id=8042f087-62e4-4430-b54e-c59f17a687ec, session_timestamp=2019-08-20T16:44:19.047Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
[INFO ] 2019-08-20T16:44:20,278Z [Mock network] corda.flow.call - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=fe9a7705-b555-4ef8-80b0-856818aad4e6, invocation_id=12c19905-0f4e-4d47-b368-69c0727e1907, invocation_timestamp=2019-08-20T16:44:20.254Z, origin=O=Mock Company 1, L=London, C=GB, session_id=12c19905-0f4e-4d47-b368-69c0727e1907, session_timestamp=2019-08-20T16:44:20.254Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
[WARN ] 2019-08-20T16:44:20,278Z [Mock network] corda.flow.maybeWireUpProgressTracking - ProgressTracker has not been started {fiber-id=10000006, flow-id=fe9a7705-b555-4ef8-80b0-856818aad4e6, invocation_id=12c19905-0f4e-4d47-b368-69c0727e1907, invocation_timestamp=2019-08-20T16:44:20.254Z, origin=O=Mock Company 1, L=London, C=GB, session_id=12c19905-0f4e-4d47-b368-69c0727e1907, session_timestamp=2019-08-20T16:44:20.254Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
[INFO ] 2019-08-20T16:44:20,289Z [Mock network] corda.flow.call - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=fe9a7705-b555-4ef8-80b0-856818aad4e6, invocation_id=12c19905-0f4e-4d47-b368-69c0727e1907, invocation_timestamp=2019-08-20T16:44:20.254Z, origin=O=Mock Company 1, L=London, C=GB, session_id=12c19905-0f4e-4d47-b368-69c0727e1907, session_timestamp=2019-08-20T16:44:20.254Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
[WARN ] 2019-08-20T16:44:20,296Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {fiber-id=10000006, flow-id=fe9a7705-b555-4ef8-80b0-856818aad4e6, invocation_id=12c19905-0f4e-4d47-b368-69c0727e1907, invocation_timestamp=2019-08-20T16:44:20.254Z, origin=O=Mock Company 1, L=London, C=GB, session_id=12c19905-0f4e-4d47-b368-69c0727e1907, session_timestamp=2019-08-20T16:44:20.254Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
[INFO ] 2019-08-20T16:44:20,307Z [Mock network] corda.flow.call - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=e20634cf-c190-4d08-9b4f-0d884ceb66bf, invocation_id=8042f087-62e4-4430-b54e-c59f17a687ec, invocation_timestamp=2019-08-20T16:44:19.047Z, origin=Only For Testing, session_id=8042f087-62e4-4430-b54e-c59f17a687ec, session_timestamp=2019-08-20T16:44:19.047Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
[INFO ] 2019-08-20T16:44:20,307Z [Mock network] corda.flow.call - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=e20634cf-c190-4d08-9b4f-0d884ceb66bf, invocation_id=8042f087-62e4-4430-b54e-c59f17a687ec, invocation_timestamp=2019-08-20T16:44:19.047Z, origin=Only For Testing, session_id=8042f087-62e4-4430-b54e-c59f17a687ec, session_timestamp=2019-08-20T16:44:19.047Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
[INFO ] 2019-08-20T16:44:20,314Z [Mock network] corda.flow.run - Flow raised an error... sending it to flow hospital {fiber-id=10000006, flow-id=fe9a7705-b555-4ef8-80b0-856818aad4e6, invocation_id=12c19905-0f4e-4d47-b368-69c0727e1907, invocation_timestamp=2019-08-20T16:44:20.254Z, origin=O=Mock Company 1, L=London, C=GB, session_id=12c19905-0f4e-4d47-b368-69c0727e1907, session_timestamp=2019-08-20T16:44:20.254Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=3915656230143119418) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:44:20,315Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Invocation, sessionId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=3915656230143119418)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D-3725631860916371901--4534550792407081905)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))]), frozenFiber=A1ABDDD8310CF33C59ABA881F6A6084668A01B1E484D1FDE6077F3EA5B844018), errorState=Clean, numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@7a1c8e14, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@76942d64], isFlowResumed=true, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=a4d29ef4-d705-4bd9-ad53-849c7011a1b6) {fiber-id=10000006, flow-id=fe9a7705-b555-4ef8-80b0-856818aad4e6, invocation_id=12c19905-0f4e-4d47-b368-69c0727e1907, invocation_timestamp=2019-08-20T16:44:20.254Z, origin=O=Mock Company 1, L=London, C=GB, session_id=12c19905-0f4e-4d47-b368-69c0727e1907, session_timestamp=2019-08-20T16:44:20.254Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
[INFO ] 2019-08-20T16:44:20,316Z [Mock network] statemachine.StaffedFlowHospital.invoke - Flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] has error [0] {fiber-id=10000006, flow-id=fe9a7705-b555-4ef8-80b0-856818aad4e6, invocation_id=12c19905-0f4e-4d47-b368-69c0727e1907, invocation_timestamp=2019-08-20T16:44:20.254Z, origin=O=Mock Company 1, L=London, C=GB, session_id=12c19905-0f4e-4d47-b368-69c0727e1907, session_timestamp=2019-08-20T16:44:20.254Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=3915656230143119418) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:44:20,316Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] error allowed to propagate {fiber-id=10000006, flow-id=fe9a7705-b555-4ef8-80b0-856818aad4e6, invocation_id=12c19905-0f4e-4d47-b368-69c0727e1907, invocation_timestamp=2019-08-20T16:44:20.254Z, origin=O=Mock Company 1, L=London, C=GB, session_id=12c19905-0f4e-4d47-b368-69c0727e1907, session_timestamp=2019-08-20T16:44:20.254Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
[WARN ] 2019-08-20T16:44:20,324Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] errored, dumping all transitions:

 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.266Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[fe9a7705-b555-4ef8-80b0-856818aad4e6], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Invocation, sessionId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=D93199F57391B7D8A697104087F2DF54A0B7252E7FC10107257B39768881F9ED), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@46ba198b])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@46ba198b])
    SignalFlowHasStarted(flowId=[fe9a7705-b555-4ef8-80b0-856818aad4e6])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3725631860916371901), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3915656230143119418), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-3725631860916371901--4534550792407081905-0-0), senderUUID=a4d29ef4-d705-4bd9-ad53-849c7011a1b6))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=3915656230143119418): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=3725631860916371901)), errors=[], deduplicationSeed=D-3725631860916371901--4534550792407081905)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@46ba198b]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.267Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.267Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.272Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))]), maySkipCheckpoint=false, fiber=B0CE575442AC3B1EB25B3BE46141D5A3CE9B0BC6BE62F55A30A844A21BE1D2C0, )
  Actions: 
    PersistCheckpoint(id=[fe9a7705-b555-4ef8-80b0-856818aad4e6], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Invocation, sessionId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=3915656230143119418)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=3725631860916371901)), errors=[], deduplicationSeed=D-3725631860916371901--4534550792407081905)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))]), frozenFiber=B0CE575442AC3B1EB25B3BE46141D5A3CE9B0BC6BE62F55A30A844A21BE1D2C0), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=D93199F57391B7D8A697104087F2DF54A0B7252E7FC10107257B39768881F9ED)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))]), frozenFiber=B0CE575442AC3B1EB25B3BE46141D5A3CE9B0BC6BE62F55A30A844A21BE1D2C0)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.273Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=3915656230143119418).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.278Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.286Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=16FDE5E7F1203401259382D1AB0B7FB2BF04563C762183E18F7C72FDE37E8147, )
  Actions: 
    PersistCheckpoint(id=[fe9a7705-b555-4ef8-80b0-856818aad4e6], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Invocation, sessionId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=3915656230143119418)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=3725631860916371901)), errors=[], deduplicationSeed=D-3725631860916371901--4534550792407081905)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=16FDE5E7F1203401259382D1AB0B7FB2BF04563C762183E18F7C72FDE37E8147), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    B0CE575442AC3B1EB25B3BE46141D5A3CE9B0BC6BE62F55A30A844A21BE1D2C0
    16FDE5E7F1203401259382D1AB0B7FB2BF04563C762183E18F7C72FDE37E8147
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.288Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3725631860916371901), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-3725631860916371901--4534550792407081905-2-0), senderUUID=a4d29ef4-d705-4bd9-ad53-849c7011a1b6))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.289Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.296Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.301Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))]), maySkipCheckpoint=false, fiber=A1ABDDD8310CF33C59ABA881F6A6084668A01B1E484D1FDE6077F3EA5B844018, )
  Actions: 
    PersistCheckpoint(id=[fe9a7705-b555-4ef8-80b0-856818aad4e6], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Invocation, sessionId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=3915656230143119418)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=3725631860916371901)), errors=[], deduplicationSeed=D-3725631860916371901--4534550792407081905)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))]), frozenFiber=A1ABDDD8310CF33C59ABA881F6A6084668A01B1E484D1FDE6077F3EA5B844018), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))])
checkpoint.flowState.frozenFiber.hash: 
    16FDE5E7F1203401259382D1AB0B7FB2BF04563C762183E18F7C72FDE37E8147
    A1ABDDD8310CF33C59ABA881F6A6084668A01B1E484D1FDE6077F3EA5B844018
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.301Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.314Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3915656230143119418), payload=net.corda.node.services.statemachine.EndSessionMessage@17b69124), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@76942d64, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=3915656230143119418).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=3725631860916371901))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@76942d64]


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.314Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=3915656230143119418) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.314Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.316Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=3915656230143119418) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-5871821890041440321, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=3915656230143119418) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.317Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.317Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000006, flow-id=fe9a7705-b555-4ef8-80b0-856818aad4e6, invocation_id=12c19905-0f4e-4d47-b368-69c0727e1907, invocation_timestamp=2019-08-20T16:44:20.254Z, origin=O=Mock Company 1, L=London, C=GB, session_id=12c19905-0f4e-4d47-b368-69c0727e1907, session_timestamp=2019-08-20T16:44:20.254Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
[WARN ] 2019-08-20T16:44:20,326Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000006, flow-id=fe9a7705-b555-4ef8-80b0-856818aad4e6, invocation_id=12c19905-0f4e-4d47-b368-69c0727e1907, invocation_timestamp=2019-08-20T16:44:20.254Z, origin=O=Mock Company 1, L=London, C=GB, session_id=12c19905-0f4e-4d47-b368-69c0727e1907, session_timestamp=2019-08-20T16:44:20.254Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=3915656230143119418) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[WARN ] 2019-08-20T16:44:20,327Z [Mock network] statemachine.ActionExecutorImpl.executePropagateErrors - Propagating error {fiber-id=10000006, flow-id=fe9a7705-b555-4ef8-80b0-856818aad4e6, invocation_id=12c19905-0f4e-4d47-b368-69c0727e1907, invocation_timestamp=2019-08-20T16:44:20.254Z, origin=O=Mock Company 1, L=London, C=GB, session_id=12c19905-0f4e-4d47-b368-69c0727e1907, session_timestamp=2019-08-20T16:44:20.254Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
[WARN ] 2019-08-20T16:44:20,335Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] errored, dumping all transitions:

 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.266Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[fe9a7705-b555-4ef8-80b0-856818aad4e6], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Invocation, sessionId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=D93199F57391B7D8A697104087F2DF54A0B7252E7FC10107257B39768881F9ED), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@46ba198b])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@46ba198b])
    SignalFlowHasStarted(flowId=[fe9a7705-b555-4ef8-80b0-856818aad4e6])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3725631860916371901), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3915656230143119418), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-3725631860916371901--4534550792407081905-0-0), senderUUID=a4d29ef4-d705-4bd9-ad53-849c7011a1b6))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=3915656230143119418): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=3725631860916371901)), errors=[], deduplicationSeed=D-3725631860916371901--4534550792407081905)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@46ba198b]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.267Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.267Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.272Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))]), maySkipCheckpoint=false, fiber=B0CE575442AC3B1EB25B3BE46141D5A3CE9B0BC6BE62F55A30A844A21BE1D2C0, )
  Actions: 
    PersistCheckpoint(id=[fe9a7705-b555-4ef8-80b0-856818aad4e6], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Invocation, sessionId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=3915656230143119418)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=3725631860916371901)), errors=[], deduplicationSeed=D-3725631860916371901--4534550792407081905)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))]), frozenFiber=B0CE575442AC3B1EB25B3BE46141D5A3CE9B0BC6BE62F55A30A844A21BE1D2C0), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=D93199F57391B7D8A697104087F2DF54A0B7252E7FC10107257B39768881F9ED)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))]), frozenFiber=B0CE575442AC3B1EB25B3BE46141D5A3CE9B0BC6BE62F55A30A844A21BE1D2C0)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.273Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=3915656230143119418).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.278Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.286Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=16FDE5E7F1203401259382D1AB0B7FB2BF04563C762183E18F7C72FDE37E8147, )
  Actions: 
    PersistCheckpoint(id=[fe9a7705-b555-4ef8-80b0-856818aad4e6], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Invocation, sessionId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=3915656230143119418)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=3725631860916371901)), errors=[], deduplicationSeed=D-3725631860916371901--4534550792407081905)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=16FDE5E7F1203401259382D1AB0B7FB2BF04563C762183E18F7C72FDE37E8147), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    B0CE575442AC3B1EB25B3BE46141D5A3CE9B0BC6BE62F55A30A844A21BE1D2C0
    16FDE5E7F1203401259382D1AB0B7FB2BF04563C762183E18F7C72FDE37E8147
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.288Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3725631860916371901), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-3725631860916371901--4534550792407081905-2-0), senderUUID=a4d29ef4-d705-4bd9-ad53-849c7011a1b6))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.289Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.296Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.301Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))]), maySkipCheckpoint=false, fiber=A1ABDDD8310CF33C59ABA881F6A6084668A01B1E484D1FDE6077F3EA5B844018, )
  Actions: 
    PersistCheckpoint(id=[fe9a7705-b555-4ef8-80b0-856818aad4e6], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Invocation, sessionId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=3915656230143119418)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=3725631860916371901)), errors=[], deduplicationSeed=D-3725631860916371901--4534550792407081905)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))]), frozenFiber=A1ABDDD8310CF33C59ABA881F6A6084668A01B1E484D1FDE6077F3EA5B844018), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))])
checkpoint.flowState.frozenFiber.hash: 
    16FDE5E7F1203401259382D1AB0B7FB2BF04563C762183E18F7C72FDE37E8147
    A1ABDDD8310CF33C59ABA881F6A6084668A01B1E484D1FDE6077F3EA5B844018
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.301Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.314Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3915656230143119418), payload=net.corda.node.services.statemachine.EndSessionMessage@17b69124), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@76942d64, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=3915656230143119418).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=3725631860916371901))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@76942d64]


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.314Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=3915656230143119418) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.314Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.316Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=3915656230143119418) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-5871821890041440321, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=3915656230143119418) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.317Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.317Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] ---
  Timestamp: 2019-08-20T16:44:20.332Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-5871821890041440321)], sessions=[Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D-3725631860916371901--4534550792407081905)], senderUUID=a4d29ef4-d705-4bd9-ad53-849c7011a1b6)
    CreateTransaction
    RemoveCheckpoint(id=[fe9a7705-b555-4ef8-80b0-856818aad4e6])
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@76942d64])
    ReleaseSoftLocks(uuid=fe9a7705-b555-4ef8-80b0-856818aad4e6)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@76942d64])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=3915656230143119418)])
    RemoveFlow(flowId=[fe9a7705-b555-4ef8-80b0-856818aad4e6], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-5871821890041440321, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=3915656230143119418) with empty buffer)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Invocation, sessionId=12c19905-0f4e-4d47-b368-69c0727e1907, timestamp: 2019-08-20T16:44:20.254Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=3915656230143119418)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D-3725631860916371901--4534550792407081905)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3915656230143119418))]), frozenFiber=A1ABDDD8310CF33C59ABA881F6A6084668A01B1E484D1FDE6077F3EA5B844018), errorState=Errored(errors=[FlowError(errorId=-5871821890041440321, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=3915656230143119418) with empty buffer)], propagatedIndex=1, propagating=true), numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@7a1c8e14, pendingDeduplicationHandlers=[], isFlowResumed=false, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=a4d29ef4-d705-4bd9-ad53-849c7011a1b6))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.errorState.propagatedIndex: 
    0
    1
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@76942d64]
    []
isRemoved: 
    false
    true
 {fiber-id=10000006, flow-id=fe9a7705-b555-4ef8-80b0-856818aad4e6, invocation_id=12c19905-0f4e-4d47-b368-69c0727e1907, invocation_timestamp=2019-08-20T16:44:20.254Z, origin=O=Mock Company 1, L=London, C=GB, session_id=12c19905-0f4e-4d47-b368-69c0727e1907, session_timestamp=2019-08-20T16:44:20.254Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
[WARN ] 2019-08-20T16:44:20,335Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [fe9a7705-b555-4ef8-80b0-856818aad4e6] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000006, flow-id=fe9a7705-b555-4ef8-80b0-856818aad4e6, invocation_id=12c19905-0f4e-4d47-b368-69c0727e1907, invocation_timestamp=2019-08-20T16:44:20.254Z, origin=O=Mock Company 1, L=London, C=GB, session_id=12c19905-0f4e-4d47-b368-69c0727e1907, session_timestamp=2019-08-20T16:44:20.254Z, thread-id=284, tx_id=79A0EF59BD5B284083F7292F229E0BD8CC7E6DD14C486F3ED42CF0C44188D21B}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=3915656230143119418) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:44:20,495Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164420.370/nodes/0/cordapps] {}
[INFO ] 2019-08-20T16:44:20,496Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164420.370/nodes/0/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:44:20,496Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164420.370/nodes/0/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:44:20,519Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:44:20,526Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:44:20,530Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:20,530Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:44:20,530Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:20,536Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:44:20.369Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:44:20,980Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:44:20,981Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164420.370/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:44:20,981Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:44:20,983Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:44:20,985Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:20,985Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:21,073Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:21,084Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:21,119Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:21,129Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:21,132Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:21,328Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:21,336Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:21,337Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319461337) {}
[INFO ] 2019-08-20T16:44:21,339Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:21,368Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319461337) {}
[INFO ] 2019-08-20T16:44:21,388Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:21,403Z [MockNode-10-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319461337) {}
[INFO ] 2019-08-20T16:44:21,407Z [MockNode-10-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:21,471Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:21,473Z [main] utilities.NotaryLoader.loadService - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-20T16:44:21,473Z [main] notary.SinglePartyNotaryService.<init> - Starting notary in validating mode {}
[INFO ] 2019-08-20T16:44:21,479Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319461337) {}
[INFO ] 2019-08-20T16:44:21,483Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319461337) {}
[INFO ] 2019-08-20T16:44:21,483Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:21,483Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319461337) {}
[INFO ] 2019-08-20T16:44:21,483Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:21,486Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164420.370/nodes/1/cordapps] {}
[INFO ] 2019-08-20T16:44:21,487Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164420.370/nodes/1/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:44:21,487Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164420.370/nodes/1/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:44:21,513Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:44:21,520Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:44:21,545Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:21,545Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:44:21,545Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:21,550Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:44:20.369Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:44:22,043Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:44:22,048Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164420.370/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:44:22,048Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:44:22,049Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:44:22,052Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:22,052Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:22,171Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:22,185Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:22,187Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:22,188Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T16:44:22,220Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:22,221Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:22,382Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:22,392Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:22,393Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319462392) {}
[INFO ] 2019-08-20T16:44:22,397Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:22,410Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319462392) {}
[INFO ] 2019-08-20T16:44:22,422Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:22,427Z [MockNode-11-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319462392) {}
[INFO ] 2019-08-20T16:44:22,432Z [MockNode-11-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:22,490Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:22,501Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319462392) {}
[INFO ] 2019-08-20T16:44:22,504Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319461337) {}
[INFO ] 2019-08-20T16:44:22,509Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:22,521Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319462392) {}
[INFO ] 2019-08-20T16:44:22,523Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:22,535Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319462392) {}
[INFO ] 2019-08-20T16:44:22,535Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:22,535Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319462392) {}
[INFO ] 2019-08-20T16:44:22,535Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:22,541Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164420.370/nodes/2/cordapps] {}
[INFO ] 2019-08-20T16:44:22,543Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164420.370/nodes/2/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:44:22,543Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164420.370/nodes/2/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:44:22,566Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:44:22,572Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:44:22,622Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:22,622Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:44:22,622Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:22,625Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:44:20.369Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:44:23,081Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:44:23,084Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164420.370/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:44:23,085Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:44:23,086Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:44:23,089Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:23,089Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:23,194Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:23,205Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:23,207Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:23,207Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T16:44:23,228Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:23,228Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:23,372Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:23,376Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:23,376Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319463376) {}
[INFO ] 2019-08-20T16:44:23,378Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:23,386Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319463376) {}
[INFO ] 2019-08-20T16:44:23,392Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:23,395Z [MockNode-12-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319463376) {}
[INFO ] 2019-08-20T16:44:23,399Z [MockNode-12-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:23,435Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:23,444Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319463376) {}
[INFO ] 2019-08-20T16:44:23,448Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319461337) {}
[INFO ] 2019-08-20T16:44:23,451Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:23,461Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319463376) {}
[INFO ] 2019-08-20T16:44:23,464Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:23,477Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319462392) {}
[INFO ] 2019-08-20T16:44:23,478Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:23,488Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319463376) {}
[INFO ] 2019-08-20T16:44:23,489Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:23,497Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319463376) {}
[INFO ] 2019-08-20T16:44:23,498Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:23,502Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319463376) {}
[INFO ] 2019-08-20T16:44:23,502Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-20T16:44:23,506Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8db850eb-bbd0-4b77-a7f5-b02f3603d14c, invocation_id=e9618f92-bfa8-4d47-b581-069568416fed, invocation_timestamp=2019-08-20T16:44:23.503Z, origin=Only For Testing, session_id=e9618f92-bfa8-4d47-b581-069568416fed, session_timestamp=2019-08-20T16:44:23.503Z, thread-id=373}
[WARN ] 2019-08-20T16:44:23,510Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8db850eb-bbd0-4b77-a7f5-b02f3603d14c, invocation_id=e9618f92-bfa8-4d47-b581-069568416fed, invocation_timestamp=2019-08-20T16:44:23.503Z, origin=Only For Testing, session_id=e9618f92-bfa8-4d47-b581-069568416fed, session_timestamp=2019-08-20T16:44:23.503Z, thread-id=373}
[WARN ] 2019-08-20T16:44:25,005Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8db850eb-bbd0-4b77-a7f5-b02f3603d14c, invocation_id=e9618f92-bfa8-4d47-b581-069568416fed, invocation_timestamp=2019-08-20T16:44:23.503Z, origin=Only For Testing, session_id=e9618f92-bfa8-4d47-b581-069568416fed, session_timestamp=2019-08-20T16:44:23.503Z, thread-id=373}
[WARN ] 2019-08-20T16:44:25,008Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8db850eb-bbd0-4b77-a7f5-b02f3603d14c, invocation_id=e9618f92-bfa8-4d47-b581-069568416fed, invocation_timestamp=2019-08-20T16:44:23.503Z, origin=Only For Testing, session_id=e9618f92-bfa8-4d47-b581-069568416fed, session_timestamp=2019-08-20T16:44:23.503Z, thread-id=373}
[WARN ] 2019-08-20T16:44:25,009Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8db850eb-bbd0-4b77-a7f5-b02f3603d14c, invocation_id=e9618f92-bfa8-4d47-b581-069568416fed, invocation_timestamp=2019-08-20T16:44:23.503Z, origin=Only For Testing, session_id=e9618f92-bfa8-4d47-b581-069568416fed, session_timestamp=2019-08-20T16:44:23.503Z, thread-id=373}
[WARN ] 2019-08-20T16:44:25,015Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8db850eb-bbd0-4b77-a7f5-b02f3603d14c, invocation_id=e9618f92-bfa8-4d47-b581-069568416fed, invocation_timestamp=2019-08-20T16:44:23.503Z, origin=Only For Testing, session_id=e9618f92-bfa8-4d47-b581-069568416fed, session_timestamp=2019-08-20T16:44:23.503Z, thread-id=373}
[WARN ] 2019-08-20T16:44:25,046Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8db850eb-bbd0-4b77-a7f5-b02f3603d14c, invocation_id=e9618f92-bfa8-4d47-b581-069568416fed, invocation_timestamp=2019-08-20T16:44:23.503Z, origin=Only For Testing, session_id=e9618f92-bfa8-4d47-b581-069568416fed, session_timestamp=2019-08-20T16:44:23.503Z, thread-id=373}
[WARN ] 2019-08-20T16:44:25,053Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8db850eb-bbd0-4b77-a7f5-b02f3603d14c, invocation_id=e9618f92-bfa8-4d47-b581-069568416fed, invocation_timestamp=2019-08-20T16:44:23.503Z, origin=Only For Testing, session_id=e9618f92-bfa8-4d47-b581-069568416fed, session_timestamp=2019-08-20T16:44:23.503Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
[INFO ] 2019-08-20T16:44:25,054Z [Mock network] corda.flow.notariseAndRecord - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8db850eb-bbd0-4b77-a7f5-b02f3603d14c, invocation_id=e9618f92-bfa8-4d47-b581-069568416fed, invocation_timestamp=2019-08-20T16:44:23.503Z, origin=Only For Testing, session_id=e9618f92-bfa8-4d47-b581-069568416fed, session_timestamp=2019-08-20T16:44:23.503Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
[INFO ] 2019-08-20T16:44:25,054Z [Mock network] corda.flow.notariseAndRecord - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8db850eb-bbd0-4b77-a7f5-b02f3603d14c, invocation_id=e9618f92-bfa8-4d47-b581-069568416fed, invocation_timestamp=2019-08-20T16:44:23.503Z, origin=Only For Testing, session_id=e9618f92-bfa8-4d47-b581-069568416fed, session_timestamp=2019-08-20T16:44:23.503Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
[INFO ] 2019-08-20T16:44:25,072Z [Mock network] corda.flow.notariseAndRecord - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8db850eb-bbd0-4b77-a7f5-b02f3603d14c, invocation_id=e9618f92-bfa8-4d47-b581-069568416fed, invocation_timestamp=2019-08-20T16:44:23.503Z, origin=Only For Testing, session_id=e9618f92-bfa8-4d47-b581-069568416fed, session_timestamp=2019-08-20T16:44:23.503Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
[INFO ] 2019-08-20T16:44:25,143Z [Mock network] corda.flow.call - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=e7eeb029-0fab-4c15-8e31-c240fbad2536, invocation_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, invocation_timestamp=2019-08-20T16:44:25.111Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, session_timestamp=2019-08-20T16:44:25.111Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
[WARN ] 2019-08-20T16:44:25,143Z [Mock network] corda.flow.maybeWireUpProgressTracking - ProgressTracker has not been started {fiber-id=10000008, flow-id=e7eeb029-0fab-4c15-8e31-c240fbad2536, invocation_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, invocation_timestamp=2019-08-20T16:44:25.111Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, session_timestamp=2019-08-20T16:44:25.111Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
[INFO ] 2019-08-20T16:44:25,156Z [Mock network] corda.flow.call - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=e7eeb029-0fab-4c15-8e31-c240fbad2536, invocation_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, invocation_timestamp=2019-08-20T16:44:25.111Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, session_timestamp=2019-08-20T16:44:25.111Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
[WARN ] 2019-08-20T16:44:25,160Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {fiber-id=10000008, flow-id=e7eeb029-0fab-4c15-8e31-c240fbad2536, invocation_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, invocation_timestamp=2019-08-20T16:44:25.111Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, session_timestamp=2019-08-20T16:44:25.111Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
[INFO ] 2019-08-20T16:44:25,170Z [Mock network] corda.flow.call - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8db850eb-bbd0-4b77-a7f5-b02f3603d14c, invocation_id=e9618f92-bfa8-4d47-b581-069568416fed, invocation_timestamp=2019-08-20T16:44:23.503Z, origin=Only For Testing, session_id=e9618f92-bfa8-4d47-b581-069568416fed, session_timestamp=2019-08-20T16:44:23.503Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
[INFO ] 2019-08-20T16:44:25,170Z [Mock network] corda.flow.call - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8db850eb-bbd0-4b77-a7f5-b02f3603d14c, invocation_id=e9618f92-bfa8-4d47-b581-069568416fed, invocation_timestamp=2019-08-20T16:44:23.503Z, origin=Only For Testing, session_id=e9618f92-bfa8-4d47-b581-069568416fed, session_timestamp=2019-08-20T16:44:23.503Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
[INFO ] 2019-08-20T16:44:25,177Z [Mock network] corda.flow.run - Flow raised an error... sending it to flow hospital {fiber-id=10000008, flow-id=e7eeb029-0fab-4c15-8e31-c240fbad2536, invocation_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, invocation_timestamp=2019-08-20T16:44:25.111Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, session_timestamp=2019-08-20T16:44:25.111Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=617907771894857895) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:44:25,178Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Invocation, sessionId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=617907771894857895)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D-4022578576864260341-6152283592816737855)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))]), frozenFiber=D6FD642049B317E7821CE57F9E5ACD6F03D8D0742BDA80833F525743FD05647C), errorState=Clean, numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@4375a0d9, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3adcf65f], isFlowResumed=true, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=6f569d5f-4b4f-48c3-b348-8e58f476e2a0) {fiber-id=10000008, flow-id=e7eeb029-0fab-4c15-8e31-c240fbad2536, invocation_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, invocation_timestamp=2019-08-20T16:44:25.111Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, session_timestamp=2019-08-20T16:44:25.111Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
[INFO ] 2019-08-20T16:44:25,178Z [Mock network] statemachine.StaffedFlowHospital.invoke - Flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] has error [0] {fiber-id=10000008, flow-id=e7eeb029-0fab-4c15-8e31-c240fbad2536, invocation_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, invocation_timestamp=2019-08-20T16:44:25.111Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, session_timestamp=2019-08-20T16:44:25.111Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=617907771894857895) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:44:25,178Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] error allowed to propagate {fiber-id=10000008, flow-id=e7eeb029-0fab-4c15-8e31-c240fbad2536, invocation_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, invocation_timestamp=2019-08-20T16:44:25.111Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, session_timestamp=2019-08-20T16:44:25.111Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
[WARN ] 2019-08-20T16:44:25,183Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] errored, dumping all transitions:

 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.127Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[e7eeb029-0fab-4c15-8e31-c240fbad2536], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Invocation, sessionId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=6B6E5D887B10FAAF83DC41A973799D8C60342D59FB2EA1867437A49E897413A4), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@75597c55])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@75597c55])
    SignalFlowHasStarted(flowId=[e7eeb029-0fab-4c15-8e31-c240fbad2536])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=4022578576864260341), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=617907771894857895), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-4022578576864260341-6152283592816737855-0-0), senderUUID=6f569d5f-4b4f-48c3-b348-8e58f476e2a0))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=617907771894857895): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=4022578576864260341)), errors=[], deduplicationSeed=D-4022578576864260341-6152283592816737855)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@75597c55]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.132Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.132Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.140Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))]), maySkipCheckpoint=false, fiber=A7A7A2F5BFEB684C28F4380897E003EC2A76D1C70874D545135AFB572E5D1280, )
  Actions: 
    PersistCheckpoint(id=[e7eeb029-0fab-4c15-8e31-c240fbad2536], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Invocation, sessionId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=617907771894857895)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=4022578576864260341)), errors=[], deduplicationSeed=D-4022578576864260341-6152283592816737855)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))]), frozenFiber=A7A7A2F5BFEB684C28F4380897E003EC2A76D1C70874D545135AFB572E5D1280), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=6B6E5D887B10FAAF83DC41A973799D8C60342D59FB2EA1867437A49E897413A4)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))]), frozenFiber=A7A7A2F5BFEB684C28F4380897E003EC2A76D1C70874D545135AFB572E5D1280)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.141Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=617907771894857895).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.143Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.152Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=5E98DFE20E8A601C144E770C03CDFDECA69A134196190792D8BC6B6A834A0861, )
  Actions: 
    PersistCheckpoint(id=[e7eeb029-0fab-4c15-8e31-c240fbad2536], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Invocation, sessionId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=617907771894857895)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=4022578576864260341)), errors=[], deduplicationSeed=D-4022578576864260341-6152283592816737855)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=5E98DFE20E8A601C144E770C03CDFDECA69A134196190792D8BC6B6A834A0861), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    A7A7A2F5BFEB684C28F4380897E003EC2A76D1C70874D545135AFB572E5D1280
    5E98DFE20E8A601C144E770C03CDFDECA69A134196190792D8BC6B6A834A0861
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.155Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=4022578576864260341), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-4022578576864260341-6152283592816737855-2-0), senderUUID=6f569d5f-4b4f-48c3-b348-8e58f476e2a0))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.156Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.160Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.164Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))]), maySkipCheckpoint=false, fiber=D6FD642049B317E7821CE57F9E5ACD6F03D8D0742BDA80833F525743FD05647C, )
  Actions: 
    PersistCheckpoint(id=[e7eeb029-0fab-4c15-8e31-c240fbad2536], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Invocation, sessionId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=617907771894857895)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=4022578576864260341)), errors=[], deduplicationSeed=D-4022578576864260341-6152283592816737855)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))]), frozenFiber=D6FD642049B317E7821CE57F9E5ACD6F03D8D0742BDA80833F525743FD05647C), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))])
checkpoint.flowState.frozenFiber.hash: 
    5E98DFE20E8A601C144E770C03CDFDECA69A134196190792D8BC6B6A834A0861
    D6FD642049B317E7821CE57F9E5ACD6F03D8D0742BDA80833F525743FD05647C
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.164Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.176Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=617907771894857895), payload=net.corda.node.services.statemachine.EndSessionMessage@17b69124), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3adcf65f, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=617907771894857895).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=4022578576864260341))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3adcf65f]


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.177Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=617907771894857895) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.177Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.178Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=617907771894857895) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2243469818847527025, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=617907771894857895) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.178Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.178Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000008, flow-id=e7eeb029-0fab-4c15-8e31-c240fbad2536, invocation_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, invocation_timestamp=2019-08-20T16:44:25.111Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, session_timestamp=2019-08-20T16:44:25.111Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
[WARN ] 2019-08-20T16:44:25,183Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000008, flow-id=e7eeb029-0fab-4c15-8e31-c240fbad2536, invocation_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, invocation_timestamp=2019-08-20T16:44:25.111Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, session_timestamp=2019-08-20T16:44:25.111Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=617907771894857895) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[WARN ] 2019-08-20T16:44:25,183Z [Mock network] statemachine.ActionExecutorImpl.executePropagateErrors - Propagating error {fiber-id=10000008, flow-id=e7eeb029-0fab-4c15-8e31-c240fbad2536, invocation_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, invocation_timestamp=2019-08-20T16:44:25.111Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, session_timestamp=2019-08-20T16:44:25.111Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
[WARN ] 2019-08-20T16:44:25,201Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] errored, dumping all transitions:

 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.127Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[e7eeb029-0fab-4c15-8e31-c240fbad2536], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Invocation, sessionId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=6B6E5D887B10FAAF83DC41A973799D8C60342D59FB2EA1867437A49E897413A4), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@75597c55])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@75597c55])
    SignalFlowHasStarted(flowId=[e7eeb029-0fab-4c15-8e31-c240fbad2536])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=4022578576864260341), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=617907771894857895), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-4022578576864260341-6152283592816737855-0-0), senderUUID=6f569d5f-4b4f-48c3-b348-8e58f476e2a0))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=617907771894857895): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=4022578576864260341)), errors=[], deduplicationSeed=D-4022578576864260341-6152283592816737855)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@75597c55]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.132Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.132Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.140Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))]), maySkipCheckpoint=false, fiber=A7A7A2F5BFEB684C28F4380897E003EC2A76D1C70874D545135AFB572E5D1280, )
  Actions: 
    PersistCheckpoint(id=[e7eeb029-0fab-4c15-8e31-c240fbad2536], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Invocation, sessionId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=617907771894857895)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=4022578576864260341)), errors=[], deduplicationSeed=D-4022578576864260341-6152283592816737855)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))]), frozenFiber=A7A7A2F5BFEB684C28F4380897E003EC2A76D1C70874D545135AFB572E5D1280), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=6B6E5D887B10FAAF83DC41A973799D8C60342D59FB2EA1867437A49E897413A4)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))]), frozenFiber=A7A7A2F5BFEB684C28F4380897E003EC2A76D1C70874D545135AFB572E5D1280)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.141Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=617907771894857895).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.143Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.152Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=5E98DFE20E8A601C144E770C03CDFDECA69A134196190792D8BC6B6A834A0861, )
  Actions: 
    PersistCheckpoint(id=[e7eeb029-0fab-4c15-8e31-c240fbad2536], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Invocation, sessionId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=617907771894857895)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=4022578576864260341)), errors=[], deduplicationSeed=D-4022578576864260341-6152283592816737855)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=5E98DFE20E8A601C144E770C03CDFDECA69A134196190792D8BC6B6A834A0861), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    A7A7A2F5BFEB684C28F4380897E003EC2A76D1C70874D545135AFB572E5D1280
    5E98DFE20E8A601C144E770C03CDFDECA69A134196190792D8BC6B6A834A0861
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.155Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=4022578576864260341), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-4022578576864260341-6152283592816737855-2-0), senderUUID=6f569d5f-4b4f-48c3-b348-8e58f476e2a0))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.156Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.160Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.164Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))]), maySkipCheckpoint=false, fiber=D6FD642049B317E7821CE57F9E5ACD6F03D8D0742BDA80833F525743FD05647C, )
  Actions: 
    PersistCheckpoint(id=[e7eeb029-0fab-4c15-8e31-c240fbad2536], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Invocation, sessionId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=617907771894857895)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=4022578576864260341)), errors=[], deduplicationSeed=D-4022578576864260341-6152283592816737855)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))]), frozenFiber=D6FD642049B317E7821CE57F9E5ACD6F03D8D0742BDA80833F525743FD05647C), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))])
checkpoint.flowState.frozenFiber.hash: 
    5E98DFE20E8A601C144E770C03CDFDECA69A134196190792D8BC6B6A834A0861
    D6FD642049B317E7821CE57F9E5ACD6F03D8D0742BDA80833F525743FD05647C
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.164Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.176Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=617907771894857895), payload=net.corda.node.services.statemachine.EndSessionMessage@17b69124), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3adcf65f, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=617907771894857895).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=4022578576864260341))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3adcf65f]


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.177Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=617907771894857895) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.177Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.178Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=617907771894857895) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2243469818847527025, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=617907771894857895) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.178Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.178Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] ---
  Timestamp: 2019-08-20T16:44:25.195Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=2243469818847527025)], sessions=[Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D-4022578576864260341-6152283592816737855)], senderUUID=6f569d5f-4b4f-48c3-b348-8e58f476e2a0)
    CreateTransaction
    RemoveCheckpoint(id=[e7eeb029-0fab-4c15-8e31-c240fbad2536])
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3adcf65f])
    ReleaseSoftLocks(uuid=e7eeb029-0fab-4c15-8e31-c240fbad2536)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3adcf65f])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=617907771894857895)])
    RemoveFlow(flowId=[e7eeb029-0fab-4c15-8e31-c240fbad2536], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=2243469818847527025, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=617907771894857895) with empty buffer)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Invocation, sessionId=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, timestamp: 2019-08-20T16:44:25.111Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=617907771894857895)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D-4022578576864260341-6152283592816737855)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=617907771894857895))]), frozenFiber=D6FD642049B317E7821CE57F9E5ACD6F03D8D0742BDA80833F525743FD05647C), errorState=Errored(errors=[FlowError(errorId=2243469818847527025, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=617907771894857895) with empty buffer)], propagatedIndex=1, propagating=true), numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@4375a0d9, pendingDeduplicationHandlers=[], isFlowResumed=false, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=6f569d5f-4b4f-48c3-b348-8e58f476e2a0))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.errorState.propagatedIndex: 
    0
    1
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3adcf65f]
    []
isRemoved: 
    false
    true
 {fiber-id=10000008, flow-id=e7eeb029-0fab-4c15-8e31-c240fbad2536, invocation_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, invocation_timestamp=2019-08-20T16:44:25.111Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, session_timestamp=2019-08-20T16:44:25.111Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
[WARN ] 2019-08-20T16:44:25,201Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [e7eeb029-0fab-4c15-8e31-c240fbad2536] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000008, flow-id=e7eeb029-0fab-4c15-8e31-c240fbad2536, invocation_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, invocation_timestamp=2019-08-20T16:44:25.111Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d9434fcd-e397-4b6e-aeae-cc02a70eaf82, session_timestamp=2019-08-20T16:44:25.111Z, thread-id=373, tx_id=2BAC013E5A944B8D12887702E6843D90C93E5D81E2EC69E1A22C34BAB8905C6B}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=617907771894857895) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:44:25,289Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164425.223/nodes/0/cordapps] {}
[INFO ] 2019-08-20T16:44:25,289Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164425.223/nodes/0/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:44:25,290Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164425.223/nodes/0/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:44:25,312Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:44:25,317Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:44:25,321Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:25,321Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:44:25,322Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:25,328Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:44:25.223Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:44:25,864Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:44:25,865Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164425.223/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:44:25,866Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:44:25,867Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:44:25,869Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:25,869Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:25,964Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:25,972Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:26,013Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:26,024Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:26,024Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:26,202Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:26,206Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:26,207Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319466206) {}
[INFO ] 2019-08-20T16:44:26,212Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:26,237Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319466206) {}
[INFO ] 2019-08-20T16:44:26,250Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:26,255Z [MockNode-13-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319466206) {}
[INFO ] 2019-08-20T16:44:26,259Z [MockNode-13-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:26,317Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:26,319Z [main] utilities.NotaryLoader.loadService - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-20T16:44:26,319Z [main] notary.SinglePartyNotaryService.<init> - Starting notary in validating mode {}
[INFO ] 2019-08-20T16:44:26,330Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319466206) {}
[INFO ] 2019-08-20T16:44:26,335Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319466206) {}
[INFO ] 2019-08-20T16:44:26,335Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:26,335Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319466206) {}
[INFO ] 2019-08-20T16:44:26,335Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:26,338Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164425.223/nodes/1/cordapps] {}
[INFO ] 2019-08-20T16:44:26,339Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164425.223/nodes/1/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:44:26,339Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164425.223/nodes/1/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:44:26,366Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:44:26,372Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:44:26,403Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:26,403Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:44:26,403Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:26,412Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:44:25.223Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:44:26,935Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:44:26,936Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164425.223/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:44:26,937Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:44:26,938Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:44:26,940Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:26,940Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:27,019Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:27,030Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:27,032Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:27,033Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T16:44:27,052Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:27,052Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:27,175Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:27,181Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:27,181Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319467181) {}
[INFO ] 2019-08-20T16:44:27,183Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:27,187Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319467181) {}
[INFO ] 2019-08-20T16:44:27,192Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:27,197Z [MockNode-14-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319467181) {}
[INFO ] 2019-08-20T16:44:27,202Z [MockNode-14-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:27,243Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:27,251Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319467181) {}
[INFO ] 2019-08-20T16:44:27,253Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319466206) {}
[INFO ] 2019-08-20T16:44:27,254Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:27,264Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319467181) {}
[INFO ] 2019-08-20T16:44:27,266Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:27,274Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319467181) {}
[INFO ] 2019-08-20T16:44:27,274Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:27,274Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319467181) {}
[INFO ] 2019-08-20T16:44:27,274Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:27,286Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164425.223/nodes/2/cordapps] {}
[INFO ] 2019-08-20T16:44:27,287Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164425.223/nodes/2/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:44:27,287Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164425.223/nodes/2/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:44:27,314Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:44:27,324Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:44:27,358Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:27,358Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:44:27,358Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:27,362Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:44:25.223Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:44:27,791Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:44:27,793Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164425.223/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:44:27,793Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:44:27,794Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:44:27,799Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:27,799Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:27,894Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:27,909Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:27,914Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:27,914Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T16:44:27,934Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:27,935Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:28,088Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:28,093Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:28,093Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319468093) {}
[INFO ] 2019-08-20T16:44:28,097Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:28,107Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319468093) {}
[INFO ] 2019-08-20T16:44:28,114Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:28,117Z [MockNode-15-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319468093) {}
[INFO ] 2019-08-20T16:44:28,121Z [MockNode-15-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:28,165Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:28,172Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319468093) {}
[INFO ] 2019-08-20T16:44:28,174Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319466206) {}
[INFO ] 2019-08-20T16:44:28,175Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:28,183Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319468093) {}
[INFO ] 2019-08-20T16:44:28,185Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:28,193Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319467181) {}
[INFO ] 2019-08-20T16:44:28,194Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:28,207Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319468093) {}
[INFO ] 2019-08-20T16:44:28,209Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:28,223Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319468093) {}
[INFO ] 2019-08-20T16:44:28,223Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:28,223Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319468093) {}
[INFO ] 2019-08-20T16:44:28,223Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-20T16:44:28,226Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=06aab0f6-99df-46a6-bcc4-44a0c5b584e7, invocation_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, invocation_timestamp=2019-08-20T16:44:28.224Z, origin=Only For Testing, session_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, session_timestamp=2019-08-20T16:44:28.224Z, thread-id=462}
[WARN ] 2019-08-20T16:44:28,230Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=06aab0f6-99df-46a6-bcc4-44a0c5b584e7, invocation_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, invocation_timestamp=2019-08-20T16:44:28.224Z, origin=Only For Testing, session_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, session_timestamp=2019-08-20T16:44:28.224Z, thread-id=462}
[WARN ] 2019-08-20T16:44:29,262Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=06aab0f6-99df-46a6-bcc4-44a0c5b584e7, invocation_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, invocation_timestamp=2019-08-20T16:44:28.224Z, origin=Only For Testing, session_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, session_timestamp=2019-08-20T16:44:28.224Z, thread-id=462}
[WARN ] 2019-08-20T16:44:29,264Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=06aab0f6-99df-46a6-bcc4-44a0c5b584e7, invocation_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, invocation_timestamp=2019-08-20T16:44:28.224Z, origin=Only For Testing, session_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, session_timestamp=2019-08-20T16:44:28.224Z, thread-id=462}
[WARN ] 2019-08-20T16:44:29,265Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=06aab0f6-99df-46a6-bcc4-44a0c5b584e7, invocation_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, invocation_timestamp=2019-08-20T16:44:28.224Z, origin=Only For Testing, session_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, session_timestamp=2019-08-20T16:44:28.224Z, thread-id=462}
[WARN ] 2019-08-20T16:44:29,271Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=06aab0f6-99df-46a6-bcc4-44a0c5b584e7, invocation_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, invocation_timestamp=2019-08-20T16:44:28.224Z, origin=Only For Testing, session_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, session_timestamp=2019-08-20T16:44:28.224Z, thread-id=462}
[WARN ] 2019-08-20T16:44:29,291Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=06aab0f6-99df-46a6-bcc4-44a0c5b584e7, invocation_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, invocation_timestamp=2019-08-20T16:44:28.224Z, origin=Only For Testing, session_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, session_timestamp=2019-08-20T16:44:28.224Z, thread-id=462}
[WARN ] 2019-08-20T16:44:29,296Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=06aab0f6-99df-46a6-bcc4-44a0c5b584e7, invocation_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, invocation_timestamp=2019-08-20T16:44:28.224Z, origin=Only For Testing, session_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, session_timestamp=2019-08-20T16:44:28.224Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
[INFO ] 2019-08-20T16:44:29,296Z [Mock network] corda.flow.notariseAndRecord - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=06aab0f6-99df-46a6-bcc4-44a0c5b584e7, invocation_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, invocation_timestamp=2019-08-20T16:44:28.224Z, origin=Only For Testing, session_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, session_timestamp=2019-08-20T16:44:28.224Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
[INFO ] 2019-08-20T16:44:29,296Z [Mock network] corda.flow.notariseAndRecord - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=06aab0f6-99df-46a6-bcc4-44a0c5b584e7, invocation_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, invocation_timestamp=2019-08-20T16:44:28.224Z, origin=Only For Testing, session_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, session_timestamp=2019-08-20T16:44:28.224Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
[INFO ] 2019-08-20T16:44:29,313Z [Mock network] corda.flow.notariseAndRecord - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=06aab0f6-99df-46a6-bcc4-44a0c5b584e7, invocation_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, invocation_timestamp=2019-08-20T16:44:28.224Z, origin=Only For Testing, session_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, session_timestamp=2019-08-20T16:44:28.224Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
[INFO ] 2019-08-20T16:44:29,348Z [Mock network] corda.flow.call - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=83fac779-ae17-47a8-953a-187afbead2d1, invocation_id=090dccdd-c564-4a99-accf-767b11b1fb44, invocation_timestamp=2019-08-20T16:44:29.332Z, origin=O=Mock Company 1, L=London, C=GB, session_id=090dccdd-c564-4a99-accf-767b11b1fb44, session_timestamp=2019-08-20T16:44:29.332Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
[WARN ] 2019-08-20T16:44:29,348Z [Mock network] corda.flow.maybeWireUpProgressTracking - ProgressTracker has not been started {fiber-id=10000010, flow-id=83fac779-ae17-47a8-953a-187afbead2d1, invocation_id=090dccdd-c564-4a99-accf-767b11b1fb44, invocation_timestamp=2019-08-20T16:44:29.332Z, origin=O=Mock Company 1, L=London, C=GB, session_id=090dccdd-c564-4a99-accf-767b11b1fb44, session_timestamp=2019-08-20T16:44:29.332Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
[INFO ] 2019-08-20T16:44:29,358Z [Mock network] corda.flow.call - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=83fac779-ae17-47a8-953a-187afbead2d1, invocation_id=090dccdd-c564-4a99-accf-767b11b1fb44, invocation_timestamp=2019-08-20T16:44:29.332Z, origin=O=Mock Company 1, L=London, C=GB, session_id=090dccdd-c564-4a99-accf-767b11b1fb44, session_timestamp=2019-08-20T16:44:29.332Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
[WARN ] 2019-08-20T16:44:29,361Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {fiber-id=10000010, flow-id=83fac779-ae17-47a8-953a-187afbead2d1, invocation_id=090dccdd-c564-4a99-accf-767b11b1fb44, invocation_timestamp=2019-08-20T16:44:29.332Z, origin=O=Mock Company 1, L=London, C=GB, session_id=090dccdd-c564-4a99-accf-767b11b1fb44, session_timestamp=2019-08-20T16:44:29.332Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
[INFO ] 2019-08-20T16:44:29,371Z [Mock network] corda.flow.call - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=06aab0f6-99df-46a6-bcc4-44a0c5b584e7, invocation_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, invocation_timestamp=2019-08-20T16:44:28.224Z, origin=Only For Testing, session_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, session_timestamp=2019-08-20T16:44:28.224Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
[INFO ] 2019-08-20T16:44:29,371Z [Mock network] corda.flow.call - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=06aab0f6-99df-46a6-bcc4-44a0c5b584e7, invocation_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, invocation_timestamp=2019-08-20T16:44:28.224Z, origin=Only For Testing, session_id=1605e3c3-dc9f-4901-b907-4c9c1460b9fd, session_timestamp=2019-08-20T16:44:28.224Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
[INFO ] 2019-08-20T16:44:29,379Z [Mock network] corda.flow.run - Flow raised an error... sending it to flow hospital {fiber-id=10000010, flow-id=83fac779-ae17-47a8-953a-187afbead2d1, invocation_id=090dccdd-c564-4a99-accf-767b11b1fb44, invocation_timestamp=2019-08-20T16:44:29.332Z, origin=O=Mock Company 1, L=London, C=GB, session_id=090dccdd-c564-4a99-accf-767b11b1fb44, session_timestamp=2019-08-20T16:44:29.332Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1487152755658842740) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:44:29,379Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [83fac779-ae17-47a8-953a-187afbead2d1] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Invocation, sessionId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1487152755658842740)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--517990414638344994--355583880568639802)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))]), frozenFiber=A7DEA34C16D99286CF51EF4E87112F751F831628B78A245EBE7A1F91EC1B3B47), errorState=Clean, numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@15e96975, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51aa2314], isFlowResumed=true, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=4b6a8783-1c17-4f08-93e8-d9ecb79aed3d) {fiber-id=10000010, flow-id=83fac779-ae17-47a8-953a-187afbead2d1, invocation_id=090dccdd-c564-4a99-accf-767b11b1fb44, invocation_timestamp=2019-08-20T16:44:29.332Z, origin=O=Mock Company 1, L=London, C=GB, session_id=090dccdd-c564-4a99-accf-767b11b1fb44, session_timestamp=2019-08-20T16:44:29.332Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
[INFO ] 2019-08-20T16:44:29,380Z [Mock network] statemachine.StaffedFlowHospital.invoke - Flow [83fac779-ae17-47a8-953a-187afbead2d1] has error [0] {fiber-id=10000010, flow-id=83fac779-ae17-47a8-953a-187afbead2d1, invocation_id=090dccdd-c564-4a99-accf-767b11b1fb44, invocation_timestamp=2019-08-20T16:44:29.332Z, origin=O=Mock Company 1, L=London, C=GB, session_id=090dccdd-c564-4a99-accf-767b11b1fb44, session_timestamp=2019-08-20T16:44:29.332Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1487152755658842740) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:44:29,380Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [83fac779-ae17-47a8-953a-187afbead2d1] error allowed to propagate {fiber-id=10000010, flow-id=83fac779-ae17-47a8-953a-187afbead2d1, invocation_id=090dccdd-c564-4a99-accf-767b11b1fb44, invocation_timestamp=2019-08-20T16:44:29.332Z, origin=O=Mock Company 1, L=London, C=GB, session_id=090dccdd-c564-4a99-accf-767b11b1fb44, session_timestamp=2019-08-20T16:44:29.332Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
[WARN ] 2019-08-20T16:44:29,387Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [83fac779-ae17-47a8-953a-187afbead2d1] errored, dumping all transitions:

 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.342Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[83fac779-ae17-47a8-953a-187afbead2d1], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Invocation, sessionId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=7106DCA2BEEE63D36FC5FB338E8C7EE07E28EB9755D10992C84A7BC15759560B), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@e877853])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@e877853])
    SignalFlowHasStarted(flowId=[83fac779-ae17-47a8-953a-187afbead2d1])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-517990414638344994), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=1487152755658842740), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--517990414638344994--355583880568639802-0-0), senderUUID=4b6a8783-1c17-4f08-93e8-d9ecb79aed3d))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=1487152755658842740): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-517990414638344994)), errors=[], deduplicationSeed=D--517990414638344994--355583880568639802)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@e877853]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.342Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.342Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.346Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))]), maySkipCheckpoint=false, fiber=EF549E00C078A7CB62B1481C2744C8FAE84B8B7CC26D7D199AC9151E32AA5CE8, )
  Actions: 
    PersistCheckpoint(id=[83fac779-ae17-47a8-953a-187afbead2d1], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Invocation, sessionId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1487152755658842740)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-517990414638344994)), errors=[], deduplicationSeed=D--517990414638344994--355583880568639802)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))]), frozenFiber=EF549E00C078A7CB62B1481C2744C8FAE84B8B7CC26D7D199AC9151E32AA5CE8), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=7106DCA2BEEE63D36FC5FB338E8C7EE07E28EB9755D10992C84A7BC15759560B)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))]), frozenFiber=EF549E00C078A7CB62B1481C2744C8FAE84B8B7CC26D7D199AC9151E32AA5CE8)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.346Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=1487152755658842740).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.348Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.355Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=271490603B1943B0D404EDB88FC08E79F86DCCF1DC8F54D229797B835B0FE1F7, )
  Actions: 
    PersistCheckpoint(id=[83fac779-ae17-47a8-953a-187afbead2d1], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Invocation, sessionId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1487152755658842740)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-517990414638344994)), errors=[], deduplicationSeed=D--517990414638344994--355583880568639802)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=271490603B1943B0D404EDB88FC08E79F86DCCF1DC8F54D229797B835B0FE1F7), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    EF549E00C078A7CB62B1481C2744C8FAE84B8B7CC26D7D199AC9151E32AA5CE8
    271490603B1943B0D404EDB88FC08E79F86DCCF1DC8F54D229797B835B0FE1F7
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.357Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-517990414638344994), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--517990414638344994--355583880568639802-2-0), senderUUID=4b6a8783-1c17-4f08-93e8-d9ecb79aed3d))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.357Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.361Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.365Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))]), maySkipCheckpoint=false, fiber=A7DEA34C16D99286CF51EF4E87112F751F831628B78A245EBE7A1F91EC1B3B47, )
  Actions: 
    PersistCheckpoint(id=[83fac779-ae17-47a8-953a-187afbead2d1], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Invocation, sessionId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1487152755658842740)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-517990414638344994)), errors=[], deduplicationSeed=D--517990414638344994--355583880568639802)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))]), frozenFiber=A7DEA34C16D99286CF51EF4E87112F751F831628B78A245EBE7A1F91EC1B3B47), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))])
checkpoint.flowState.frozenFiber.hash: 
    271490603B1943B0D404EDB88FC08E79F86DCCF1DC8F54D229797B835B0FE1F7
    A7DEA34C16D99286CF51EF4E87112F751F831628B78A245EBE7A1F91EC1B3B47
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.365Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.378Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1487152755658842740), payload=net.corda.node.services.statemachine.EndSessionMessage@17b69124), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51aa2314, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=1487152755658842740).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=-517990414638344994))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51aa2314]


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.379Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1487152755658842740) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.379Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.380Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1487152755658842740) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-1107239916220053110, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1487152755658842740) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.380Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.380Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000010, flow-id=83fac779-ae17-47a8-953a-187afbead2d1, invocation_id=090dccdd-c564-4a99-accf-767b11b1fb44, invocation_timestamp=2019-08-20T16:44:29.332Z, origin=O=Mock Company 1, L=London, C=GB, session_id=090dccdd-c564-4a99-accf-767b11b1fb44, session_timestamp=2019-08-20T16:44:29.332Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
[WARN ] 2019-08-20T16:44:29,387Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [83fac779-ae17-47a8-953a-187afbead2d1] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000010, flow-id=83fac779-ae17-47a8-953a-187afbead2d1, invocation_id=090dccdd-c564-4a99-accf-767b11b1fb44, invocation_timestamp=2019-08-20T16:44:29.332Z, origin=O=Mock Company 1, L=London, C=GB, session_id=090dccdd-c564-4a99-accf-767b11b1fb44, session_timestamp=2019-08-20T16:44:29.332Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1487152755658842740) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[WARN ] 2019-08-20T16:44:29,387Z [Mock network] statemachine.ActionExecutorImpl.executePropagateErrors - Propagating error {fiber-id=10000010, flow-id=83fac779-ae17-47a8-953a-187afbead2d1, invocation_id=090dccdd-c564-4a99-accf-767b11b1fb44, invocation_timestamp=2019-08-20T16:44:29.332Z, origin=O=Mock Company 1, L=London, C=GB, session_id=090dccdd-c564-4a99-accf-767b11b1fb44, session_timestamp=2019-08-20T16:44:29.332Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
[WARN ] 2019-08-20T16:44:29,397Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [83fac779-ae17-47a8-953a-187afbead2d1] errored, dumping all transitions:

 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.342Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[83fac779-ae17-47a8-953a-187afbead2d1], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Invocation, sessionId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=7106DCA2BEEE63D36FC5FB338E8C7EE07E28EB9755D10992C84A7BC15759560B), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@e877853])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@e877853])
    SignalFlowHasStarted(flowId=[83fac779-ae17-47a8-953a-187afbead2d1])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-517990414638344994), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=1487152755658842740), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--517990414638344994--355583880568639802-0-0), senderUUID=4b6a8783-1c17-4f08-93e8-d9ecb79aed3d))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=1487152755658842740): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-517990414638344994)), errors=[], deduplicationSeed=D--517990414638344994--355583880568639802)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@e877853]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.342Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.342Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.346Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))]), maySkipCheckpoint=false, fiber=EF549E00C078A7CB62B1481C2744C8FAE84B8B7CC26D7D199AC9151E32AA5CE8, )
  Actions: 
    PersistCheckpoint(id=[83fac779-ae17-47a8-953a-187afbead2d1], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Invocation, sessionId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1487152755658842740)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-517990414638344994)), errors=[], deduplicationSeed=D--517990414638344994--355583880568639802)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))]), frozenFiber=EF549E00C078A7CB62B1481C2744C8FAE84B8B7CC26D7D199AC9151E32AA5CE8), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=7106DCA2BEEE63D36FC5FB338E8C7EE07E28EB9755D10992C84A7BC15759560B)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))]), frozenFiber=EF549E00C078A7CB62B1481C2744C8FAE84B8B7CC26D7D199AC9151E32AA5CE8)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.346Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=1487152755658842740).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.348Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.355Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=271490603B1943B0D404EDB88FC08E79F86DCCF1DC8F54D229797B835B0FE1F7, )
  Actions: 
    PersistCheckpoint(id=[83fac779-ae17-47a8-953a-187afbead2d1], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Invocation, sessionId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1487152755658842740)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-517990414638344994)), errors=[], deduplicationSeed=D--517990414638344994--355583880568639802)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=271490603B1943B0D404EDB88FC08E79F86DCCF1DC8F54D229797B835B0FE1F7), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    EF549E00C078A7CB62B1481C2744C8FAE84B8B7CC26D7D199AC9151E32AA5CE8
    271490603B1943B0D404EDB88FC08E79F86DCCF1DC8F54D229797B835B0FE1F7
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.357Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-517990414638344994), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--517990414638344994--355583880568639802-2-0), senderUUID=4b6a8783-1c17-4f08-93e8-d9ecb79aed3d))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.357Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.361Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.365Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))]), maySkipCheckpoint=false, fiber=A7DEA34C16D99286CF51EF4E87112F751F831628B78A245EBE7A1F91EC1B3B47, )
  Actions: 
    PersistCheckpoint(id=[83fac779-ae17-47a8-953a-187afbead2d1], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Invocation, sessionId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1487152755658842740)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-517990414638344994)), errors=[], deduplicationSeed=D--517990414638344994--355583880568639802)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))]), frozenFiber=A7DEA34C16D99286CF51EF4E87112F751F831628B78A245EBE7A1F91EC1B3B47), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))])
checkpoint.flowState.frozenFiber.hash: 
    271490603B1943B0D404EDB88FC08E79F86DCCF1DC8F54D229797B835B0FE1F7
    A7DEA34C16D99286CF51EF4E87112F751F831628B78A245EBE7A1F91EC1B3B47
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.365Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.378Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1487152755658842740), payload=net.corda.node.services.statemachine.EndSessionMessage@17b69124), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51aa2314, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=1487152755658842740).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=-517990414638344994))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51aa2314]


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.379Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1487152755658842740) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.379Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.380Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1487152755658842740) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-1107239916220053110, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1487152755658842740) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.380Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.380Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [83fac779-ae17-47a8-953a-187afbead2d1] ---
  Timestamp: 2019-08-20T16:44:29.394Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-1107239916220053110)], sessions=[Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--517990414638344994--355583880568639802)], senderUUID=4b6a8783-1c17-4f08-93e8-d9ecb79aed3d)
    CreateTransaction
    RemoveCheckpoint(id=[83fac779-ae17-47a8-953a-187afbead2d1])
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51aa2314])
    ReleaseSoftLocks(uuid=83fac779-ae17-47a8-953a-187afbead2d1)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51aa2314])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=1487152755658842740)])
    RemoveFlow(flowId=[83fac779-ae17-47a8-953a-187afbead2d1], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-1107239916220053110, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1487152755658842740) with empty buffer)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Invocation, sessionId=090dccdd-c564-4a99-accf-767b11b1fb44, timestamp: 2019-08-20T16:44:29.332Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1487152755658842740)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--517990414638344994--355583880568639802)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1487152755658842740))]), frozenFiber=A7DEA34C16D99286CF51EF4E87112F751F831628B78A245EBE7A1F91EC1B3B47), errorState=Errored(errors=[FlowError(errorId=-1107239916220053110, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1487152755658842740) with empty buffer)], propagatedIndex=1, propagating=true), numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@15e96975, pendingDeduplicationHandlers=[], isFlowResumed=false, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=4b6a8783-1c17-4f08-93e8-d9ecb79aed3d))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.errorState.propagatedIndex: 
    0
    1
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51aa2314]
    []
isRemoved: 
    false
    true
 {fiber-id=10000010, flow-id=83fac779-ae17-47a8-953a-187afbead2d1, invocation_id=090dccdd-c564-4a99-accf-767b11b1fb44, invocation_timestamp=2019-08-20T16:44:29.332Z, origin=O=Mock Company 1, L=London, C=GB, session_id=090dccdd-c564-4a99-accf-767b11b1fb44, session_timestamp=2019-08-20T16:44:29.332Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
[WARN ] 2019-08-20T16:44:29,397Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [83fac779-ae17-47a8-953a-187afbead2d1] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000010, flow-id=83fac779-ae17-47a8-953a-187afbead2d1, invocation_id=090dccdd-c564-4a99-accf-767b11b1fb44, invocation_timestamp=2019-08-20T16:44:29.332Z, origin=O=Mock Company 1, L=London, C=GB, session_id=090dccdd-c564-4a99-accf-767b11b1fb44, session_timestamp=2019-08-20T16:44:29.332Z, thread-id=462, tx_id=49098E00636DFFFF643D50412C9AB9AD82B09F4230654706D65806D1AEF64580}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1487152755658842740) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:44:29,502Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164429.419/nodes/0/cordapps] {}
[INFO ] 2019-08-20T16:44:29,503Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164429.419/nodes/0/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:44:29,503Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164429.419/nodes/0/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:44:29,525Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:44:29,530Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:44:29,535Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:29,535Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:44:29,535Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:29,542Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:44:29.419Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:44:30,099Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:44:30,104Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164429.419/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:44:30,104Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:44:30,110Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:44:30,112Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:30,113Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:30,194Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:30,202Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:30,236Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:30,246Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:30,246Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:30,363Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T16:44:30,368Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:30,368Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319470368) {}
[INFO ] 2019-08-20T16:44:30,371Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:30,385Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319470368) {}
[INFO ] 2019-08-20T16:44:30,398Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:30,402Z [MockNode-16-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319470368) {}
[INFO ] 2019-08-20T16:44:30,408Z [MockNode-16-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:30,449Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:30,451Z [main] utilities.NotaryLoader.loadService - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-20T16:44:30,451Z [main] notary.SinglePartyNotaryService.<init> - Starting notary in validating mode {}
[INFO ] 2019-08-20T16:44:30,462Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319470368) {}
[INFO ] 2019-08-20T16:44:30,465Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319470368) {}
[INFO ] 2019-08-20T16:44:30,465Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:30,465Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319470368) {}
[INFO ] 2019-08-20T16:44:30,465Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:30,467Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164429.419/nodes/1/cordapps] {}
[INFO ] 2019-08-20T16:44:30,468Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164429.419/nodes/1/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:44:30,468Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164429.419/nodes/1/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:44:30,493Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:44:30,499Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:44:30,523Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:30,524Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:44:30,524Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:30,527Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:44:29.419Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:44:31,047Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:44:31,048Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164429.419/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:44:31,048Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:44:31,050Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:44:31,051Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:31,052Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:31,132Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:31,146Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:31,149Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:31,149Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T16:44:31,168Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:31,168Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:31,293Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:31,298Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:31,298Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319471298) {}
[INFO ] 2019-08-20T16:44:31,300Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:31,305Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319471298) {}
[INFO ] 2019-08-20T16:44:31,312Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:31,316Z [MockNode-17-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319471298) {}
[INFO ] 2019-08-20T16:44:31,320Z [MockNode-17-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:31,369Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:31,379Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319471298) {}
[INFO ] 2019-08-20T16:44:31,383Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319470368) {}
[INFO ] 2019-08-20T16:44:31,384Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:31,398Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319471298) {}
[INFO ] 2019-08-20T16:44:31,399Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:31,407Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319471298) {}
[INFO ] 2019-08-20T16:44:31,407Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:31,407Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319471298) {}
[INFO ] 2019-08-20T16:44:31,407Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:31,412Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-164429.419/nodes/2/cordapps] {}
[INFO ] 2019-08-20T16:44:31,412Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164429.419/nodes/2/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:44:31,412Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-164429.419/nodes/2/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T16:44:31,435Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:44:31,443Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T16:44:31,469Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:31,470Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T16:44:31,470Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T16:44:31,473Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T16:44:29.419Z
      epoch=1
  } {}
[INFO ] 2019-08-20T16:44:31,860Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T16:44:31,862Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-164429.419/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T16:44:31,862Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T16:44:31,863Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T16:44:31,865Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:31,865Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:31,957Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T16:44:31,968Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T16:44:31,971Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T16:44:31,972Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T16:44:31,997Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:31,998Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:32,129Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T16:44:32,136Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T16:44:32,136Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319472136) {}
[INFO ] 2019-08-20T16:44:32,138Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:32,146Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319472136) {}
[INFO ] 2019-08-20T16:44:32,152Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T16:44:32,155Z [MockNode-18-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319472136) {}
[INFO ] 2019-08-20T16:44:32,159Z [MockNode-18-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:32,204Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B uploader=app filename=null {}
[INFO ] 2019-08-20T16:44:32,213Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319472136) {}
[INFO ] 2019-08-20T16:44:32,215Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566319470368) {}
[INFO ] 2019-08-20T16:44:32,216Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:32,222Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319472136) {}
[INFO ] 2019-08-20T16:44:32,224Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:32,235Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566319471298) {}
[INFO ] 2019-08-20T16:44:32,236Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:32,249Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319472136) {}
[INFO ] 2019-08-20T16:44:32,251Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T16:44:32,264Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319472136) {}
[INFO ] 2019-08-20T16:44:32,264Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T16:44:32,265Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566319472136) {}
[INFO ] 2019-08-20T16:44:32,265Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-20T16:44:32,270Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7e0fb93a-e275-467f-975f-537078622807, invocation_id=d246313f-25f9-403c-9a75-3d5bb51c705e, invocation_timestamp=2019-08-20T16:44:32.267Z, origin=Only For Testing, session_id=d246313f-25f9-403c-9a75-3d5bb51c705e, session_timestamp=2019-08-20T16:44:32.267Z, thread-id=551}
[WARN ] 2019-08-20T16:44:32,273Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7e0fb93a-e275-467f-975f-537078622807, invocation_id=d246313f-25f9-403c-9a75-3d5bb51c705e, invocation_timestamp=2019-08-20T16:44:32.267Z, origin=Only For Testing, session_id=d246313f-25f9-403c-9a75-3d5bb51c705e, session_timestamp=2019-08-20T16:44:32.267Z, thread-id=551}
[WARN ] 2019-08-20T16:44:33,391Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7e0fb93a-e275-467f-975f-537078622807, invocation_id=d246313f-25f9-403c-9a75-3d5bb51c705e, invocation_timestamp=2019-08-20T16:44:32.267Z, origin=Only For Testing, session_id=d246313f-25f9-403c-9a75-3d5bb51c705e, session_timestamp=2019-08-20T16:44:32.267Z, thread-id=551}
[WARN ] 2019-08-20T16:44:33,394Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7e0fb93a-e275-467f-975f-537078622807, invocation_id=d246313f-25f9-403c-9a75-3d5bb51c705e, invocation_timestamp=2019-08-20T16:44:32.267Z, origin=Only For Testing, session_id=d246313f-25f9-403c-9a75-3d5bb51c705e, session_timestamp=2019-08-20T16:44:32.267Z, thread-id=551}
[WARN ] 2019-08-20T16:44:33,396Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7e0fb93a-e275-467f-975f-537078622807, invocation_id=d246313f-25f9-403c-9a75-3d5bb51c705e, invocation_timestamp=2019-08-20T16:44:32.267Z, origin=Only For Testing, session_id=d246313f-25f9-403c-9a75-3d5bb51c705e, session_timestamp=2019-08-20T16:44:32.267Z, thread-id=551}
[WARN ] 2019-08-20T16:44:33,402Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7e0fb93a-e275-467f-975f-537078622807, invocation_id=d246313f-25f9-403c-9a75-3d5bb51c705e, invocation_timestamp=2019-08-20T16:44:32.267Z, origin=Only For Testing, session_id=d246313f-25f9-403c-9a75-3d5bb51c705e, session_timestamp=2019-08-20T16:44:32.267Z, thread-id=551}
[WARN ] 2019-08-20T16:44:33,450Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7e0fb93a-e275-467f-975f-537078622807, invocation_id=d246313f-25f9-403c-9a75-3d5bb51c705e, invocation_timestamp=2019-08-20T16:44:32.267Z, origin=Only For Testing, session_id=d246313f-25f9-403c-9a75-3d5bb51c705e, session_timestamp=2019-08-20T16:44:32.267Z, thread-id=551}
[WARN ] 2019-08-20T16:44:33,457Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7e0fb93a-e275-467f-975f-537078622807, invocation_id=d246313f-25f9-403c-9a75-3d5bb51c705e, invocation_timestamp=2019-08-20T16:44:32.267Z, origin=Only For Testing, session_id=d246313f-25f9-403c-9a75-3d5bb51c705e, session_timestamp=2019-08-20T16:44:32.267Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
[INFO ] 2019-08-20T16:44:33,457Z [Mock network] corda.flow.notariseAndRecord - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7e0fb93a-e275-467f-975f-537078622807, invocation_id=d246313f-25f9-403c-9a75-3d5bb51c705e, invocation_timestamp=2019-08-20T16:44:32.267Z, origin=Only For Testing, session_id=d246313f-25f9-403c-9a75-3d5bb51c705e, session_timestamp=2019-08-20T16:44:32.267Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
[INFO ] 2019-08-20T16:44:33,457Z [Mock network] corda.flow.notariseAndRecord - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7e0fb93a-e275-467f-975f-537078622807, invocation_id=d246313f-25f9-403c-9a75-3d5bb51c705e, invocation_timestamp=2019-08-20T16:44:32.267Z, origin=Only For Testing, session_id=d246313f-25f9-403c-9a75-3d5bb51c705e, session_timestamp=2019-08-20T16:44:32.267Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
[INFO ] 2019-08-20T16:44:33,475Z [Mock network] corda.flow.notariseAndRecord - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7e0fb93a-e275-467f-975f-537078622807, invocation_id=d246313f-25f9-403c-9a75-3d5bb51c705e, invocation_timestamp=2019-08-20T16:44:32.267Z, origin=Only For Testing, session_id=d246313f-25f9-403c-9a75-3d5bb51c705e, session_timestamp=2019-08-20T16:44:32.267Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
[INFO ] 2019-08-20T16:44:33,517Z [Mock network] corda.flow.call - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=f7c41f14-2e4c-4d7d-a216-4f5fae67521a, invocation_id=49250b91-5e3e-48fd-92e2-33c8968855dd, invocation_timestamp=2019-08-20T16:44:33.500Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49250b91-5e3e-48fd-92e2-33c8968855dd, session_timestamp=2019-08-20T16:44:33.500Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
[WARN ] 2019-08-20T16:44:33,518Z [Mock network] corda.flow.maybeWireUpProgressTracking - ProgressTracker has not been started {fiber-id=10000012, flow-id=f7c41f14-2e4c-4d7d-a216-4f5fae67521a, invocation_id=49250b91-5e3e-48fd-92e2-33c8968855dd, invocation_timestamp=2019-08-20T16:44:33.500Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49250b91-5e3e-48fd-92e2-33c8968855dd, session_timestamp=2019-08-20T16:44:33.500Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
[INFO ] 2019-08-20T16:44:33,533Z [Mock network] corda.flow.call - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=f7c41f14-2e4c-4d7d-a216-4f5fae67521a, invocation_id=49250b91-5e3e-48fd-92e2-33c8968855dd, invocation_timestamp=2019-08-20T16:44:33.500Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49250b91-5e3e-48fd-92e2-33c8968855dd, session_timestamp=2019-08-20T16:44:33.500Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
[WARN ] 2019-08-20T16:44:33,540Z [Mock network] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {fiber-id=10000012, flow-id=f7c41f14-2e4c-4d7d-a216-4f5fae67521a, invocation_id=49250b91-5e3e-48fd-92e2-33c8968855dd, invocation_timestamp=2019-08-20T16:44:33.500Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49250b91-5e3e-48fd-92e2-33c8968855dd, session_timestamp=2019-08-20T16:44:33.500Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
[INFO ] 2019-08-20T16:44:33,552Z [Mock network] corda.flow.call - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7e0fb93a-e275-467f-975f-537078622807, invocation_id=d246313f-25f9-403c-9a75-3d5bb51c705e, invocation_timestamp=2019-08-20T16:44:32.267Z, origin=Only For Testing, session_id=d246313f-25f9-403c-9a75-3d5bb51c705e, session_timestamp=2019-08-20T16:44:32.267Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
[INFO ] 2019-08-20T16:44:33,552Z [Mock network] corda.flow.call - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7e0fb93a-e275-467f-975f-537078622807, invocation_id=d246313f-25f9-403c-9a75-3d5bb51c705e, invocation_timestamp=2019-08-20T16:44:32.267Z, origin=Only For Testing, session_id=d246313f-25f9-403c-9a75-3d5bb51c705e, session_timestamp=2019-08-20T16:44:32.267Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
[INFO ] 2019-08-20T16:44:33,559Z [Mock network] corda.flow.run - Flow raised an error... sending it to flow hospital {fiber-id=10000012, flow-id=f7c41f14-2e4c-4d7d-a216-4f5fae67521a, invocation_id=49250b91-5e3e-48fd-92e2-33c8968855dd, invocation_timestamp=2019-08-20T16:44:33.500Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49250b91-5e3e-48fd-92e2-33c8968855dd, session_timestamp=2019-08-20T16:44:33.500Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=5442395885486421372) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:44:33,560Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Invocation, sessionId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=5442395885486421372)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--6477905037785808149--8843345251449756440)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))]), frozenFiber=298005C54F762C2AB0D27E163AEED389545718013BECD18AD469E627EDEAC4FB), errorState=Clean, numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@317c9625, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@752d96a2], isFlowResumed=true, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=0b46f3d4-a0e7-4161-9c6e-1eecebabcaad) {fiber-id=10000012, flow-id=f7c41f14-2e4c-4d7d-a216-4f5fae67521a, invocation_id=49250b91-5e3e-48fd-92e2-33c8968855dd, invocation_timestamp=2019-08-20T16:44:33.500Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49250b91-5e3e-48fd-92e2-33c8968855dd, session_timestamp=2019-08-20T16:44:33.500Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
[INFO ] 2019-08-20T16:44:33,560Z [Mock network] statemachine.StaffedFlowHospital.invoke - Flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] has error [0] {fiber-id=10000012, flow-id=f7c41f14-2e4c-4d7d-a216-4f5fae67521a, invocation_id=49250b91-5e3e-48fd-92e2-33c8968855dd, invocation_timestamp=2019-08-20T16:44:33.500Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49250b91-5e3e-48fd-92e2-33c8968855dd, session_timestamp=2019-08-20T16:44:33.500Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=5442395885486421372) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:44:33,560Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] error allowed to propagate {fiber-id=10000012, flow-id=f7c41f14-2e4c-4d7d-a216-4f5fae67521a, invocation_id=49250b91-5e3e-48fd-92e2-33c8968855dd, invocation_timestamp=2019-08-20T16:44:33.500Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49250b91-5e3e-48fd-92e2-33c8968855dd, session_timestamp=2019-08-20T16:44:33.500Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
[WARN ] 2019-08-20T16:44:33,570Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] errored, dumping all transitions:

 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.509Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[f7c41f14-2e4c-4d7d-a216-4f5fae67521a], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Invocation, sessionId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=7349F2B055EC7EAB4E19C0D003DEA34DCAC7320FBF8C4D870DCDBBABD911C201), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@59d75dd3])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@59d75dd3])
    SignalFlowHasStarted(flowId=[f7c41f14-2e4c-4d7d-a216-4f5fae67521a])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6477905037785808149), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=5442395885486421372), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--6477905037785808149--8843345251449756440-0-0), senderUUID=0b46f3d4-a0e7-4161-9c6e-1eecebabcaad))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=5442395885486421372): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-6477905037785808149)), errors=[], deduplicationSeed=D--6477905037785808149--8843345251449756440)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@59d75dd3]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.510Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.510Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.514Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))]), maySkipCheckpoint=false, fiber=F53CC3698EC4DEFA2F733AFDA59366BE542D621E5E09DDF675613EE65BE338C5, )
  Actions: 
    PersistCheckpoint(id=[f7c41f14-2e4c-4d7d-a216-4f5fae67521a], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Invocation, sessionId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=5442395885486421372)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-6477905037785808149)), errors=[], deduplicationSeed=D--6477905037785808149--8843345251449756440)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))]), frozenFiber=F53CC3698EC4DEFA2F733AFDA59366BE542D621E5E09DDF675613EE65BE338C5), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=7349F2B055EC7EAB4E19C0D003DEA34DCAC7320FBF8C4D870DCDBBABD911C201)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))]), frozenFiber=F53CC3698EC4DEFA2F733AFDA59366BE542D621E5E09DDF675613EE65BE338C5)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.514Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=5442395885486421372).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.518Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.525Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=A5AB96FD353C72816C02B30088FC37BE496788A7EEEF2FAE5510005CDC212512, )
  Actions: 
    PersistCheckpoint(id=[f7c41f14-2e4c-4d7d-a216-4f5fae67521a], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Invocation, sessionId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=5442395885486421372)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-6477905037785808149)), errors=[], deduplicationSeed=D--6477905037785808149--8843345251449756440)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=A5AB96FD353C72816C02B30088FC37BE496788A7EEEF2FAE5510005CDC212512), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    F53CC3698EC4DEFA2F733AFDA59366BE542D621E5E09DDF675613EE65BE338C5
    A5AB96FD353C72816C02B30088FC37BE496788A7EEEF2FAE5510005CDC212512
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.532Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6477905037785808149), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--6477905037785808149--8843345251449756440-2-0), senderUUID=0b46f3d4-a0e7-4161-9c6e-1eecebabcaad))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.532Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.541Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.544Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))]), maySkipCheckpoint=false, fiber=298005C54F762C2AB0D27E163AEED389545718013BECD18AD469E627EDEAC4FB, )
  Actions: 
    PersistCheckpoint(id=[f7c41f14-2e4c-4d7d-a216-4f5fae67521a], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Invocation, sessionId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=5442395885486421372)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-6477905037785808149)), errors=[], deduplicationSeed=D--6477905037785808149--8843345251449756440)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))]), frozenFiber=298005C54F762C2AB0D27E163AEED389545718013BECD18AD469E627EDEAC4FB), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))])
checkpoint.flowState.frozenFiber.hash: 
    A5AB96FD353C72816C02B30088FC37BE496788A7EEEF2FAE5510005CDC212512
    298005C54F762C2AB0D27E163AEED389545718013BECD18AD469E627EDEAC4FB
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.544Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.559Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5442395885486421372), payload=net.corda.node.services.statemachine.EndSessionMessage@17b69124), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@752d96a2, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=5442395885486421372).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=-6477905037785808149))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@752d96a2]


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.559Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=5442395885486421372) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.559Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.560Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=5442395885486421372) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-5345916072720089062, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=5442395885486421372) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.560Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.561Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000012, flow-id=f7c41f14-2e4c-4d7d-a216-4f5fae67521a, invocation_id=49250b91-5e3e-48fd-92e2-33c8968855dd, invocation_timestamp=2019-08-20T16:44:33.500Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49250b91-5e3e-48fd-92e2-33c8968855dd, session_timestamp=2019-08-20T16:44:33.500Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
[WARN ] 2019-08-20T16:44:33,570Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000012, flow-id=f7c41f14-2e4c-4d7d-a216-4f5fae67521a, invocation_id=49250b91-5e3e-48fd-92e2-33c8968855dd, invocation_timestamp=2019-08-20T16:44:33.500Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49250b91-5e3e-48fd-92e2-33c8968855dd, session_timestamp=2019-08-20T16:44:33.500Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=5442395885486421372) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[WARN ] 2019-08-20T16:44:33,570Z [Mock network] statemachine.ActionExecutorImpl.executePropagateErrors - Propagating error {fiber-id=10000012, flow-id=f7c41f14-2e4c-4d7d-a216-4f5fae67521a, invocation_id=49250b91-5e3e-48fd-92e2-33c8968855dd, invocation_timestamp=2019-08-20T16:44:33.500Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49250b91-5e3e-48fd-92e2-33c8968855dd, session_timestamp=2019-08-20T16:44:33.500Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
[WARN ] 2019-08-20T16:44:33,583Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] errored, dumping all transitions:

 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.509Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[f7c41f14-2e4c-4d7d-a216-4f5fae67521a], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Invocation, sessionId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=7349F2B055EC7EAB4E19C0D003DEA34DCAC7320FBF8C4D870DCDBBABD911C201), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@59d75dd3])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@59d75dd3])
    SignalFlowHasStarted(flowId=[f7c41f14-2e4c-4d7d-a216-4f5fae67521a])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6477905037785808149), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=5442395885486421372), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--6477905037785808149--8843345251449756440-0-0), senderUUID=0b46f3d4-a0e7-4161-9c6e-1eecebabcaad))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=5442395885486421372): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-6477905037785808149)), errors=[], deduplicationSeed=D--6477905037785808149--8843345251449756440)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@59d75dd3]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.510Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.510Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.514Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))]), maySkipCheckpoint=false, fiber=F53CC3698EC4DEFA2F733AFDA59366BE542D621E5E09DDF675613EE65BE338C5, )
  Actions: 
    PersistCheckpoint(id=[f7c41f14-2e4c-4d7d-a216-4f5fae67521a], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Invocation, sessionId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=5442395885486421372)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-6477905037785808149)), errors=[], deduplicationSeed=D--6477905037785808149--8843345251449756440)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))]), frozenFiber=F53CC3698EC4DEFA2F733AFDA59366BE542D621E5E09DDF675613EE65BE338C5), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=7349F2B055EC7EAB4E19C0D003DEA34DCAC7320FBF8C4D870DCDBBABD911C201)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))]), frozenFiber=F53CC3698EC4DEFA2F733AFDA59366BE542D621E5E09DDF675613EE65BE338C5)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.514Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=5442395885486421372).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.518Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.525Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=A5AB96FD353C72816C02B30088FC37BE496788A7EEEF2FAE5510005CDC212512, )
  Actions: 
    PersistCheckpoint(id=[f7c41f14-2e4c-4d7d-a216-4f5fae67521a], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Invocation, sessionId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=5442395885486421372)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-6477905037785808149)), errors=[], deduplicationSeed=D--6477905037785808149--8843345251449756440)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=A5AB96FD353C72816C02B30088FC37BE496788A7EEEF2FAE5510005CDC212512), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    F53CC3698EC4DEFA2F733AFDA59366BE542D621E5E09DDF675613EE65BE338C5
    A5AB96FD353C72816C02B30088FC37BE496788A7EEEF2FAE5510005CDC212512
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.532Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6477905037785808149), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--6477905037785808149--8843345251449756440-2-0), senderUUID=0b46f3d4-a0e7-4161-9c6e-1eecebabcaad))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.532Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.541Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.544Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))]), maySkipCheckpoint=false, fiber=298005C54F762C2AB0D27E163AEED389545718013BECD18AD469E627EDEAC4FB, )
  Actions: 
    PersistCheckpoint(id=[f7c41f14-2e4c-4d7d-a216-4f5fae67521a], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Invocation, sessionId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=5442395885486421372)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-6477905037785808149)), errors=[], deduplicationSeed=D--6477905037785808149--8843345251449756440)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))]), frozenFiber=298005C54F762C2AB0D27E163AEED389545718013BECD18AD469E627EDEAC4FB), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))])
checkpoint.flowState.frozenFiber.hash: 
    A5AB96FD353C72816C02B30088FC37BE496788A7EEEF2FAE5510005CDC212512
    298005C54F762C2AB0D27E163AEED389545718013BECD18AD469E627EDEAC4FB
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.544Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.559Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5442395885486421372), payload=net.corda.node.services.statemachine.EndSessionMessage@17b69124), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@752d96a2, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=5442395885486421372).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=-6477905037785808149))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@752d96a2]


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.559Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=5442395885486421372) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.559Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)]


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.560Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=5442395885486421372) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-5345916072720089062, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=5442395885486421372) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.560Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.561Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] ---
  Timestamp: 2019-08-20T16:44:33.578Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-5345916072720089062)], sessions=[Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--6477905037785808149--8843345251449756440)], senderUUID=0b46f3d4-a0e7-4161-9c6e-1eecebabcaad)
    CreateTransaction
    RemoveCheckpoint(id=[f7c41f14-2e4c-4d7d-a216-4f5fae67521a])
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@752d96a2])
    ReleaseSoftLocks(uuid=f7c41f14-2e4c-4d7d-a216-4f5fae67521a)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@752d96a2])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=5442395885486421372)])
    RemoveFlow(flowId=[f7c41f14-2e4c-4d7d-a216-4f5fae67521a], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-5345916072720089062, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=5442395885486421372) with empty buffer)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Invocation, sessionId=49250b91-5e3e-48fd-92e2-33c8968855dd, timestamp: 2019-08-20T16:44:33.500Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=5442395885486421372)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--6477905037785808149--8843345251449756440)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=1A9DD6D4C570E4AD5E4D590A301BA60A213F9738C57CD7B6B3D0865395CFB64B), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=5442395885486421372))]), frozenFiber=298005C54F762C2AB0D27E163AEED389545718013BECD18AD469E627EDEAC4FB), errorState=Errored(errors=[FlowError(errorId=-5345916072720089062, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=5442395885486421372) with empty buffer)], propagatedIndex=1, propagating=true), numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@317c9625, pendingDeduplicationHandlers=[], isFlowResumed=false, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=0b46f3d4-a0e7-4161-9c6e-1eecebabcaad))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.errorState.propagatedIndex: 
    0
    1
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@752d96a2]
    []
isRemoved: 
    false
    true
 {fiber-id=10000012, flow-id=f7c41f14-2e4c-4d7d-a216-4f5fae67521a, invocation_id=49250b91-5e3e-48fd-92e2-33c8968855dd, invocation_timestamp=2019-08-20T16:44:33.500Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49250b91-5e3e-48fd-92e2-33c8968855dd, session_timestamp=2019-08-20T16:44:33.500Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
[WARN ] 2019-08-20T16:44:33,584Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [f7c41f14-2e4c-4d7d-a216-4f5fae67521a] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000012, flow-id=f7c41f14-2e4c-4d7d-a216-4f5fae67521a, invocation_id=49250b91-5e3e-48fd-92e2-33c8968855dd, invocation_timestamp=2019-08-20T16:44:33.500Z, origin=O=Mock Company 1, L=London, C=GB, session_id=49250b91-5e3e-48fd-92e2-33c8968855dd, session_timestamp=2019-08-20T16:44:33.500Z, thread-id=551, tx_id=93FA112516D44D6001075B0354F3691127057CFB51886DAD611D74D1F4D2A120}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=5442395885486421372) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T16:46:40,259Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-164639.583/custom-cordapp_1_4_67d7e121-bd9b-4ce7-a8d5-cf368c9d3780.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:46:40,321Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-164639.583/custom-cordapp_1_4_67d7e121-bd9b-4ce7-a8d5-cf368c9d3780.jar {}
[INFO ] 2019-08-20T16:46:40,387Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T16:46:41,687Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:41,692Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:41,725Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:41,725Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:43,456Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:43,459Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T16:46:43,486Z [main] internal.Verifier.verifyContracts - Error validating transaction 1E8427BC4E18B0BA28594BF4983ECE41B6BF0D680C0CF797BECC7712523282B8. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T16:46:43,493Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:43,497Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T16:46:43,497Z [main] internal.Verifier.verifyContracts - Error validating transaction 1E8427BC4E18B0BA28594BF4983ECE41B6BF0D680C0CF797BECC7712523282B8. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T16:46:43,539Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:43,569Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:45,033Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:45,039Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T16:46:45,060Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-164639.583/custom-cordapp_1_4_67d7e121-bd9b-4ce7-a8d5-cf368c9d3780.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:46:45,061Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-164639.583/custom-cordapp_1_4_67d7e121-bd9b-4ce7-a8d5-cf368c9d3780.jar {}
[INFO ] 2019-08-20T16:46:45,086Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T16:46:45,164Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:45,187Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:46,208Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T16:46:46,209Z [main] internal.Verifier.verifyContracts - Error validating transaction 538582ED1DE922A26AEDDECB7D791623D2D4AA2295A5D78AC1786C37C352865E. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:47) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$14(ContractTests.java:171) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:167) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T16:46:46,212Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T16:46:46,213Z [main] internal.Verifier.verifyContracts - Error validating transaction 538582ED1DE922A26AEDDECB7D791623D2D4AA2295A5D78AC1786C37C352865E. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:47) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$14(ContractTests.java:171) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:167) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T16:46:46,244Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:46,260Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:47,349Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T16:46:47,350Z [main] internal.Verifier.verifyContracts - Error validating transaction 4DC5CD0BA682702388BFC87131957ADB3F2CC86502088AC5EF4812B3CE90FD57. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:47) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$15(ContractTests.java:179) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:175) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T16:46:47,353Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T16:46:47,354Z [main] internal.Verifier.verifyContracts - Error validating transaction 4DC5CD0BA682702388BFC87131957ADB3F2CC86502088AC5EF4812B3CE90FD57. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:47) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$15(ContractTests.java:179) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:175) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T16:46:47,386Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:47,399Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:48,312Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:48,316Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:48,342Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:48,355Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:49,460Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:49,463Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T16:46:49,483Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-164639.583/custom-cordapp_1_4_67d7e121-bd9b-4ce7-a8d5-cf368c9d3780.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:46:49,483Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-164639.583/custom-cordapp_1_4_67d7e121-bd9b-4ce7-a8d5-cf368c9d3780.jar {}
[INFO ] 2019-08-20T16:46:49,509Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T16:46:49,570Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-164639.583/custom-cordapp_1_4_67d7e121-bd9b-4ce7-a8d5-cf368c9d3780.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:46:49,571Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-164639.583/custom-cordapp_1_4_67d7e121-bd9b-4ce7-a8d5-cf368c9d3780.jar {}
[INFO ] 2019-08-20T16:46:49,595Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T16:46:49,654Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:49,667Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:50,830Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:50,831Z [main] internal.Verifier.warnOnce - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-20T16:46:50,831Z [main] internal.Verifier.verifyContracts - Error validating transaction 22871C6E0CB303B5F5354731FE36EF3D57BAEDED9E6346EF05932FEE14536C40. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:34) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T16:46:50,834Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T16:46:50,835Z [main] internal.Verifier.verifyContracts - Error validating transaction 22871C6E0CB303B5F5354731FE36EF3D57BAEDED9E6346EF05932FEE14536C40. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:34) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T16:46:50,867Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:50,883Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:51,947Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:51,951Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T16:46:51,968Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-164639.583/custom-cordapp_1_4_67d7e121-bd9b-4ce7-a8d5-cf368c9d3780.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:46:51,969Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-164639.583/custom-cordapp_1_4_67d7e121-bd9b-4ce7-a8d5-cf368c9d3780.jar {}
[INFO ] 2019-08-20T16:46:51,992Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T16:46:52,047Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:52,059Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:53,161Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T16:46:53,161Z [main] internal.Verifier.verifyContracts - Error validating transaction 4DD7180D50043EC272D6E501F289341FEA1C058B4B2DF1A679674858D3F05B0B. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:37) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T16:46:53,165Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T16:46:53,165Z [main] internal.Verifier.verifyContracts - Error validating transaction 4DD7180D50043EC272D6E501F289341FEA1C058B4B2DF1A679674858D3F05B0B. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:37) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T16:46:53,186Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:53,196Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:53,977Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:53,980Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T16:46:53,996Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-164639.583/custom-cordapp_1_4_67d7e121-bd9b-4ce7-a8d5-cf368c9d3780.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:46:53,996Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-164639.583/custom-cordapp_1_4_67d7e121-bd9b-4ce7-a8d5-cf368c9d3780.jar {}
[INFO ] 2019-08-20T16:46:54,020Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T16:46:54,082Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:54,091Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:54,904Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T16:46:54,904Z [main] internal.Verifier.verifyContracts - Error validating transaction C626B53BFA1B85AE6AC6B79EFD16C3884867EE617BA2CAF2BB07FE8A61B0F075. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:26) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T16:46:54,909Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T16:46:54,910Z [main] internal.Verifier.verifyContracts - Error validating transaction C626B53BFA1B85AE6AC6B79EFD16C3884867EE617BA2CAF2BB07FE8A61B0F075. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:26) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T16:46:54,929Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:54,939Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:55,974Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:55,978Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T16:46:55,994Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-164639.583/custom-cordapp_1_4_67d7e121-bd9b-4ce7-a8d5-cf368c9d3780.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:46:55,994Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-164639.583/custom-cordapp_1_4_67d7e121-bd9b-4ce7-a8d5-cf368c9d3780.jar {}
[INFO ] 2019-08-20T16:46:56,005Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T16:46:56,044Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:56,053Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:56,808Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:56,811Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T16:46:56,834Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-164639.583/custom-cordapp_1_4_67d7e121-bd9b-4ce7-a8d5-cf368c9d3780.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T16:46:56,836Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-164639.583/custom-cordapp_1_4_67d7e121-bd9b-4ce7-a8d5-cf368c9d3780.jar {}
[INFO ] 2019-08-20T16:46:56,860Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T16:46:56,903Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:56,906Z [main] contracts.AttachmentConstraint.warnOnce - Found state bootcamp.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[WARN ] 2019-08-20T16:46:57,688Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T16:46:57,688Z [main] internal.Verifier.verifyContracts - Error validating transaction 329A7F7A90D981219BC544274EFA0E7292F382D170A4BAA5C72150603ACFD08D. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:37) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:30) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T16:46:57,693Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:57,695Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:57,711Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:57,714Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:57,717Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T16:46:57,718Z [main] internal.Verifier.verifyContracts - Error validating transaction 042775B3121304BCB53137940CAF5407FD11E289D74CB5EE83292DC1BBD03CE6. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:22) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T16:46:57,721Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:57,724Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:57,727Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T16:46:57,727Z [main] internal.Verifier.verifyContracts - Error validating transaction 042775B3121304BCB53137940CAF5407FD11E289D74CB5EE83292DC1BBD03CE6. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:22) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T16:46:57,749Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:57,758Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:58,539Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T16:46:58,544Z [main] contracts.TransactionState.<init> - State class bootcamp.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-20T17:02:04,299Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-170202.377/custom-cordapp_1_4_86c41462-8353-4c74-a8e9-80eed738ebae.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:02:04,454Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-170202.377/custom-cordapp_1_4_86c41462-8353-4c74-a8e9-80eed738ebae.jar {}
[INFO ] 2019-08-20T17:02:04,601Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-20T17:02:14,507Z [main] internal.Verifier.verifyContracts - Error validating transaction DC5184174B541CFA36A2CD4B27857BFDACA2F554F850CE8E77FCC8A3C7A64FB0. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-20T17:02:14,521Z [main] internal.Verifier.verifyContracts - Error validating transaction DC5184174B541CFA36A2CD4B27857BFDACA2F554F850CE8E77FCC8A3C7A64FB0. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one output state
	at bootcamp.TokenContract.verify(TokenContract.java:24) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:48) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-20T17:02:19,544Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-170202.377/custom-cordapp_1_4_86c41462-8353-4c74-a8e9-80eed738ebae.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:02:19,545Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-170202.377/custom-cordapp_1_4_86c41462-8353-4c74-a8e9-80eed738ebae.jar {}
[INFO ] 2019-08-20T17:02:19,590Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-20T17:02:23,071Z [main] internal.Verifier.verifyContracts - Error validating transaction D916C6CDB848E83259645B4CCF9BA5F718AC9F423B3A0E48DF98ABE3058F20FD. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:47) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$10(ContractTests.java:171) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:167) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-20T17:02:23,075Z [main] internal.Verifier.verifyContracts - Error validating transaction D916C6CDB848E83259645B4CCF9BA5F718AC9F423B3A0E48DF98ABE3058F20FD. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:47) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$10(ContractTests.java:171) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:167) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-20T17:02:25,031Z [main] internal.Verifier.verifyContracts - Error validating transaction C237CDA6B63472A77F103549F3A8A62E3AEBDCBC64F2105024241A062353BF5A. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:47) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$11(ContractTests.java:179) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:175) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-20T17:02:25,038Z [main] internal.Verifier.verifyContracts - Error validating transaction C237CDA6B63472A77F103549F3A8A62E3AEBDCBC64F2105024241A062353BF5A. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Issuer must be required signer.
	at bootcamp.TokenContract.verify(TokenContract.java:47) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$11(ContractTests.java:179) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:175) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-20T17:02:28,853Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-170202.377/custom-cordapp_1_4_86c41462-8353-4c74-a8e9-80eed738ebae.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:02:28,853Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-170202.377/custom-cordapp_1_4_86c41462-8353-4c74-a8e9-80eed738ebae.jar {}
[INFO ] 2019-08-20T17:02:28,883Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T17:02:29,156Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-170202.377/custom-cordapp_1_4_86c41462-8353-4c74-a8e9-80eed738ebae.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:02:29,157Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-170202.377/custom-cordapp_1_4_86c41462-8353-4c74-a8e9-80eed738ebae.jar {}
[INFO ] 2019-08-20T17:02:29,180Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T17:02:29,320Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T17:02:29,396Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T17:02:31,266Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-20T17:02:31,267Z [main] internal.Verifier.warnOnce - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-20T17:02:31,267Z [main] internal.Verifier.verifyContracts - Error validating transaction 6E8A34CDBAF316C1C4F731A9EDB55322B535AF4D4FA3BEA6C371658A04F1A1AA. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:34) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-20T17:02:31,272Z [main] contracts.TransactionState.<init> - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-20T17:02:31,273Z [main] internal.Verifier.verifyContracts - Error validating transaction 6E8A34CDBAF316C1C4F731A9EDB55322B535AF4D4FA3BEA6C371658A04F1A1AA. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Outputs should be instance of Token state
	at bootcamp.TokenContract.verify(TokenContract.java:34) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:92) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-20T17:02:34,569Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-170202.377/custom-cordapp_1_4_86c41462-8353-4c74-a8e9-80eed738ebae.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:02:34,570Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-170202.377/custom-cordapp_1_4_86c41462-8353-4c74-a8e9-80eed738ebae.jar {}
[INFO ] 2019-08-20T17:02:34,596Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-20T17:02:36,652Z [main] internal.Verifier.verifyContracts - Error validating transaction 841D79FAF7C61AD7EF6BD883B41ED0C07218BDA5D3CB9FC20E290F97B481895D. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:37) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$8(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-20T17:02:36,657Z [main] internal.Verifier.verifyContracts - Error validating transaction 841D79FAF7C61AD7EF6BD883B41ED0C07218BDA5D3CB9FC20E290F97B481895D. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:37) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$8(ContractTests.java:150) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:146) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-20T17:02:38,519Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-170202.377/custom-cordapp_1_4_86c41462-8353-4c74-a8e9-80eed738ebae.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:02:38,520Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-170202.377/custom-cordapp_1_4_86c41462-8353-4c74-a8e9-80eed738ebae.jar {}
[INFO ] 2019-08-20T17:02:38,548Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-20T17:02:40,640Z [main] internal.Verifier.verifyContracts - Error validating transaction 8E917BAA4C928647B3EC304A71150CFE35E4BE849623D80A753925E364F62468. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:26) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-20T17:02:40,645Z [main] internal.Verifier.verifyContracts - Error validating transaction 8E917BAA4C928647B3EC304A71150CFE35E4BE849623D80A753925E364F62468. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Transaction must have one command
	at bootcamp.TokenContract.verify(TokenContract.java:26) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:73) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:68) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-20T17:02:42,658Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-170202.377/custom-cordapp_1_4_86c41462-8353-4c74-a8e9-80eed738ebae.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:02:42,662Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/generated-custom-cordapps/20190820-170202.377/custom-cordapp_1_4_86c41462-8353-4c74-a8e9-80eed738ebae.jar {}
[INFO ] 2019-08-20T17:02:42,695Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-20T17:02:42,765Z [main] contracts.AttachmentConstraint.warnOnce - Found state bootcamp.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[ERROR] 2019-08-20T17:02:43,676Z [main] internal.Verifier.verifyContracts - Error validating transaction 2F798D4A406E095DD9994083C0A56D221769A916D8A5863BFDA566B9B1B26F8A. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: Command must be a issue command
	at bootcamp.TokenContract.verify(TokenContract.java:37) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:30) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-20T17:02:43,795Z [main] internal.Verifier.verifyContracts - Error validating transaction B5C751CCC5E7B8EF1D1B30A02248A3A49613D9243F78EC8D43C596A8259B5B2B. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:22) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-20T17:02:43,822Z [main] internal.Verifier.verifyContracts - Error validating transaction B5C751CCC5E7B8EF1D1B30A02248A3A49613D9243F78EC8D43C596A8259B5B2B. [errorCode=gtgacr, moreInformationAt=https://errors.corda.net/OS/4.0/gtgacr] {}
java.lang.IllegalArgumentException: A transaction must have zero inputs
	at bootcamp.TokenContract.verify(TokenContract.java:22) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:33) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
r.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-20T17:03:03,332Z [main] internal.TestCordappImpl.apply - Generating CorDapp jar from local project in /Users/asadikhlas/Desktop/Asad/bootcamp-cordapp ... {}
[INFO ] 2019-08-20T17:03:07,863Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-170256.193/nodes/0/cordapps] {}
[INFO ] 2019-08-20T17:03:07,870Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170256.193/nodes/0/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:03:07,905Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170256.193/nodes/0/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T17:03:08,013Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T17:03:08,896Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T17:03:08,987Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:08,989Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T17:03:08,990Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:09,189Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T17:02:55.940Z
      epoch=1
  } {}
[INFO ] 2019-08-20T17:03:14,564Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T17:03:14,568Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-170256.193/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T17:03:14,568Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T17:03:14,570Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T17:03:14,640Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:14,645Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:16,918Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:17,668Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T17:03:17,755Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T17:03:17,777Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T17:03:17,777Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T17:03:18,171Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T17:03:18,187Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T17:03:18,189Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320598189) {}
[INFO ] 2019-08-20T17:03:18,199Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:18,386Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320598189) {}
[INFO ] 2019-08-20T17:03:18,453Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T17:03:18,476Z [MockNode-1-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320598189) {}
[INFO ] 2019-08-20T17:03:18,509Z [MockNode-1-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:18,579Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA uploader=app filename=null {}
[INFO ] 2019-08-20T17:03:18,583Z [main] utilities.NotaryLoader.loadService - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-20T17:03:18,588Z [main] notary.SinglePartyNotaryService.<init> - Starting notary in validating mode {}
[INFO ] 2019-08-20T17:03:18,990Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320598189) {}
[INFO ] 2019-08-20T17:03:19,013Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320598189) {}
[INFO ] 2019-08-20T17:03:19,015Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:19,020Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320598189) {}
[INFO ] 2019-08-20T17:03:19,020Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:19,027Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-170256.193/nodes/1/cordapps] {}
[INFO ] 2019-08-20T17:03:19,028Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170256.193/nodes/1/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:03:19,028Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170256.193/nodes/1/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T17:03:19,056Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T17:03:19,066Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T17:03:19,105Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:19,105Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T17:03:19,105Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:19,111Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T17:02:55.940Z
      epoch=1
  } {}
[INFO ] 2019-08-20T17:03:19,757Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T17:03:19,761Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-170256.193/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T17:03:19,762Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T17:03:19,763Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T17:03:19,766Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:19,766Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:19,923Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:19,937Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T17:03:19,940Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T17:03:19,940Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T17:03:19,963Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:19,963Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:20,137Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:20,143Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T17:03:20,143Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320600143) {}
[INFO ] 2019-08-20T17:03:20,146Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:20,157Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320600143) {}
[INFO ] 2019-08-20T17:03:20,166Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T17:03:20,170Z [MockNode-2-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320600143) {}
[INFO ] 2019-08-20T17:03:20,176Z [MockNode-2-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:20,247Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA uploader=app filename=null {}
[INFO ] 2019-08-20T17:03:20,260Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320600143) {}
[INFO ] 2019-08-20T17:03:20,264Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320598189) {}
[INFO ] 2019-08-20T17:03:20,266Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:20,279Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320600143) {}
[INFO ] 2019-08-20T17:03:20,281Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:20,293Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320600143) {}
[INFO ] 2019-08-20T17:03:20,293Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:20,294Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320600143) {}
[INFO ] 2019-08-20T17:03:20,294Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:20,297Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-170256.193/nodes/2/cordapps] {}
[INFO ] 2019-08-20T17:03:20,297Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170256.193/nodes/2/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:03:20,297Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170256.193/nodes/2/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T17:03:20,321Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T17:03:20,331Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T17:03:20,360Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:20,360Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T17:03:20,360Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:20,365Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T17:02:55.940Z
      epoch=1
  } {}
[INFO ] 2019-08-20T17:03:20,870Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T17:03:20,872Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-170256.193/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T17:03:20,872Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T17:03:20,874Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T17:03:20,877Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:20,878Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:20,980Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:20,992Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T17:03:20,994Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T17:03:20,995Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T17:03:21,021Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:21,021Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:21,169Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:21,175Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T17:03:21,175Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320601175) {}
[INFO ] 2019-08-20T17:03:21,178Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:21,186Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320601175) {}
[INFO ] 2019-08-20T17:03:21,195Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T17:03:21,199Z [MockNode-3-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320601175) {}
[INFO ] 2019-08-20T17:03:21,205Z [MockNode-3-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:21,264Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA uploader=app filename=null {}
[INFO ] 2019-08-20T17:03:21,274Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320601175) {}
[INFO ] 2019-08-20T17:03:21,278Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320598189) {}
[INFO ] 2019-08-20T17:03:21,279Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:21,291Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320601175) {}
[INFO ] 2019-08-20T17:03:21,293Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:21,305Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320600143) {}
[INFO ] 2019-08-20T17:03:21,306Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:21,320Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320601175) {}
[INFO ] 2019-08-20T17:03:21,322Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:21,334Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320601175) {}
[INFO ] 2019-08-20T17:03:21,334Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:21,334Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320601175) {}
[INFO ] 2019-08-20T17:03:21,334Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-20T17:03:21,634Z [Mock network] transactions.TransactionBuilder.warnOnce - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4d26f73f-0703-4ad1-aa50-ab8debf471af, invocation_id=dc052afb-801e-412e-9ab2-763823b2aad8, invocation_timestamp=2019-08-20T17:03:21.366Z, origin=Only For Testing, session_id=dc052afb-801e-412e-9ab2-763823b2aad8, session_timestamp=2019-08-20T17:03:21.366Z, thread-id=102}
[WARN ] 2019-08-20T17:03:21,634Z [Mock network] transactions.TransactionBuilder.warnOnce - Reverting back to using hash constraints for contract bootcamp.TokenContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4d26f73f-0703-4ad1-aa50-ab8debf471af, invocation_id=dc052afb-801e-412e-9ab2-763823b2aad8, invocation_timestamp=2019-08-20T17:03:21.366Z, origin=Only For Testing, session_id=dc052afb-801e-412e-9ab2-763823b2aad8, session_timestamp=2019-08-20T17:03:21.366Z, thread-id=102}
[INFO ] 2019-08-20T17:03:23,521Z [Mock network] corda.flow.notariseAndRecord - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4d26f73f-0703-4ad1-aa50-ab8debf471af, invocation_id=dc052afb-801e-412e-9ab2-763823b2aad8, invocation_timestamp=2019-08-20T17:03:21.366Z, origin=Only For Testing, session_id=dc052afb-801e-412e-9ab2-763823b2aad8, session_timestamp=2019-08-20T17:03:21.366Z, thread-id=102, tx_id=5E3B7FDFB568CAB79E249B1976F9DCC6DAD6EC7A28AC846DC6022536BBAAE7DA}
[INFO ] 2019-08-20T17:03:23,521Z [Mock network] corda.flow.notariseAndRecord - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4d26f73f-0703-4ad1-aa50-ab8debf471af, invocation_id=dc052afb-801e-412e-9ab2-763823b2aad8, invocation_timestamp=2019-08-20T17:03:21.366Z, origin=Only For Testing, session_id=dc052afb-801e-412e-9ab2-763823b2aad8, session_timestamp=2019-08-20T17:03:21.366Z, thread-id=102, tx_id=5E3B7FDFB568CAB79E249B1976F9DCC6DAD6EC7A28AC846DC6022536BBAAE7DA}
[INFO ] 2019-08-20T17:03:23,602Z [Mock network] corda.flow.notariseAndRecord - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4d26f73f-0703-4ad1-aa50-ab8debf471af, invocation_id=dc052afb-801e-412e-9ab2-763823b2aad8, invocation_timestamp=2019-08-20T17:03:21.366Z, origin=Only For Testing, session_id=dc052afb-801e-412e-9ab2-763823b2aad8, session_timestamp=2019-08-20T17:03:21.366Z, thread-id=102, tx_id=5E3B7FDFB568CAB79E249B1976F9DCC6DAD6EC7A28AC846DC6022536BBAAE7DA}
[INFO ] 2019-08-20T17:03:23,802Z [Mock network] corda.flow.call - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=58fb673b-5458-40ff-a147-274f12fd1928, invocation_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, invocation_timestamp=2019-08-20T17:03:23.729Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, session_timestamp=2019-08-20T17:03:23.729Z, thread-id=102, tx_id=5E3B7FDFB568CAB79E249B1976F9DCC6DAD6EC7A28AC846DC6022536BBAAE7DA}
[WARN ] 2019-08-20T17:03:23,814Z [Mock network] corda.flow.maybeWireUpProgressTracking - ProgressTracker has not been started {fiber-id=10000002, flow-id=58fb673b-5458-40ff-a147-274f12fd1928, invocation_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, invocation_timestamp=2019-08-20T17:03:23.729Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, session_timestamp=2019-08-20T17:03:23.729Z, thread-id=102, tx_id=5E3B7FDFB568CAB79E249B1976F9DCC6DAD6EC7A28AC846DC6022536BBAAE7DA}
[INFO ] 2019-08-20T17:03:23,853Z [Mock network] corda.flow.call - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=58fb673b-5458-40ff-a147-274f12fd1928, invocation_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, invocation_timestamp=2019-08-20T17:03:23.729Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, session_timestamp=2019-08-20T17:03:23.729Z, thread-id=102, tx_id=5E3B7FDFB568CAB79E249B1976F9DCC6DAD6EC7A28AC846DC6022536BBAAE7DA}
[INFO ] 2019-08-20T17:03:23,882Z [Mock network] corda.flow.call - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4d26f73f-0703-4ad1-aa50-ab8debf471af, invocation_id=dc052afb-801e-412e-9ab2-763823b2aad8, invocation_timestamp=2019-08-20T17:03:21.366Z, origin=Only For Testing, session_id=dc052afb-801e-412e-9ab2-763823b2aad8, session_timestamp=2019-08-20T17:03:21.366Z, thread-id=102, tx_id=5E3B7FDFB568CAB79E249B1976F9DCC6DAD6EC7A28AC846DC6022536BBAAE7DA}
[INFO ] 2019-08-20T17:03:23,882Z [Mock network] corda.flow.call - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4d26f73f-0703-4ad1-aa50-ab8debf471af, invocation_id=dc052afb-801e-412e-9ab2-763823b2aad8, invocation_timestamp=2019-08-20T17:03:21.366Z, origin=Only For Testing, session_id=dc052afb-801e-412e-9ab2-763823b2aad8, session_timestamp=2019-08-20T17:03:21.366Z, thread-id=102, tx_id=5E3B7FDFB568CAB79E249B1976F9DCC6DAD6EC7A28AC846DC6022536BBAAE7DA}
[INFO ] 2019-08-20T17:03:23,917Z [Mock network] corda.flow.run - Flow raised an error... sending it to flow hospital {fiber-id=10000002, flow-id=58fb673b-5458-40ff-a147-274f12fd1928, invocation_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, invocation_timestamp=2019-08-20T17:03:23.729Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, session_timestamp=2019-08-20T17:03:23.729Z, thread-id=102, tx_id=5E3B7FDFB568CAB79E249B1976F9DCC6DAD6EC7A28AC846DC6022536BBAAE7DA}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=2569907300136038312) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T17:03:23,920Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [58fb673b-5458-40ff-a147-274f12fd1928] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Invocation, sessionId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=2569907300136038312)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--8176235547172823901-7790996611771584996)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))]), frozenFiber=D0313E3BABB3F3F8B25A8CFA867EA445D9627F6D03CF37931E513EE949ABCB73), errorState=Clean, numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@40d228cc, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e09dcac], isFlowResumed=true, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=806c4ebe-ccb5-4d4d-9e60-91affafbcd4a) {fiber-id=10000002, flow-id=58fb673b-5458-40ff-a147-274f12fd1928, invocation_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, invocation_timestamp=2019-08-20T17:03:23.729Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, session_timestamp=2019-08-20T17:03:23.729Z, thread-id=102, tx_id=5E3B7FDFB568CAB79E249B1976F9DCC6DAD6EC7A28AC846DC6022536BBAAE7DA}
[INFO ] 2019-08-20T17:03:23,923Z [Mock network] statemachine.StaffedFlowHospital.invoke - Flow [58fb673b-5458-40ff-a147-274f12fd1928] has error [0] {fiber-id=10000002, flow-id=58fb673b-5458-40ff-a147-274f12fd1928, invocation_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, invocation_timestamp=2019-08-20T17:03:23.729Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, session_timestamp=2019-08-20T17:03:23.729Z, thread-id=102, tx_id=5E3B7FDFB568CAB79E249B1976F9DCC6DAD6EC7A28AC846DC6022536BBAAE7DA}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=2569907300136038312) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T17:03:23,924Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [58fb673b-5458-40ff-a147-274f12fd1928] error allowed to propagate {fiber-id=10000002, flow-id=58fb673b-5458-40ff-a147-274f12fd1928, invocation_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, invocation_timestamp=2019-08-20T17:03:23.729Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, session_timestamp=2019-08-20T17:03:23.729Z, thread-id=102, tx_id=5E3B7FDFB568CAB79E249B1976F9DCC6DAD6EC7A28AC846DC6022536BBAAE7DA}
[WARN ] 2019-08-20T17:03:23,946Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [58fb673b-5458-40ff-a147-274f12fd1928] errored, dumping all transitions:

 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.763Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[58fb673b-5458-40ff-a147-274f12fd1928], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Invocation, sessionId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=F606DEFAB820D0EA41954621C41C94E860D0A8EDF6A08BE05FD7A533CAA748B2), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@8ed6b27])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@8ed6b27])
    SignalFlowHasStarted(flowId=[58fb673b-5458-40ff-a147-274f12fd1928])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8176235547172823901), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=2569907300136038312), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--8176235547172823901-7790996611771584996-0-0), senderUUID=806c4ebe-ccb5-4d4d-9e60-91affafbcd4a))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=2569907300136038312): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-8176235547172823901)), errors=[], deduplicationSeed=D--8176235547172823901-7790996611771584996)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@8ed6b27]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.767Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.771Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.792Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))]), maySkipCheckpoint=false, fiber=3E4A8ACF7D69F92BD7D99EA10BF322FBD7CF15797CE48BB87368BFB0EB9DCB89, )
  Actions: 
    PersistCheckpoint(id=[58fb673b-5458-40ff-a147-274f12fd1928], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Invocation, sessionId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=2569907300136038312)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-8176235547172823901)), errors=[], deduplicationSeed=D--8176235547172823901-7790996611771584996)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))]), frozenFiber=3E4A8ACF7D69F92BD7D99EA10BF322FBD7CF15797CE48BB87368BFB0EB9DCB89), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=F606DEFAB820D0EA41954621C41C94E860D0A8EDF6A08BE05FD7A533CAA748B2)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))]), frozenFiber=3E4A8ACF7D69F92BD7D99EA10BF322FBD7CF15797CE48BB87368BFB0EB9DCB89)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.795Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=2569907300136038312).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.816Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.844Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=FCA97A1AEF784A774FAFF3B4F09955C742EDF6B655EB5496BB13F467996CFDF3, )
  Actions: 
    PersistCheckpoint(id=[58fb673b-5458-40ff-a147-274f12fd1928], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Invocation, sessionId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=2569907300136038312)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-8176235547172823901)), errors=[], deduplicationSeed=D--8176235547172823901-7790996611771584996)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=FCA97A1AEF784A774FAFF3B4F09955C742EDF6B655EB5496BB13F467996CFDF3), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    3E4A8ACF7D69F92BD7D99EA10BF322FBD7CF15797CE48BB87368BFB0EB9DCB89
    FCA97A1AEF784A774FAFF3B4F09955C742EDF6B655EB5496BB13F467996CFDF3
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.850Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8176235547172823901), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--8176235547172823901-7790996611771584996-2-0), senderUUID=806c4ebe-ccb5-4d4d-9e60-91affafbcd4a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.853Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.862Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.867Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))]), maySkipCheckpoint=false, fiber=D0313E3BABB3F3F8B25A8CFA867EA445D9627F6D03CF37931E513EE949ABCB73, )
  Actions: 
    PersistCheckpoint(id=[58fb673b-5458-40ff-a147-274f12fd1928], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Invocation, sessionId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=2569907300136038312)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-8176235547172823901)), errors=[], deduplicationSeed=D--8176235547172823901-7790996611771584996)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))]), frozenFiber=D0313E3BABB3F3F8B25A8CFA867EA445D9627F6D03CF37931E513EE949ABCB73), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))])
checkpoint.flowState.frozenFiber.hash: 
    FCA97A1AEF784A774FAFF3B4F09955C742EDF6B655EB5496BB13F467996CFDF3
    D0313E3BABB3F3F8B25A8CFA867EA445D9627F6D03CF37931E513EE949ABCB73
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.867Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.916Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2569907300136038312), payload=net.corda.node.services.statemachine.EndSessionMessage@6949125f), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e09dcac, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=2569907300136038312).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=-8176235547172823901))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e09dcac]


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.917Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=2569907300136038312) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.917Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.925Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=2569907300136038312) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=8012639243914213239, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=2569907300136038312) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.928Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.930Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000002, flow-id=58fb673b-5458-40ff-a147-274f12fd1928, invocation_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, invocation_timestamp=2019-08-20T17:03:23.729Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, session_timestamp=2019-08-20T17:03:23.729Z, thread-id=102, tx_id=5E3B7FDFB568CAB79E249B1976F9DCC6DAD6EC7A28AC846DC6022536BBAAE7DA}
[WARN ] 2019-08-20T17:03:23,947Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [58fb673b-5458-40ff-a147-274f12fd1928] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000002, flow-id=58fb673b-5458-40ff-a147-274f12fd1928, invocation_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, invocation_timestamp=2019-08-20T17:03:23.729Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, session_timestamp=2019-08-20T17:03:23.729Z, thread-id=102, tx_id=5E3B7FDFB568CAB79E249B1976F9DCC6DAD6EC7A28AC846DC6022536BBAAE7DA}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=2569907300136038312) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[WARN ] 2019-08-20T17:03:23,955Z [Mock network] statemachine.ActionExecutorImpl.executePropagateErrors - Propagating error {fiber-id=10000002, flow-id=58fb673b-5458-40ff-a147-274f12fd1928, invocation_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, invocation_timestamp=2019-08-20T17:03:23.729Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, session_timestamp=2019-08-20T17:03:23.729Z, thread-id=102, tx_id=5E3B7FDFB568CAB79E249B1976F9DCC6DAD6EC7A28AC846DC6022536BBAAE7DA}
[WARN ] 2019-08-20T17:03:24,095Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [58fb673b-5458-40ff-a147-274f12fd1928] errored, dumping all transitions:

 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.763Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[58fb673b-5458-40ff-a147-274f12fd1928], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Invocation, sessionId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=F606DEFAB820D0EA41954621C41C94E860D0A8EDF6A08BE05FD7A533CAA748B2), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@8ed6b27])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@8ed6b27])
    SignalFlowHasStarted(flowId=[58fb673b-5458-40ff-a147-274f12fd1928])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8176235547172823901), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=2569907300136038312), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--8176235547172823901-7790996611771584996-0-0), senderUUID=806c4ebe-ccb5-4d4d-9e60-91affafbcd4a))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=2569907300136038312): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-8176235547172823901)), errors=[], deduplicationSeed=D--8176235547172823901-7790996611771584996)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@8ed6b27]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.767Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.771Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.792Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))]), maySkipCheckpoint=false, fiber=3E4A8ACF7D69F92BD7D99EA10BF322FBD7CF15797CE48BB87368BFB0EB9DCB89, )
  Actions: 
    PersistCheckpoint(id=[58fb673b-5458-40ff-a147-274f12fd1928], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Invocation, sessionId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=2569907300136038312)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-8176235547172823901)), errors=[], deduplicationSeed=D--8176235547172823901-7790996611771584996)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))]), frozenFiber=3E4A8ACF7D69F92BD7D99EA10BF322FBD7CF15797CE48BB87368BFB0EB9DCB89), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=F606DEFAB820D0EA41954621C41C94E860D0A8EDF6A08BE05FD7A533CAA748B2)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))]), frozenFiber=3E4A8ACF7D69F92BD7D99EA10BF322FBD7CF15797CE48BB87368BFB0EB9DCB89)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.795Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=2569907300136038312).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.816Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.844Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=FCA97A1AEF784A774FAFF3B4F09955C742EDF6B655EB5496BB13F467996CFDF3, )
  Actions: 
    PersistCheckpoint(id=[58fb673b-5458-40ff-a147-274f12fd1928], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Invocation, sessionId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=2569907300136038312)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-8176235547172823901)), errors=[], deduplicationSeed=D--8176235547172823901-7790996611771584996)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=FCA97A1AEF784A774FAFF3B4F09955C742EDF6B655EB5496BB13F467996CFDF3), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    3E4A8ACF7D69F92BD7D99EA10BF322FBD7CF15797CE48BB87368BFB0EB9DCB89
    FCA97A1AEF784A774FAFF3B4F09955C742EDF6B655EB5496BB13F467996CFDF3
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.850Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8176235547172823901), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--8176235547172823901-7790996611771584996-2-0), senderUUID=806c4ebe-ccb5-4d4d-9e60-91affafbcd4a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.853Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.862Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.867Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))]), maySkipCheckpoint=false, fiber=D0313E3BABB3F3F8B25A8CFA867EA445D9627F6D03CF37931E513EE949ABCB73, )
  Actions: 
    PersistCheckpoint(id=[58fb673b-5458-40ff-a147-274f12fd1928], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Invocation, sessionId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=2569907300136038312)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-8176235547172823901)), errors=[], deduplicationSeed=D--8176235547172823901-7790996611771584996)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))]), frozenFiber=D0313E3BABB3F3F8B25A8CFA867EA445D9627F6D03CF37931E513EE949ABCB73), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))])
checkpoint.flowState.frozenFiber.hash: 
    FCA97A1AEF784A774FAFF3B4F09955C742EDF6B655EB5496BB13F467996CFDF3
    D0313E3BABB3F3F8B25A8CFA867EA445D9627F6D03CF37931E513EE949ABCB73
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.867Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.916Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2569907300136038312), payload=net.corda.node.services.statemachine.EndSessionMessage@6949125f), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e09dcac, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=2569907300136038312).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=-8176235547172823901))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e09dcac]


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.917Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=2569907300136038312) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.917Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.925Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=2569907300136038312) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=8012639243914213239, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=2569907300136038312) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.928Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:23.930Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [58fb673b-5458-40ff-a147-274f12fd1928] ---
  Timestamp: 2019-08-20T17:03:24.047Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=8012639243914213239)], sessions=[Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--8176235547172823901-7790996611771584996)], senderUUID=806c4ebe-ccb5-4d4d-9e60-91affafbcd4a)
    CreateTransaction
    RemoveCheckpoint(id=[58fb673b-5458-40ff-a147-274f12fd1928])
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e09dcac])
    ReleaseSoftLocks(uuid=58fb673b-5458-40ff-a147-274f12fd1928)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e09dcac])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=2569907300136038312)])
    RemoveFlow(flowId=[58fb673b-5458-40ff-a147-274f12fd1928], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=8012639243914213239, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=2569907300136038312) with empty buffer)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Invocation, sessionId=79e83445-c9bb-4fea-9e6d-e36ed9a739be, timestamp: 2019-08-20T17:03:23.729Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=2569907300136038312)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--8176235547172823901-7790996611771584996)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2569907300136038312))]), frozenFiber=D0313E3BABB3F3F8B25A8CFA867EA445D9627F6D03CF37931E513EE949ABCB73), errorState=Errored(errors=[FlowError(errorId=8012639243914213239, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=2569907300136038312) with empty buffer)], propagatedIndex=1, propagating=true), numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@40d228cc, pendingDeduplicationHandlers=[], isFlowResumed=false, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=806c4ebe-ccb5-4d4d-9e60-91affafbcd4a))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.errorState.propagatedIndex: 
    0
    1
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e09dcac]
    []
isRemoved: 
    false
    true
 {fiber-id=10000002, flow-id=58fb673b-5458-40ff-a147-274f12fd1928, invocation_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, invocation_timestamp=2019-08-20T17:03:23.729Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, session_timestamp=2019-08-20T17:03:23.729Z, thread-id=102, tx_id=5E3B7FDFB568CAB79E249B1976F9DCC6DAD6EC7A28AC846DC6022536BBAAE7DA}
[WARN ] 2019-08-20T17:03:24,095Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [58fb673b-5458-40ff-a147-274f12fd1928] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000002, flow-id=58fb673b-5458-40ff-a147-274f12fd1928, invocation_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, invocation_timestamp=2019-08-20T17:03:23.729Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79e83445-c9bb-4fea-9e6d-e36ed9a739be, session_timestamp=2019-08-20T17:03:23.729Z, thread-id=102, tx_id=5E3B7FDFB568CAB79E249B1976F9DCC6DAD6EC7A28AC846DC6022536BBAAE7DA}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=2569907300136038312) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T17:03:24,268Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-170324.123/nodes/0/cordapps] {}
[INFO ] 2019-08-20T17:03:24,268Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170324.123/nodes/0/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:03:24,269Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170324.123/nodes/0/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T17:03:24,294Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T17:03:24,358Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T17:03:24,426Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:24,426Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T17:03:24,427Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:24,433Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T17:03:24.123Z
      epoch=1
  } {}
[INFO ] 2019-08-20T17:03:24,912Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T17:03:24,918Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-170324.123/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T17:03:24,918Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T17:03:24,922Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T17:03:24,925Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:24,925Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:25,026Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:25,037Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T17:03:25,069Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T17:03:25,079Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T17:03:25,079Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T17:03:25,222Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T17:03:25,227Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T17:03:25,227Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320605227) {}
[INFO ] 2019-08-20T17:03:25,229Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:25,248Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320605227) {}
[INFO ] 2019-08-20T17:03:25,261Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T17:03:25,265Z [MockNode-4-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320605227) {}
[INFO ] 2019-08-20T17:03:25,271Z [MockNode-4-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:25,317Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA uploader=app filename=null {}
[INFO ] 2019-08-20T17:03:25,321Z [main] utilities.NotaryLoader.loadService - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-20T17:03:25,322Z [main] notary.SinglePartyNotaryService.<init> - Starting notary in validating mode {}
[INFO ] 2019-08-20T17:03:25,330Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320605227) {}
[INFO ] 2019-08-20T17:03:25,335Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320605227) {}
[INFO ] 2019-08-20T17:03:25,335Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:25,335Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320605227) {}
[INFO ] 2019-08-20T17:03:25,335Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:25,344Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-170324.123/nodes/1/cordapps] {}
[INFO ] 2019-08-20T17:03:25,346Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170324.123/nodes/1/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:03:25,347Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170324.123/nodes/1/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T17:03:25,373Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T17:03:25,514Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T17:03:26,291Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:26,291Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T17:03:26,291Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:26,294Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T17:03:24.123Z
      epoch=1
  } {}
[INFO ] 2019-08-20T17:03:26,825Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T17:03:26,827Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-170324.123/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T17:03:26,827Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T17:03:26,828Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T17:03:26,831Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:26,831Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:26,921Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:26,934Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T17:03:26,936Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T17:03:26,937Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T17:03:26,957Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:26,959Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:27,083Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:27,088Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T17:03:27,089Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320607088) {}
[INFO ] 2019-08-20T17:03:27,091Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:27,098Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320607088) {}
[INFO ] 2019-08-20T17:03:27,107Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T17:03:27,111Z [MockNode-5-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320607088) {}
[INFO ] 2019-08-20T17:03:27,117Z [MockNode-5-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:27,161Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA uploader=app filename=null {}
[INFO ] 2019-08-20T17:03:27,169Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320607088) {}
[INFO ] 2019-08-20T17:03:27,174Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320605227) {}
[INFO ] 2019-08-20T17:03:27,175Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:27,186Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320607088) {}
[INFO ] 2019-08-20T17:03:27,187Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:27,196Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320607088) {}
[INFO ] 2019-08-20T17:03:27,196Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:27,196Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320607088) {}
[INFO ] 2019-08-20T17:03:27,196Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:27,202Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-170324.123/nodes/2/cordapps] {}
[INFO ] 2019-08-20T17:03:27,202Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170324.123/nodes/2/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:03:27,202Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170324.123/nodes/2/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T17:03:27,219Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T17:03:27,226Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T17:03:27,252Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:27,252Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T17:03:27,253Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:27,256Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T17:03:24.123Z
      epoch=1
  } {}
[INFO ] 2019-08-20T17:03:27,720Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T17:03:27,723Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-170324.123/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T17:03:27,723Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T17:03:27,724Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T17:03:27,727Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:27,727Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:27,818Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:27,831Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T17:03:27,833Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T17:03:27,834Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T17:03:27,867Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:27,867Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:27,991Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:27,996Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T17:03:27,996Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320607996) {}
[INFO ] 2019-08-20T17:03:27,998Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:28,005Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320607996) {}
[INFO ] 2019-08-20T17:03:28,049Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T17:03:28,052Z [MockNode-6-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320607996) {}
[INFO ] 2019-08-20T17:03:28,058Z [MockNode-6-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:28,104Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA uploader=app filename=null {}
[INFO ] 2019-08-20T17:03:28,131Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320607996) {}
[INFO ] 2019-08-20T17:03:28,134Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320605227) {}
[INFO ] 2019-08-20T17:03:28,136Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:28,144Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320607996) {}
[INFO ] 2019-08-20T17:03:28,147Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:28,157Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320607088) {}
[INFO ] 2019-08-20T17:03:28,159Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:28,169Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320607996) {}
[INFO ] 2019-08-20T17:03:28,171Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:28,179Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320607996) {}
[INFO ] 2019-08-20T17:03:28,179Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:28,179Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320607996) {}
[INFO ] 2019-08-20T17:03:28,179Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:29,359Z [Mock network] corda.flow.notariseAndRecord - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=07c778c2-f1d5-468d-b512-df9cc3bfe884, invocation_id=6b15b162-e350-4b22-b786-995bf4b8ee83, invocation_timestamp=2019-08-20T17:03:28.180Z, origin=Only For Testing, session_id=6b15b162-e350-4b22-b786-995bf4b8ee83, session_timestamp=2019-08-20T17:03:28.180Z, thread-id=195, tx_id=04DE5D49CCE3BF8E53BEAF4ABC775EEF6D1BDA9126C619F24E6464A956BBDB86}
[INFO ] 2019-08-20T17:03:29,359Z [Mock network] corda.flow.notariseAndRecord - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=07c778c2-f1d5-468d-b512-df9cc3bfe884, invocation_id=6b15b162-e350-4b22-b786-995bf4b8ee83, invocation_timestamp=2019-08-20T17:03:28.180Z, origin=Only For Testing, session_id=6b15b162-e350-4b22-b786-995bf4b8ee83, session_timestamp=2019-08-20T17:03:28.180Z, thread-id=195, tx_id=04DE5D49CCE3BF8E53BEAF4ABC775EEF6D1BDA9126C619F24E6464A956BBDB86}
[INFO ] 2019-08-20T17:03:29,378Z [Mock network] corda.flow.notariseAndRecord - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=07c778c2-f1d5-468d-b512-df9cc3bfe884, invocation_id=6b15b162-e350-4b22-b786-995bf4b8ee83, invocation_timestamp=2019-08-20T17:03:28.180Z, origin=Only For Testing, session_id=6b15b162-e350-4b22-b786-995bf4b8ee83, session_timestamp=2019-08-20T17:03:28.180Z, thread-id=195, tx_id=04DE5D49CCE3BF8E53BEAF4ABC775EEF6D1BDA9126C619F24E6464A956BBDB86}
[INFO ] 2019-08-20T17:03:29,424Z [Mock network] corda.flow.call - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=9864dcba-d290-49fd-9d97-b8e22aa9f879, invocation_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, invocation_timestamp=2019-08-20T17:03:29.404Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, session_timestamp=2019-08-20T17:03:29.404Z, thread-id=195, tx_id=04DE5D49CCE3BF8E53BEAF4ABC775EEF6D1BDA9126C619F24E6464A956BBDB86}
[WARN ] 2019-08-20T17:03:29,424Z [Mock network] corda.flow.maybeWireUpProgressTracking - ProgressTracker has not been started {fiber-id=10000004, flow-id=9864dcba-d290-49fd-9d97-b8e22aa9f879, invocation_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, invocation_timestamp=2019-08-20T17:03:29.404Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, session_timestamp=2019-08-20T17:03:29.404Z, thread-id=195, tx_id=04DE5D49CCE3BF8E53BEAF4ABC775EEF6D1BDA9126C619F24E6464A956BBDB86}
[INFO ] 2019-08-20T17:03:29,434Z [Mock network] corda.flow.call - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=9864dcba-d290-49fd-9d97-b8e22aa9f879, invocation_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, invocation_timestamp=2019-08-20T17:03:29.404Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, session_timestamp=2019-08-20T17:03:29.404Z, thread-id=195, tx_id=04DE5D49CCE3BF8E53BEAF4ABC775EEF6D1BDA9126C619F24E6464A956BBDB86}
[INFO ] 2019-08-20T17:03:29,450Z [Mock network] corda.flow.call - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=07c778c2-f1d5-468d-b512-df9cc3bfe884, invocation_id=6b15b162-e350-4b22-b786-995bf4b8ee83, invocation_timestamp=2019-08-20T17:03:28.180Z, origin=Only For Testing, session_id=6b15b162-e350-4b22-b786-995bf4b8ee83, session_timestamp=2019-08-20T17:03:28.180Z, thread-id=195, tx_id=04DE5D49CCE3BF8E53BEAF4ABC775EEF6D1BDA9126C619F24E6464A956BBDB86}
[INFO ] 2019-08-20T17:03:29,450Z [Mock network] corda.flow.call - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=07c778c2-f1d5-468d-b512-df9cc3bfe884, invocation_id=6b15b162-e350-4b22-b786-995bf4b8ee83, invocation_timestamp=2019-08-20T17:03:28.180Z, origin=Only For Testing, session_id=6b15b162-e350-4b22-b786-995bf4b8ee83, session_timestamp=2019-08-20T17:03:28.180Z, thread-id=195, tx_id=04DE5D49CCE3BF8E53BEAF4ABC775EEF6D1BDA9126C619F24E6464A956BBDB86}
[INFO ] 2019-08-20T17:03:29,457Z [Mock network] corda.flow.run - Flow raised an error... sending it to flow hospital {fiber-id=10000004, flow-id=9864dcba-d290-49fd-9d97-b8e22aa9f879, invocation_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, invocation_timestamp=2019-08-20T17:03:29.404Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, session_timestamp=2019-08-20T17:03:29.404Z, thread-id=195, tx_id=04DE5D49CCE3BF8E53BEAF4ABC775EEF6D1BDA9126C619F24E6464A956BBDB86}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-3360779287890239231) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T17:03:29,458Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Invocation, sessionId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-3360779287890239231)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D-7516547383477575387--5938084092871186150)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))]), frozenFiber=E6C426FFAE5501D58E97B88BCB2F8EBE898B4CD36D05DC38FBFA8598BE723CCF), errorState=Clean, numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@7d1e38d3, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@542a2a5e], isFlowResumed=true, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=11334014-c192-4073-a20c-c3b3c9cd9d8f) {fiber-id=10000004, flow-id=9864dcba-d290-49fd-9d97-b8e22aa9f879, invocation_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, invocation_timestamp=2019-08-20T17:03:29.404Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, session_timestamp=2019-08-20T17:03:29.404Z, thread-id=195, tx_id=04DE5D49CCE3BF8E53BEAF4ABC775EEF6D1BDA9126C619F24E6464A956BBDB86}
[INFO ] 2019-08-20T17:03:29,458Z [Mock network] statemachine.StaffedFlowHospital.invoke - Flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] has error [0] {fiber-id=10000004, flow-id=9864dcba-d290-49fd-9d97-b8e22aa9f879, invocation_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, invocation_timestamp=2019-08-20T17:03:29.404Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, session_timestamp=2019-08-20T17:03:29.404Z, thread-id=195, tx_id=04DE5D49CCE3BF8E53BEAF4ABC775EEF6D1BDA9126C619F24E6464A956BBDB86}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-3360779287890239231) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T17:03:29,458Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] error allowed to propagate {fiber-id=10000004, flow-id=9864dcba-d290-49fd-9d97-b8e22aa9f879, invocation_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, invocation_timestamp=2019-08-20T17:03:29.404Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, session_timestamp=2019-08-20T17:03:29.404Z, thread-id=195, tx_id=04DE5D49CCE3BF8E53BEAF4ABC775EEF6D1BDA9126C619F24E6464A956BBDB86}
[WARN ] 2019-08-20T17:03:29,465Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] errored, dumping all transitions:

 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.416Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[9864dcba-d290-49fd-9d97-b8e22aa9f879], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Invocation, sessionId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=8DE11A26ED5ECAF6B54E669D1B5BC8FE3B58DED541D6465B6F7DD941228E865F), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4519a3b4])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4519a3b4])
    SignalFlowHasStarted(flowId=[9864dcba-d290-49fd-9d97-b8e22aa9f879])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7516547383477575387), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-3360779287890239231), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7516547383477575387--5938084092871186150-0-0), senderUUID=11334014-c192-4073-a20c-c3b3c9cd9d8f))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-3360779287890239231): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=7516547383477575387)), errors=[], deduplicationSeed=D-7516547383477575387--5938084092871186150)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4519a3b4]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.416Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.416Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.420Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))]), maySkipCheckpoint=false, fiber=DB3C6E73178A052A03FE82C0241114EE4664150A5BC4EA7BD7224F5BBAD50BB5, )
  Actions: 
    PersistCheckpoint(id=[9864dcba-d290-49fd-9d97-b8e22aa9f879], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Invocation, sessionId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-3360779287890239231)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=7516547383477575387)), errors=[], deduplicationSeed=D-7516547383477575387--5938084092871186150)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))]), frozenFiber=DB3C6E73178A052A03FE82C0241114EE4664150A5BC4EA7BD7224F5BBAD50BB5), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=8DE11A26ED5ECAF6B54E669D1B5BC8FE3B58DED541D6465B6F7DD941228E865F)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))]), frozenFiber=DB3C6E73178A052A03FE82C0241114EE4664150A5BC4EA7BD7224F5BBAD50BB5)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.421Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-3360779287890239231).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.424Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.432Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=AFBB4AD2E5795839F8EB7D75F99393D1F0950F17681C6302DF2BD7FD7270D743, )
  Actions: 
    PersistCheckpoint(id=[9864dcba-d290-49fd-9d97-b8e22aa9f879], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Invocation, sessionId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-3360779287890239231)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=7516547383477575387)), errors=[], deduplicationSeed=D-7516547383477575387--5938084092871186150)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=AFBB4AD2E5795839F8EB7D75F99393D1F0950F17681C6302DF2BD7FD7270D743), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    DB3C6E73178A052A03FE82C0241114EE4664150A5BC4EA7BD7224F5BBAD50BB5
    AFBB4AD2E5795839F8EB7D75F99393D1F0950F17681C6302DF2BD7FD7270D743
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.434Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7516547383477575387), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7516547383477575387--5938084092871186150-2-0), senderUUID=11334014-c192-4073-a20c-c3b3c9cd9d8f))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.434Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.439Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.443Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))]), maySkipCheckpoint=false, fiber=E6C426FFAE5501D58E97B88BCB2F8EBE898B4CD36D05DC38FBFA8598BE723CCF, )
  Actions: 
    PersistCheckpoint(id=[9864dcba-d290-49fd-9d97-b8e22aa9f879], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Invocation, sessionId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-3360779287890239231)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=7516547383477575387)), errors=[], deduplicationSeed=D-7516547383477575387--5938084092871186150)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))]), frozenFiber=E6C426FFAE5501D58E97B88BCB2F8EBE898B4CD36D05DC38FBFA8598BE723CCF), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))])
checkpoint.flowState.frozenFiber.hash: 
    AFBB4AD2E5795839F8EB7D75F99393D1F0950F17681C6302DF2BD7FD7270D743
    E6C426FFAE5501D58E97B88BCB2F8EBE898B4CD36D05DC38FBFA8598BE723CCF
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.443Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.457Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3360779287890239231), payload=net.corda.node.services.statemachine.EndSessionMessage@6949125f), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@542a2a5e, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-3360779287890239231).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=7516547383477575387))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@542a2a5e]


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.457Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-3360779287890239231) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.457Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.458Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-3360779287890239231) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-5364308864216847845, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-3360779287890239231) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.459Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.459Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000004, flow-id=9864dcba-d290-49fd-9d97-b8e22aa9f879, invocation_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, invocation_timestamp=2019-08-20T17:03:29.404Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, session_timestamp=2019-08-20T17:03:29.404Z, thread-id=195, tx_id=04DE5D49CCE3BF8E53BEAF4ABC775EEF6D1BDA9126C619F24E6464A956BBDB86}
[WARN ] 2019-08-20T17:03:29,465Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000004, flow-id=9864dcba-d290-49fd-9d97-b8e22aa9f879, invocation_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, invocation_timestamp=2019-08-20T17:03:29.404Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, session_timestamp=2019-08-20T17:03:29.404Z, thread-id=195, tx_id=04DE5D49CCE3BF8E53BEAF4ABC775EEF6D1BDA9126C619F24E6464A956BBDB86}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-3360779287890239231) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[WARN ] 2019-08-20T17:03:29,466Z [Mock network] statemachine.ActionExecutorImpl.executePropagateErrors - Propagating error {fiber-id=10000004, flow-id=9864dcba-d290-49fd-9d97-b8e22aa9f879, invocation_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, invocation_timestamp=2019-08-20T17:03:29.404Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, session_timestamp=2019-08-20T17:03:29.404Z, thread-id=195, tx_id=04DE5D49CCE3BF8E53BEAF4ABC775EEF6D1BDA9126C619F24E6464A956BBDB86}
[WARN ] 2019-08-20T17:03:29,474Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] errored, dumping all transitions:

 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.416Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[9864dcba-d290-49fd-9d97-b8e22aa9f879], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Invocation, sessionId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=8DE11A26ED5ECAF6B54E669D1B5BC8FE3B58DED541D6465B6F7DD941228E865F), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4519a3b4])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4519a3b4])
    SignalFlowHasStarted(flowId=[9864dcba-d290-49fd-9d97-b8e22aa9f879])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7516547383477575387), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-3360779287890239231), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7516547383477575387--5938084092871186150-0-0), senderUUID=11334014-c192-4073-a20c-c3b3c9cd9d8f))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-3360779287890239231): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=7516547383477575387)), errors=[], deduplicationSeed=D-7516547383477575387--5938084092871186150)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4519a3b4]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.416Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.416Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.420Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))]), maySkipCheckpoint=false, fiber=DB3C6E73178A052A03FE82C0241114EE4664150A5BC4EA7BD7224F5BBAD50BB5, )
  Actions: 
    PersistCheckpoint(id=[9864dcba-d290-49fd-9d97-b8e22aa9f879], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Invocation, sessionId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-3360779287890239231)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=7516547383477575387)), errors=[], deduplicationSeed=D-7516547383477575387--5938084092871186150)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))]), frozenFiber=DB3C6E73178A052A03FE82C0241114EE4664150A5BC4EA7BD7224F5BBAD50BB5), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=8DE11A26ED5ECAF6B54E669D1B5BC8FE3B58DED541D6465B6F7DD941228E865F)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))]), frozenFiber=DB3C6E73178A052A03FE82C0241114EE4664150A5BC4EA7BD7224F5BBAD50BB5)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.421Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-3360779287890239231).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.424Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.432Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=AFBB4AD2E5795839F8EB7D75F99393D1F0950F17681C6302DF2BD7FD7270D743, )
  Actions: 
    PersistCheckpoint(id=[9864dcba-d290-49fd-9d97-b8e22aa9f879], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Invocation, sessionId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-3360779287890239231)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=7516547383477575387)), errors=[], deduplicationSeed=D-7516547383477575387--5938084092871186150)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=AFBB4AD2E5795839F8EB7D75F99393D1F0950F17681C6302DF2BD7FD7270D743), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    DB3C6E73178A052A03FE82C0241114EE4664150A5BC4EA7BD7224F5BBAD50BB5
    AFBB4AD2E5795839F8EB7D75F99393D1F0950F17681C6302DF2BD7FD7270D743
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.434Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7516547383477575387), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7516547383477575387--5938084092871186150-2-0), senderUUID=11334014-c192-4073-a20c-c3b3c9cd9d8f))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.434Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.439Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.443Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))]), maySkipCheckpoint=false, fiber=E6C426FFAE5501D58E97B88BCB2F8EBE898B4CD36D05DC38FBFA8598BE723CCF, )
  Actions: 
    PersistCheckpoint(id=[9864dcba-d290-49fd-9d97-b8e22aa9f879], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Invocation, sessionId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-3360779287890239231)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=7516547383477575387)), errors=[], deduplicationSeed=D-7516547383477575387--5938084092871186150)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))]), frozenFiber=E6C426FFAE5501D58E97B88BCB2F8EBE898B4CD36D05DC38FBFA8598BE723CCF), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))])
checkpoint.flowState.frozenFiber.hash: 
    AFBB4AD2E5795839F8EB7D75F99393D1F0950F17681C6302DF2BD7FD7270D743
    E6C426FFAE5501D58E97B88BCB2F8EBE898B4CD36D05DC38FBFA8598BE723CCF
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.443Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.457Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3360779287890239231), payload=net.corda.node.services.statemachine.EndSessionMessage@6949125f), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@542a2a5e, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-3360779287890239231).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=7516547383477575387))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@542a2a5e]


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.457Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-3360779287890239231) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.457Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.458Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-3360779287890239231) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-5364308864216847845, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-3360779287890239231) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.459Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.459Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] ---
  Timestamp: 2019-08-20T17:03:29.471Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-5364308864216847845)], sessions=[Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D-7516547383477575387--5938084092871186150)], senderUUID=11334014-c192-4073-a20c-c3b3c9cd9d8f)
    CreateTransaction
    RemoveCheckpoint(id=[9864dcba-d290-49fd-9d97-b8e22aa9f879])
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@542a2a5e])
    ReleaseSoftLocks(uuid=9864dcba-d290-49fd-9d97-b8e22aa9f879)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@542a2a5e])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-3360779287890239231)])
    RemoveFlow(flowId=[9864dcba-d290-49fd-9d97-b8e22aa9f879], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-5364308864216847845, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-3360779287890239231) with empty buffer)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Invocation, sessionId=5ab80c86-5f2a-47ad-90aa-bc328e405a42, timestamp: 2019-08-20T17:03:29.404Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-3360779287890239231)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D-7516547383477575387--5938084092871186150)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3360779287890239231))]), frozenFiber=E6C426FFAE5501D58E97B88BCB2F8EBE898B4CD36D05DC38FBFA8598BE723CCF), errorState=Errored(errors=[FlowError(errorId=-5364308864216847845, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-3360779287890239231) with empty buffer)], propagatedIndex=1, propagating=true), numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@7d1e38d3, pendingDeduplicationHandlers=[], isFlowResumed=false, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=11334014-c192-4073-a20c-c3b3c9cd9d8f))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.errorState.propagatedIndex: 
    0
    1
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@542a2a5e]
    []
isRemoved: 
    false
    true
 {fiber-id=10000004, flow-id=9864dcba-d290-49fd-9d97-b8e22aa9f879, invocation_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, invocation_timestamp=2019-08-20T17:03:29.404Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, session_timestamp=2019-08-20T17:03:29.404Z, thread-id=195, tx_id=04DE5D49CCE3BF8E53BEAF4ABC775EEF6D1BDA9126C619F24E6464A956BBDB86}
[WARN ] 2019-08-20T17:03:29,474Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [9864dcba-d290-49fd-9d97-b8e22aa9f879] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000004, flow-id=9864dcba-d290-49fd-9d97-b8e22aa9f879, invocation_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, invocation_timestamp=2019-08-20T17:03:29.404Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ab80c86-5f2a-47ad-90aa-bc328e405a42, session_timestamp=2019-08-20T17:03:29.404Z, thread-id=195, tx_id=04DE5D49CCE3BF8E53BEAF4ABC775EEF6D1BDA9126C619F24E6464A956BBDB86}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-3360779287890239231) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T17:03:29,754Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-170329.484/nodes/0/cordapps] {}
[INFO ] 2019-08-20T17:03:29,755Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170329.484/nodes/0/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:03:29,755Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170329.484/nodes/0/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T17:03:29,769Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T17:03:29,776Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T17:03:29,780Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:29,780Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T17:03:29,780Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:29,786Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T17:03:29.484Z
      epoch=1
  } {}
[INFO ] 2019-08-20T17:03:30,265Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T17:03:30,269Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-170329.484/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T17:03:30,269Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T17:03:30,271Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T17:03:30,273Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:30,273Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:30,357Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:30,366Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T17:03:30,408Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T17:03:30,416Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T17:03:30,416Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T17:03:30,867Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T17:03:30,875Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T17:03:30,876Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320610875) {}
[INFO ] 2019-08-20T17:03:30,879Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:30,898Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320610875) {}
[INFO ] 2019-08-20T17:03:30,910Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T17:03:30,916Z [MockNode-7-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320610875) {}
[INFO ] 2019-08-20T17:03:30,922Z [MockNode-7-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:30,962Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA uploader=app filename=null {}
[INFO ] 2019-08-20T17:03:30,975Z [main] utilities.NotaryLoader.loadService - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-20T17:03:30,975Z [main] notary.SinglePartyNotaryService.<init> - Starting notary in validating mode {}
[INFO ] 2019-08-20T17:03:30,985Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320610875) {}
[INFO ] 2019-08-20T17:03:30,990Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320610875) {}
[INFO ] 2019-08-20T17:03:30,990Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:30,990Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320610875) {}
[INFO ] 2019-08-20T17:03:30,990Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:30,993Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-170329.484/nodes/1/cordapps] {}
[INFO ] 2019-08-20T17:03:30,994Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170329.484/nodes/1/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:03:30,994Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170329.484/nodes/1/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T17:03:31,023Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T17:03:31,056Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T17:03:31,140Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:31,140Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T17:03:31,140Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:31,144Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T17:03:29.484Z
      epoch=1
  } {}
[INFO ] 2019-08-20T17:03:31,590Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T17:03:31,592Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-170329.484/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T17:03:31,592Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T17:03:31,593Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T17:03:31,595Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:31,595Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:31,676Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:31,684Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T17:03:31,686Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T17:03:31,687Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T17:03:31,708Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:31,709Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:31,840Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:31,845Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T17:03:31,846Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320611845) {}
[INFO ] 2019-08-20T17:03:31,848Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:31,855Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320611845) {}
[INFO ] 2019-08-20T17:03:31,862Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T17:03:31,865Z [MockNode-8-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320611845) {}
[INFO ] 2019-08-20T17:03:31,870Z [MockNode-8-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:31,909Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA uploader=app filename=null {}
[INFO ] 2019-08-20T17:03:31,916Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320611845) {}
[INFO ] 2019-08-20T17:03:31,918Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320610875) {}
[INFO ] 2019-08-20T17:03:31,919Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:31,928Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320611845) {}
[INFO ] 2019-08-20T17:03:31,929Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:31,938Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320611845) {}
[INFO ] 2019-08-20T17:03:31,938Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:31,939Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320611845) {}
[INFO ] 2019-08-20T17:03:31,939Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:31,942Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-170329.484/nodes/2/cordapps] {}
[INFO ] 2019-08-20T17:03:31,943Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170329.484/nodes/2/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:03:31,943Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170329.484/nodes/2/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T17:03:31,967Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T17:03:31,974Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T17:03:32,000Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:32,000Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T17:03:32,001Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:32,005Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T17:03:29.484Z
      epoch=1
  } {}
[INFO ] 2019-08-20T17:03:32,415Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T17:03:32,417Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-170329.484/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T17:03:32,417Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T17:03:32,422Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T17:03:32,425Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:32,425Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:32,527Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:32,537Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T17:03:32,539Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T17:03:32,540Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T17:03:32,564Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:32,565Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:32,713Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:32,717Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T17:03:32,717Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320612717) {}
[INFO ] 2019-08-20T17:03:32,719Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:32,726Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320612717) {}
[INFO ] 2019-08-20T17:03:32,734Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T17:03:32,738Z [MockNode-9-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320612717) {}
[INFO ] 2019-08-20T17:03:32,744Z [MockNode-9-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:32,795Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA uploader=app filename=null {}
[INFO ] 2019-08-20T17:03:32,801Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320612717) {}
[INFO ] 2019-08-20T17:03:32,805Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320610875) {}
[INFO ] 2019-08-20T17:03:32,808Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:32,817Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320612717) {}
[INFO ] 2019-08-20T17:03:32,818Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:32,829Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320611845) {}
[INFO ] 2019-08-20T17:03:32,831Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:32,843Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320612717) {}
[INFO ] 2019-08-20T17:03:32,844Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:32,854Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320612717) {}
[INFO ] 2019-08-20T17:03:32,856Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:32,856Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320612717) {}
[INFO ] 2019-08-20T17:03:32,857Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:33,826Z [Mock network] corda.flow.notariseAndRecord - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=f32fc35b-9076-438e-869b-e9a5acb0ba4e, invocation_id=d4aa116c-805c-4830-bc60-bc92d7667ca7, invocation_timestamp=2019-08-20T17:03:32.859Z, origin=Only For Testing, session_id=d4aa116c-805c-4830-bc60-bc92d7667ca7, session_timestamp=2019-08-20T17:03:32.859Z, thread-id=284, tx_id=9BCEA22A72F283BBA4A18AF72C30140A2AF46E3E388720E300D27E6398FFAB4D}
[INFO ] 2019-08-20T17:03:33,826Z [Mock network] corda.flow.notariseAndRecord - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=f32fc35b-9076-438e-869b-e9a5acb0ba4e, invocation_id=d4aa116c-805c-4830-bc60-bc92d7667ca7, invocation_timestamp=2019-08-20T17:03:32.859Z, origin=Only For Testing, session_id=d4aa116c-805c-4830-bc60-bc92d7667ca7, session_timestamp=2019-08-20T17:03:32.859Z, thread-id=284, tx_id=9BCEA22A72F283BBA4A18AF72C30140A2AF46E3E388720E300D27E6398FFAB4D}
[INFO ] 2019-08-20T17:03:33,844Z [Mock network] corda.flow.notariseAndRecord - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=f32fc35b-9076-438e-869b-e9a5acb0ba4e, invocation_id=d4aa116c-805c-4830-bc60-bc92d7667ca7, invocation_timestamp=2019-08-20T17:03:32.859Z, origin=Only For Testing, session_id=d4aa116c-805c-4830-bc60-bc92d7667ca7, session_timestamp=2019-08-20T17:03:32.859Z, thread-id=284, tx_id=9BCEA22A72F283BBA4A18AF72C30140A2AF46E3E388720E300D27E6398FFAB4D}
[INFO ] 2019-08-20T17:03:33,886Z [Mock network] corda.flow.call - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b, invocation_id=c3439180-1eea-4825-8d78-8b3ef00baf72, invocation_timestamp=2019-08-20T17:03:33.868Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c3439180-1eea-4825-8d78-8b3ef00baf72, session_timestamp=2019-08-20T17:03:33.868Z, thread-id=284, tx_id=9BCEA22A72F283BBA4A18AF72C30140A2AF46E3E388720E300D27E6398FFAB4D}
[WARN ] 2019-08-20T17:03:33,887Z [Mock network] corda.flow.maybeWireUpProgressTracking - ProgressTracker has not been started {fiber-id=10000006, flow-id=1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b, invocation_id=c3439180-1eea-4825-8d78-8b3ef00baf72, invocation_timestamp=2019-08-20T17:03:33.868Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c3439180-1eea-4825-8d78-8b3ef00baf72, session_timestamp=2019-08-20T17:03:33.868Z, thread-id=284, tx_id=9BCEA22A72F283BBA4A18AF72C30140A2AF46E3E388720E300D27E6398FFAB4D}
[INFO ] 2019-08-20T17:03:33,898Z [Mock network] corda.flow.call - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b, invocation_id=c3439180-1eea-4825-8d78-8b3ef00baf72, invocation_timestamp=2019-08-20T17:03:33.868Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c3439180-1eea-4825-8d78-8b3ef00baf72, session_timestamp=2019-08-20T17:03:33.868Z, thread-id=284, tx_id=9BCEA22A72F283BBA4A18AF72C30140A2AF46E3E388720E300D27E6398FFAB4D}
[INFO ] 2019-08-20T17:03:33,913Z [Mock network] corda.flow.call - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=f32fc35b-9076-438e-869b-e9a5acb0ba4e, invocation_id=d4aa116c-805c-4830-bc60-bc92d7667ca7, invocation_timestamp=2019-08-20T17:03:32.859Z, origin=Only For Testing, session_id=d4aa116c-805c-4830-bc60-bc92d7667ca7, session_timestamp=2019-08-20T17:03:32.859Z, thread-id=284, tx_id=9BCEA22A72F283BBA4A18AF72C30140A2AF46E3E388720E300D27E6398FFAB4D}
[INFO ] 2019-08-20T17:03:33,913Z [Mock network] corda.flow.call - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=f32fc35b-9076-438e-869b-e9a5acb0ba4e, invocation_id=d4aa116c-805c-4830-bc60-bc92d7667ca7, invocation_timestamp=2019-08-20T17:03:32.859Z, origin=Only For Testing, session_id=d4aa116c-805c-4830-bc60-bc92d7667ca7, session_timestamp=2019-08-20T17:03:32.859Z, thread-id=284, tx_id=9BCEA22A72F283BBA4A18AF72C30140A2AF46E3E388720E300D27E6398FFAB4D}
[INFO ] 2019-08-20T17:03:33,934Z [Mock network] corda.flow.run - Flow raised an error... sending it to flow hospital {fiber-id=10000006, flow-id=1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b, invocation_id=c3439180-1eea-4825-8d78-8b3ef00baf72, invocation_timestamp=2019-08-20T17:03:33.868Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c3439180-1eea-4825-8d78-8b3ef00baf72, session_timestamp=2019-08-20T17:03:33.868Z, thread-id=284, tx_id=9BCEA22A72F283BBA4A18AF72C30140A2AF46E3E388720E300D27E6398FFAB4D}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4743814307558029838) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T17:03:33,935Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Invocation, sessionId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-4743814307558029838)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--7500687454872222848--8844643665967167788)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))]), frozenFiber=175E115290BB9DA1DE578094EB6989884A829EB825CDD6C4E426462FB1A02B20), errorState=Clean, numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@715b4a87, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3518247], isFlowResumed=true, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=46d170d9-cbab-4ab1-8cac-c50acfdbd29e) {fiber-id=10000006, flow-id=1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b, invocation_id=c3439180-1eea-4825-8d78-8b3ef00baf72, invocation_timestamp=2019-08-20T17:03:33.868Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c3439180-1eea-4825-8d78-8b3ef00baf72, session_timestamp=2019-08-20T17:03:33.868Z, thread-id=284, tx_id=9BCEA22A72F283BBA4A18AF72C30140A2AF46E3E388720E300D27E6398FFAB4D}
[INFO ] 2019-08-20T17:03:33,935Z [Mock network] statemachine.StaffedFlowHospital.invoke - Flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] has error [0] {fiber-id=10000006, flow-id=1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b, invocation_id=c3439180-1eea-4825-8d78-8b3ef00baf72, invocation_timestamp=2019-08-20T17:03:33.868Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c3439180-1eea-4825-8d78-8b3ef00baf72, session_timestamp=2019-08-20T17:03:33.868Z, thread-id=284, tx_id=9BCEA22A72F283BBA4A18AF72C30140A2AF46E3E388720E300D27E6398FFAB4D}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4743814307558029838) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T17:03:33,935Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] error allowed to propagate {fiber-id=10000006, flow-id=1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b, invocation_id=c3439180-1eea-4825-8d78-8b3ef00baf72, invocation_timestamp=2019-08-20T17:03:33.868Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c3439180-1eea-4825-8d78-8b3ef00baf72, session_timestamp=2019-08-20T17:03:33.868Z, thread-id=284, tx_id=9BCEA22A72F283BBA4A18AF72C30140A2AF46E3E388720E300D27E6398FFAB4D}
[WARN ] 2019-08-20T17:03:33,940Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] errored, dumping all transitions:

 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.878Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Invocation, sessionId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=1930D9C7491F641030F0DEA3DF01DEC585DBC831718A03E994BC43AE36EE0363), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1be15b59])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1be15b59])
    SignalFlowHasStarted(flowId=[1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7500687454872222848), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-4743814307558029838), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7500687454872222848--8844643665967167788-0-0), senderUUID=46d170d9-cbab-4ab1-8cac-c50acfdbd29e))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-4743814307558029838): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-7500687454872222848)), errors=[], deduplicationSeed=D--7500687454872222848--8844643665967167788)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1be15b59]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.878Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.878Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.883Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))]), maySkipCheckpoint=false, fiber=F637961D2CFC95845673F51F310FFA450A9277CA23AB1248646A7B609DDDE597, )
  Actions: 
    PersistCheckpoint(id=[1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Invocation, sessionId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-4743814307558029838)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-7500687454872222848)), errors=[], deduplicationSeed=D--7500687454872222848--8844643665967167788)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))]), frozenFiber=F637961D2CFC95845673F51F310FFA450A9277CA23AB1248646A7B609DDDE597), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=1930D9C7491F641030F0DEA3DF01DEC585DBC831718A03E994BC43AE36EE0363)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))]), frozenFiber=F637961D2CFC95845673F51F310FFA450A9277CA23AB1248646A7B609DDDE597)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.884Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-4743814307558029838).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.887Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.896Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=365823FA2C55374EA20D614F6FBC5250C5C9449719891DA267DCAD9155DB71D7, )
  Actions: 
    PersistCheckpoint(id=[1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Invocation, sessionId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-4743814307558029838)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-7500687454872222848)), errors=[], deduplicationSeed=D--7500687454872222848--8844643665967167788)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=365823FA2C55374EA20D614F6FBC5250C5C9449719891DA267DCAD9155DB71D7), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    F637961D2CFC95845673F51F310FFA450A9277CA23AB1248646A7B609DDDE597
    365823FA2C55374EA20D614F6FBC5250C5C9449719891DA267DCAD9155DB71D7
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.898Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7500687454872222848), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7500687454872222848--8844643665967167788-2-0), senderUUID=46d170d9-cbab-4ab1-8cac-c50acfdbd29e))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.898Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.902Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.906Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))]), maySkipCheckpoint=false, fiber=175E115290BB9DA1DE578094EB6989884A829EB825CDD6C4E426462FB1A02B20, )
  Actions: 
    PersistCheckpoint(id=[1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Invocation, sessionId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-4743814307558029838)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-7500687454872222848)), errors=[], deduplicationSeed=D--7500687454872222848--8844643665967167788)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))]), frozenFiber=175E115290BB9DA1DE578094EB6989884A829EB825CDD6C4E426462FB1A02B20), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))])
checkpoint.flowState.frozenFiber.hash: 
    365823FA2C55374EA20D614F6FBC5250C5C9449719891DA267DCAD9155DB71D7
    175E115290BB9DA1DE578094EB6989884A829EB825CDD6C4E426462FB1A02B20
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.907Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.934Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4743814307558029838), payload=net.corda.node.services.statemachine.EndSessionMessage@6949125f), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3518247, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-4743814307558029838).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=-7500687454872222848))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3518247]


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.934Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4743814307558029838) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.934Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.935Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4743814307558029838) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-140725184784937179, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4743814307558029838) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.935Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.935Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000006, flow-id=1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b, invocation_id=c3439180-1eea-4825-8d78-8b3ef00baf72, invocation_timestamp=2019-08-20T17:03:33.868Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c3439180-1eea-4825-8d78-8b3ef00baf72, session_timestamp=2019-08-20T17:03:33.868Z, thread-id=284, tx_id=9BCEA22A72F283BBA4A18AF72C30140A2AF46E3E388720E300D27E6398FFAB4D}
[WARN ] 2019-08-20T17:03:33,940Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000006, flow-id=1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b, invocation_id=c3439180-1eea-4825-8d78-8b3ef00baf72, invocation_timestamp=2019-08-20T17:03:33.868Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c3439180-1eea-4825-8d78-8b3ef00baf72, session_timestamp=2019-08-20T17:03:33.868Z, thread-id=284, tx_id=9BCEA22A72F283BBA4A18AF72C30140A2AF46E3E388720E300D27E6398FFAB4D}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4743814307558029838) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[WARN ] 2019-08-20T17:03:33,940Z [Mock network] statemachine.ActionExecutorImpl.executePropagateErrors - Propagating error {fiber-id=10000006, flow-id=1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b, invocation_id=c3439180-1eea-4825-8d78-8b3ef00baf72, invocation_timestamp=2019-08-20T17:03:33.868Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c3439180-1eea-4825-8d78-8b3ef00baf72, session_timestamp=2019-08-20T17:03:33.868Z, thread-id=284, tx_id=9BCEA22A72F283BBA4A18AF72C30140A2AF46E3E388720E300D27E6398FFAB4D}
[WARN ] 2019-08-20T17:03:33,949Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] errored, dumping all transitions:

 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.878Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Invocation, sessionId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=1930D9C7491F641030F0DEA3DF01DEC585DBC831718A03E994BC43AE36EE0363), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1be15b59])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1be15b59])
    SignalFlowHasStarted(flowId=[1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7500687454872222848), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-4743814307558029838), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7500687454872222848--8844643665967167788-0-0), senderUUID=46d170d9-cbab-4ab1-8cac-c50acfdbd29e))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-4743814307558029838): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-7500687454872222848)), errors=[], deduplicationSeed=D--7500687454872222848--8844643665967167788)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1be15b59]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.878Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.878Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.883Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))]), maySkipCheckpoint=false, fiber=F637961D2CFC95845673F51F310FFA450A9277CA23AB1248646A7B609DDDE597, )
  Actions: 
    PersistCheckpoint(id=[1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Invocation, sessionId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-4743814307558029838)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-7500687454872222848)), errors=[], deduplicationSeed=D--7500687454872222848--8844643665967167788)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))]), frozenFiber=F637961D2CFC95845673F51F310FFA450A9277CA23AB1248646A7B609DDDE597), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=1930D9C7491F641030F0DEA3DF01DEC585DBC831718A03E994BC43AE36EE0363)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))]), frozenFiber=F637961D2CFC95845673F51F310FFA450A9277CA23AB1248646A7B609DDDE597)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.884Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-4743814307558029838).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.887Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.896Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=365823FA2C55374EA20D614F6FBC5250C5C9449719891DA267DCAD9155DB71D7, )
  Actions: 
    PersistCheckpoint(id=[1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Invocation, sessionId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-4743814307558029838)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-7500687454872222848)), errors=[], deduplicationSeed=D--7500687454872222848--8844643665967167788)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=365823FA2C55374EA20D614F6FBC5250C5C9449719891DA267DCAD9155DB71D7), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    F637961D2CFC95845673F51F310FFA450A9277CA23AB1248646A7B609DDDE597
    365823FA2C55374EA20D614F6FBC5250C5C9449719891DA267DCAD9155DB71D7
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.898Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7500687454872222848), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7500687454872222848--8844643665967167788-2-0), senderUUID=46d170d9-cbab-4ab1-8cac-c50acfdbd29e))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.898Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.902Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.906Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))]), maySkipCheckpoint=false, fiber=175E115290BB9DA1DE578094EB6989884A829EB825CDD6C4E426462FB1A02B20, )
  Actions: 
    PersistCheckpoint(id=[1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Invocation, sessionId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-4743814307558029838)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-7500687454872222848)), errors=[], deduplicationSeed=D--7500687454872222848--8844643665967167788)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))]), frozenFiber=175E115290BB9DA1DE578094EB6989884A829EB825CDD6C4E426462FB1A02B20), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))])
checkpoint.flowState.frozenFiber.hash: 
    365823FA2C55374EA20D614F6FBC5250C5C9449719891DA267DCAD9155DB71D7
    175E115290BB9DA1DE578094EB6989884A829EB825CDD6C4E426462FB1A02B20
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.907Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.934Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4743814307558029838), payload=net.corda.node.services.statemachine.EndSessionMessage@6949125f), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3518247, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-4743814307558029838).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=-7500687454872222848))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3518247]


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.934Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4743814307558029838) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.934Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.935Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4743814307558029838) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-140725184784937179, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4743814307558029838) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.935Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.935Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] ---
  Timestamp: 2019-08-20T17:03:33.946Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-140725184784937179)], sessions=[Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--7500687454872222848--8844643665967167788)], senderUUID=46d170d9-cbab-4ab1-8cac-c50acfdbd29e)
    CreateTransaction
    RemoveCheckpoint(id=[1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b])
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3518247])
    ReleaseSoftLocks(uuid=1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3518247])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-4743814307558029838)])
    RemoveFlow(flowId=[1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-140725184784937179, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4743814307558029838) with empty buffer)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Invocation, sessionId=c3439180-1eea-4825-8d78-8b3ef00baf72, timestamp: 2019-08-20T17:03:33.868Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-4743814307558029838)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--7500687454872222848--8844643665967167788)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-4743814307558029838))]), frozenFiber=175E115290BB9DA1DE578094EB6989884A829EB825CDD6C4E426462FB1A02B20), errorState=Errored(errors=[FlowError(errorId=-140725184784937179, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4743814307558029838) with empty buffer)], propagatedIndex=1, propagating=true), numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@715b4a87, pendingDeduplicationHandlers=[], isFlowResumed=false, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=46d170d9-cbab-4ab1-8cac-c50acfdbd29e))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.errorState.propagatedIndex: 
    0
    1
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3518247]
    []
isRemoved: 
    false
    true
 {fiber-id=10000006, flow-id=1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b, invocation_id=c3439180-1eea-4825-8d78-8b3ef00baf72, invocation_timestamp=2019-08-20T17:03:33.868Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c3439180-1eea-4825-8d78-8b3ef00baf72, session_timestamp=2019-08-20T17:03:33.868Z, thread-id=284, tx_id=9BCEA22A72F283BBA4A18AF72C30140A2AF46E3E388720E300D27E6398FFAB4D}
[WARN ] 2019-08-20T17:03:33,949Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000006, flow-id=1bea3eb0-d5f3-42aa-b847-502e2a8a9e2b, invocation_id=c3439180-1eea-4825-8d78-8b3ef00baf72, invocation_timestamp=2019-08-20T17:03:33.868Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c3439180-1eea-4825-8d78-8b3ef00baf72, session_timestamp=2019-08-20T17:03:33.868Z, thread-id=284, tx_id=9BCEA22A72F283BBA4A18AF72C30140A2AF46E3E388720E300D27E6398FFAB4D}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-4743814307558029838) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T17:03:34,016Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-170333.956/nodes/0/cordapps] {}
[INFO ] 2019-08-20T17:03:34,016Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170333.956/nodes/0/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:03:34,016Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170333.956/nodes/0/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T17:03:34,041Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T17:03:34,047Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T17:03:34,051Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:34,051Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T17:03:34,051Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:34,057Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T17:03:33.956Z
      epoch=1
  } {}
[INFO ] 2019-08-20T17:03:34,472Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T17:03:34,475Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-170333.956/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T17:03:34,475Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T17:03:34,477Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T17:03:34,480Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:34,480Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:34,555Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:34,565Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T17:03:34,591Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T17:03:34,599Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T17:03:34,599Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T17:03:34,710Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T17:03:34,716Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T17:03:34,716Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320614716) {}
[INFO ] 2019-08-20T17:03:34,718Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:34,735Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320614716) {}
[INFO ] 2019-08-20T17:03:34,744Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T17:03:34,748Z [MockNode-10-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320614716) {}
[INFO ] 2019-08-20T17:03:34,752Z [MockNode-10-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:34,793Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA uploader=app filename=null {}
[INFO ] 2019-08-20T17:03:34,795Z [main] utilities.NotaryLoader.loadService - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-20T17:03:34,795Z [main] notary.SinglePartyNotaryService.<init> - Starting notary in validating mode {}
[INFO ] 2019-08-20T17:03:34,801Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320614716) {}
[INFO ] 2019-08-20T17:03:34,805Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320614716) {}
[INFO ] 2019-08-20T17:03:34,805Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:34,805Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320614716) {}
[INFO ] 2019-08-20T17:03:34,805Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:34,808Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-170333.956/nodes/1/cordapps] {}
[INFO ] 2019-08-20T17:03:34,808Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170333.956/nodes/1/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:03:34,808Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170333.956/nodes/1/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T17:03:34,832Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T17:03:34,838Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T17:03:34,860Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:34,861Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T17:03:34,861Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:34,865Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T17:03:33.956Z
      epoch=1
  } {}
[INFO ] 2019-08-20T17:03:35,268Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T17:03:35,271Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-170333.956/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T17:03:35,271Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T17:03:35,275Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T17:03:35,276Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:35,277Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:35,360Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:35,372Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T17:03:35,374Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T17:03:35,375Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T17:03:35,391Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:35,391Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:35,506Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:35,511Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T17:03:35,512Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320615511) {}
[INFO ] 2019-08-20T17:03:35,516Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:35,523Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320615511) {}
[INFO ] 2019-08-20T17:03:35,529Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T17:03:35,533Z [MockNode-11-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320615511) {}
[INFO ] 2019-08-20T17:03:35,536Z [MockNode-11-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:35,576Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA uploader=app filename=null {}
[INFO ] 2019-08-20T17:03:35,583Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320615511) {}
[INFO ] 2019-08-20T17:03:35,587Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320614716) {}
[INFO ] 2019-08-20T17:03:35,588Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:35,598Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320615511) {}
[INFO ] 2019-08-20T17:03:35,599Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:35,608Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320615511) {}
[INFO ] 2019-08-20T17:03:35,608Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:35,608Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320615511) {}
[INFO ] 2019-08-20T17:03:35,608Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:35,611Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-170333.956/nodes/2/cordapps] {}
[INFO ] 2019-08-20T17:03:35,611Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170333.956/nodes/2/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:03:35,611Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170333.956/nodes/2/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T17:03:35,634Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T17:03:35,640Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T17:03:35,661Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:35,661Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T17:03:35,661Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:35,666Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T17:03:33.956Z
      epoch=1
  } {}
[INFO ] 2019-08-20T17:03:36,028Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T17:03:36,030Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-170333.956/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T17:03:36,030Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T17:03:36,042Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T17:03:36,044Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:36,045Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:36,144Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:36,153Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T17:03:36,155Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T17:03:36,155Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T17:03:36,174Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:36,175Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:36,316Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:36,322Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T17:03:36,323Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320616322) {}
[INFO ] 2019-08-20T17:03:36,327Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:36,336Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320616322) {}
[INFO ] 2019-08-20T17:03:36,342Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T17:03:36,346Z [MockNode-12-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320616322) {}
[INFO ] 2019-08-20T17:03:36,350Z [MockNode-12-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:36,391Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA uploader=app filename=null {}
[INFO ] 2019-08-20T17:03:36,397Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320616322) {}
[INFO ] 2019-08-20T17:03:36,402Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320614716) {}
[INFO ] 2019-08-20T17:03:36,403Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:36,411Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320616322) {}
[INFO ] 2019-08-20T17:03:36,412Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:36,420Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320615511) {}
[INFO ] 2019-08-20T17:03:36,422Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:36,430Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320616322) {}
[INFO ] 2019-08-20T17:03:36,431Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:36,443Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320616322) {}
[INFO ] 2019-08-20T17:03:36,443Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:36,443Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320616322) {}
[INFO ] 2019-08-20T17:03:36,443Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:37,437Z [Mock network] corda.flow.notariseAndRecord - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=311ae845-3b70-41fb-8bea-f6ab75ea5880, invocation_id=ceef2426-12e9-4d48-8602-854766214c86, invocation_timestamp=2019-08-20T17:03:36.444Z, origin=Only For Testing, session_id=ceef2426-12e9-4d48-8602-854766214c86, session_timestamp=2019-08-20T17:03:36.444Z, thread-id=373, tx_id=60212E14980185E7873F89A672284111F4D90E5314F36F8DD9F886F69622F82F}
[INFO ] 2019-08-20T17:03:37,437Z [Mock network] corda.flow.notariseAndRecord - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=311ae845-3b70-41fb-8bea-f6ab75ea5880, invocation_id=ceef2426-12e9-4d48-8602-854766214c86, invocation_timestamp=2019-08-20T17:03:36.444Z, origin=Only For Testing, session_id=ceef2426-12e9-4d48-8602-854766214c86, session_timestamp=2019-08-20T17:03:36.444Z, thread-id=373, tx_id=60212E14980185E7873F89A672284111F4D90E5314F36F8DD9F886F69622F82F}
[INFO ] 2019-08-20T17:03:37,455Z [Mock network] corda.flow.notariseAndRecord - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=311ae845-3b70-41fb-8bea-f6ab75ea5880, invocation_id=ceef2426-12e9-4d48-8602-854766214c86, invocation_timestamp=2019-08-20T17:03:36.444Z, origin=Only For Testing, session_id=ceef2426-12e9-4d48-8602-854766214c86, session_timestamp=2019-08-20T17:03:36.444Z, thread-id=373, tx_id=60212E14980185E7873F89A672284111F4D90E5314F36F8DD9F886F69622F82F}
[INFO ] 2019-08-20T17:03:37,497Z [Mock network] corda.flow.call - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=8133495d-1934-4a7f-872e-8f45148ab666, invocation_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, invocation_timestamp=2019-08-20T17:03:37.480Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, session_timestamp=2019-08-20T17:03:37.480Z, thread-id=373, tx_id=60212E14980185E7873F89A672284111F4D90E5314F36F8DD9F886F69622F82F}
[WARN ] 2019-08-20T17:03:37,497Z [Mock network] corda.flow.maybeWireUpProgressTracking - ProgressTracker has not been started {fiber-id=10000008, flow-id=8133495d-1934-4a7f-872e-8f45148ab666, invocation_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, invocation_timestamp=2019-08-20T17:03:37.480Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, session_timestamp=2019-08-20T17:03:37.480Z, thread-id=373, tx_id=60212E14980185E7873F89A672284111F4D90E5314F36F8DD9F886F69622F82F}
[INFO ] 2019-08-20T17:03:37,508Z [Mock network] corda.flow.call - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=8133495d-1934-4a7f-872e-8f45148ab666, invocation_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, invocation_timestamp=2019-08-20T17:03:37.480Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, session_timestamp=2019-08-20T17:03:37.480Z, thread-id=373, tx_id=60212E14980185E7873F89A672284111F4D90E5314F36F8DD9F886F69622F82F}
[INFO ] 2019-08-20T17:03:37,522Z [Mock network] corda.flow.call - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=311ae845-3b70-41fb-8bea-f6ab75ea5880, invocation_id=ceef2426-12e9-4d48-8602-854766214c86, invocation_timestamp=2019-08-20T17:03:36.444Z, origin=Only For Testing, session_id=ceef2426-12e9-4d48-8602-854766214c86, session_timestamp=2019-08-20T17:03:36.444Z, thread-id=373, tx_id=60212E14980185E7873F89A672284111F4D90E5314F36F8DD9F886F69622F82F}
[INFO ] 2019-08-20T17:03:37,522Z [Mock network] corda.flow.call - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=311ae845-3b70-41fb-8bea-f6ab75ea5880, invocation_id=ceef2426-12e9-4d48-8602-854766214c86, invocation_timestamp=2019-08-20T17:03:36.444Z, origin=Only For Testing, session_id=ceef2426-12e9-4d48-8602-854766214c86, session_timestamp=2019-08-20T17:03:36.444Z, thread-id=373, tx_id=60212E14980185E7873F89A672284111F4D90E5314F36F8DD9F886F69622F82F}
[INFO ] 2019-08-20T17:03:37,528Z [Mock network] corda.flow.run - Flow raised an error... sending it to flow hospital {fiber-id=10000008, flow-id=8133495d-1934-4a7f-872e-8f45148ab666, invocation_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, invocation_timestamp=2019-08-20T17:03:37.480Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, session_timestamp=2019-08-20T17:03:37.480Z, thread-id=373, tx_id=60212E14980185E7873F89A672284111F4D90E5314F36F8DD9F886F69622F82F}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1257617847515186024) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T17:03:37,529Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [8133495d-1934-4a7f-872e-8f45148ab666] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Invocation, sessionId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1257617847515186024)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D-7583283104693585432-7448750802158126196)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))]), frozenFiber=14F92C5D345B225C3D99BF0B8DB2FBC40F5B16CDF0E2F7D46A0ABE5B96FD6C09), errorState=Clean, numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@2f703d22, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ee77041], isFlowResumed=true, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=3cee3980-a3e7-4031-9335-4a9887b9ad90) {fiber-id=10000008, flow-id=8133495d-1934-4a7f-872e-8f45148ab666, invocation_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, invocation_timestamp=2019-08-20T17:03:37.480Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, session_timestamp=2019-08-20T17:03:37.480Z, thread-id=373, tx_id=60212E14980185E7873F89A672284111F4D90E5314F36F8DD9F886F69622F82F}
[INFO ] 2019-08-20T17:03:37,529Z [Mock network] statemachine.StaffedFlowHospital.invoke - Flow [8133495d-1934-4a7f-872e-8f45148ab666] has error [0] {fiber-id=10000008, flow-id=8133495d-1934-4a7f-872e-8f45148ab666, invocation_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, invocation_timestamp=2019-08-20T17:03:37.480Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, session_timestamp=2019-08-20T17:03:37.480Z, thread-id=373, tx_id=60212E14980185E7873F89A672284111F4D90E5314F36F8DD9F886F69622F82F}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1257617847515186024) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T17:03:37,529Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [8133495d-1934-4a7f-872e-8f45148ab666] error allowed to propagate {fiber-id=10000008, flow-id=8133495d-1934-4a7f-872e-8f45148ab666, invocation_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, invocation_timestamp=2019-08-20T17:03:37.480Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, session_timestamp=2019-08-20T17:03:37.480Z, thread-id=373, tx_id=60212E14980185E7873F89A672284111F4D90E5314F36F8DD9F886F69622F82F}
[WARN ] 2019-08-20T17:03:37,536Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [8133495d-1934-4a7f-872e-8f45148ab666] errored, dumping all transitions:

 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.490Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[8133495d-1934-4a7f-872e-8f45148ab666], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Invocation, sessionId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=1A167591D54E9ED065E9FCA432EA60A6000D034289B51A4F814517429B6FF958), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@13dfe782])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@13dfe782])
    SignalFlowHasStarted(flowId=[8133495d-1934-4a7f-872e-8f45148ab666])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7583283104693585432), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=1257617847515186024), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7583283104693585432-7448750802158126196-0-0), senderUUID=3cee3980-a3e7-4031-9335-4a9887b9ad90))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=1257617847515186024): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=7583283104693585432)), errors=[], deduplicationSeed=D-7583283104693585432-7448750802158126196)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@13dfe782]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.490Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.490Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.494Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))]), maySkipCheckpoint=false, fiber=7C3C3EB94F37CF4694A3F87EB3F71A94BBFB6460C66AB2DD7F81888036A0146D, )
  Actions: 
    PersistCheckpoint(id=[8133495d-1934-4a7f-872e-8f45148ab666], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Invocation, sessionId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1257617847515186024)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=7583283104693585432)), errors=[], deduplicationSeed=D-7583283104693585432-7448750802158126196)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))]), frozenFiber=7C3C3EB94F37CF4694A3F87EB3F71A94BBFB6460C66AB2DD7F81888036A0146D), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=1A167591D54E9ED065E9FCA432EA60A6000D034289B51A4F814517429B6FF958)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))]), frozenFiber=7C3C3EB94F37CF4694A3F87EB3F71A94BBFB6460C66AB2DD7F81888036A0146D)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.494Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=1257617847515186024).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.497Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.505Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=0E7EFAD53643E25EE9BC305B7D4B925D0F161C466920E1560B2019FEB9AF0B62, )
  Actions: 
    PersistCheckpoint(id=[8133495d-1934-4a7f-872e-8f45148ab666], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Invocation, sessionId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1257617847515186024)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=7583283104693585432)), errors=[], deduplicationSeed=D-7583283104693585432-7448750802158126196)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=0E7EFAD53643E25EE9BC305B7D4B925D0F161C466920E1560B2019FEB9AF0B62), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    7C3C3EB94F37CF4694A3F87EB3F71A94BBFB6460C66AB2DD7F81888036A0146D
    0E7EFAD53643E25EE9BC305B7D4B925D0F161C466920E1560B2019FEB9AF0B62
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.507Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7583283104693585432), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7583283104693585432-7448750802158126196-2-0), senderUUID=3cee3980-a3e7-4031-9335-4a9887b9ad90))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.508Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.511Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.515Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))]), maySkipCheckpoint=false, fiber=14F92C5D345B225C3D99BF0B8DB2FBC40F5B16CDF0E2F7D46A0ABE5B96FD6C09, )
  Actions: 
    PersistCheckpoint(id=[8133495d-1934-4a7f-872e-8f45148ab666], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Invocation, sessionId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1257617847515186024)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=7583283104693585432)), errors=[], deduplicationSeed=D-7583283104693585432-7448750802158126196)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))]), frozenFiber=14F92C5D345B225C3D99BF0B8DB2FBC40F5B16CDF0E2F7D46A0ABE5B96FD6C09), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))])
checkpoint.flowState.frozenFiber.hash: 
    0E7EFAD53643E25EE9BC305B7D4B925D0F161C466920E1560B2019FEB9AF0B62
    14F92C5D345B225C3D99BF0B8DB2FBC40F5B16CDF0E2F7D46A0ABE5B96FD6C09
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.515Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.528Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1257617847515186024), payload=net.corda.node.services.statemachine.EndSessionMessage@6949125f), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ee77041, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=1257617847515186024).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=7583283104693585432))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ee77041]


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.528Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1257617847515186024) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.528Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.529Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1257617847515186024) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-3214120602918048686, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1257617847515186024) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.529Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.530Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000008, flow-id=8133495d-1934-4a7f-872e-8f45148ab666, invocation_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, invocation_timestamp=2019-08-20T17:03:37.480Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, session_timestamp=2019-08-20T17:03:37.480Z, thread-id=373, tx_id=60212E14980185E7873F89A672284111F4D90E5314F36F8DD9F886F69622F82F}
[WARN ] 2019-08-20T17:03:37,536Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [8133495d-1934-4a7f-872e-8f45148ab666] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000008, flow-id=8133495d-1934-4a7f-872e-8f45148ab666, invocation_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, invocation_timestamp=2019-08-20T17:03:37.480Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, session_timestamp=2019-08-20T17:03:37.480Z, thread-id=373, tx_id=60212E14980185E7873F89A672284111F4D90E5314F36F8DD9F886F69622F82F}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1257617847515186024) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[WARN ] 2019-08-20T17:03:37,536Z [Mock network] statemachine.ActionExecutorImpl.executePropagateErrors - Propagating error {fiber-id=10000008, flow-id=8133495d-1934-4a7f-872e-8f45148ab666, invocation_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, invocation_timestamp=2019-08-20T17:03:37.480Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, session_timestamp=2019-08-20T17:03:37.480Z, thread-id=373, tx_id=60212E14980185E7873F89A672284111F4D90E5314F36F8DD9F886F69622F82F}
[WARN ] 2019-08-20T17:03:37,545Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [8133495d-1934-4a7f-872e-8f45148ab666] errored, dumping all transitions:

 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.490Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[8133495d-1934-4a7f-872e-8f45148ab666], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Invocation, sessionId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=1A167591D54E9ED065E9FCA432EA60A6000D034289B51A4F814517429B6FF958), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@13dfe782])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@13dfe782])
    SignalFlowHasStarted(flowId=[8133495d-1934-4a7f-872e-8f45148ab666])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7583283104693585432), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=1257617847515186024), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7583283104693585432-7448750802158126196-0-0), senderUUID=3cee3980-a3e7-4031-9335-4a9887b9ad90))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=1257617847515186024): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=7583283104693585432)), errors=[], deduplicationSeed=D-7583283104693585432-7448750802158126196)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@13dfe782]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.490Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.490Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.494Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))]), maySkipCheckpoint=false, fiber=7C3C3EB94F37CF4694A3F87EB3F71A94BBFB6460C66AB2DD7F81888036A0146D, )
  Actions: 
    PersistCheckpoint(id=[8133495d-1934-4a7f-872e-8f45148ab666], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Invocation, sessionId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1257617847515186024)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=7583283104693585432)), errors=[], deduplicationSeed=D-7583283104693585432-7448750802158126196)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))]), frozenFiber=7C3C3EB94F37CF4694A3F87EB3F71A94BBFB6460C66AB2DD7F81888036A0146D), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=1A167591D54E9ED065E9FCA432EA60A6000D034289B51A4F814517429B6FF958)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))]), frozenFiber=7C3C3EB94F37CF4694A3F87EB3F71A94BBFB6460C66AB2DD7F81888036A0146D)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.494Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=1257617847515186024).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.497Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.505Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=0E7EFAD53643E25EE9BC305B7D4B925D0F161C466920E1560B2019FEB9AF0B62, )
  Actions: 
    PersistCheckpoint(id=[8133495d-1934-4a7f-872e-8f45148ab666], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Invocation, sessionId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1257617847515186024)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=7583283104693585432)), errors=[], deduplicationSeed=D-7583283104693585432-7448750802158126196)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=0E7EFAD53643E25EE9BC305B7D4B925D0F161C466920E1560B2019FEB9AF0B62), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    7C3C3EB94F37CF4694A3F87EB3F71A94BBFB6460C66AB2DD7F81888036A0146D
    0E7EFAD53643E25EE9BC305B7D4B925D0F161C466920E1560B2019FEB9AF0B62
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.507Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7583283104693585432), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7583283104693585432-7448750802158126196-2-0), senderUUID=3cee3980-a3e7-4031-9335-4a9887b9ad90))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.508Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.511Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.515Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))]), maySkipCheckpoint=false, fiber=14F92C5D345B225C3D99BF0B8DB2FBC40F5B16CDF0E2F7D46A0ABE5B96FD6C09, )
  Actions: 
    PersistCheckpoint(id=[8133495d-1934-4a7f-872e-8f45148ab666], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Invocation, sessionId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1257617847515186024)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=7583283104693585432)), errors=[], deduplicationSeed=D-7583283104693585432-7448750802158126196)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))]), frozenFiber=14F92C5D345B225C3D99BF0B8DB2FBC40F5B16CDF0E2F7D46A0ABE5B96FD6C09), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))])
checkpoint.flowState.frozenFiber.hash: 
    0E7EFAD53643E25EE9BC305B7D4B925D0F161C466920E1560B2019FEB9AF0B62
    14F92C5D345B225C3D99BF0B8DB2FBC40F5B16CDF0E2F7D46A0ABE5B96FD6C09
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.515Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.528Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1257617847515186024), payload=net.corda.node.services.statemachine.EndSessionMessage@6949125f), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ee77041, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=1257617847515186024).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=7583283104693585432))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ee77041]


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.528Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1257617847515186024) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.528Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.529Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1257617847515186024) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-3214120602918048686, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1257617847515186024) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.529Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.530Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [8133495d-1934-4a7f-872e-8f45148ab666] ---
  Timestamp: 2019-08-20T17:03:37.542Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-3214120602918048686)], sessions=[Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D-7583283104693585432-7448750802158126196)], senderUUID=3cee3980-a3e7-4031-9335-4a9887b9ad90)
    CreateTransaction
    RemoveCheckpoint(id=[8133495d-1934-4a7f-872e-8f45148ab666])
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ee77041])
    ReleaseSoftLocks(uuid=8133495d-1934-4a7f-872e-8f45148ab666)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ee77041])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=1257617847515186024)])
    RemoveFlow(flowId=[8133495d-1934-4a7f-872e-8f45148ab666], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-3214120602918048686, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1257617847515186024) with empty buffer)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Invocation, sessionId=0bfe2681-c2d9-4315-9c97-8573de86ced7, timestamp: 2019-08-20T17:03:37.480Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1257617847515186024)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D-7583283104693585432-7448750802158126196)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1257617847515186024))]), frozenFiber=14F92C5D345B225C3D99BF0B8DB2FBC40F5B16CDF0E2F7D46A0ABE5B96FD6C09), errorState=Errored(errors=[FlowError(errorId=-3214120602918048686, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1257617847515186024) with empty buffer)], propagatedIndex=1, propagating=true), numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@2f703d22, pendingDeduplicationHandlers=[], isFlowResumed=false, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=3cee3980-a3e7-4031-9335-4a9887b9ad90))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.errorState.propagatedIndex: 
    0
    1
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ee77041]
    []
isRemoved: 
    false
    true
 {fiber-id=10000008, flow-id=8133495d-1934-4a7f-872e-8f45148ab666, invocation_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, invocation_timestamp=2019-08-20T17:03:37.480Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, session_timestamp=2019-08-20T17:03:37.480Z, thread-id=373, tx_id=60212E14980185E7873F89A672284111F4D90E5314F36F8DD9F886F69622F82F}
[WARN ] 2019-08-20T17:03:37,545Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [8133495d-1934-4a7f-872e-8f45148ab666] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000008, flow-id=8133495d-1934-4a7f-872e-8f45148ab666, invocation_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, invocation_timestamp=2019-08-20T17:03:37.480Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0bfe2681-c2d9-4315-9c97-8573de86ced7, session_timestamp=2019-08-20T17:03:37.480Z, thread-id=373, tx_id=60212E14980185E7873F89A672284111F4D90E5314F36F8DD9F886F69622F82F}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=1257617847515186024) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T17:03:37,628Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-170337.553/nodes/0/cordapps] {}
[INFO ] 2019-08-20T17:03:37,629Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170337.553/nodes/0/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:03:37,629Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170337.553/nodes/0/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T17:03:37,663Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T17:03:37,669Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T17:03:37,673Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:37,673Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T17:03:37,673Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:37,679Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T17:03:37.553Z
      epoch=1
  } {}
[INFO ] 2019-08-20T17:03:38,066Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T17:03:38,068Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-170337.553/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T17:03:38,068Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T17:03:38,069Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T17:03:38,072Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:38,072Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:38,142Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:38,151Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T17:03:38,181Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T17:03:38,189Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T17:03:38,190Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T17:03:38,306Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-20T17:03:38,311Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T17:03:38,312Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320618312) {}
[INFO ] 2019-08-20T17:03:38,315Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:38,331Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320618312) {}
[INFO ] 2019-08-20T17:03:38,343Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T17:03:38,348Z [MockNode-13-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320618312) {}
[INFO ] 2019-08-20T17:03:38,352Z [MockNode-13-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:38,393Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA uploader=app filename=null {}
[INFO ] 2019-08-20T17:03:38,395Z [main] utilities.NotaryLoader.loadService - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-20T17:03:38,395Z [main] notary.SinglePartyNotaryService.<init> - Starting notary in validating mode {}
[INFO ] 2019-08-20T17:03:38,402Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320618312) {}
[INFO ] 2019-08-20T17:03:38,405Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320618312) {}
[INFO ] 2019-08-20T17:03:38,405Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:38,405Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320618312) {}
[INFO ] 2019-08-20T17:03:38,407Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:38,410Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-170337.553/nodes/1/cordapps] {}
[INFO ] 2019-08-20T17:03:38,411Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170337.553/nodes/1/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:03:38,412Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170337.553/nodes/1/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T17:03:38,434Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T17:03:38,439Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T17:03:38,491Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:38,491Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T17:03:38,491Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:38,493Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T17:03:37.553Z
      epoch=1
  } {}
[INFO ] 2019-08-20T17:03:39,144Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T17:03:39,146Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-170337.553/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T17:03:39,146Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T17:03:39,148Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T17:03:39,150Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:39,150Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:39,220Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:39,229Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T17:03:39,231Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T17:03:39,231Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T17:03:39,247Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:39,247Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:39,343Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:39,349Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T17:03:39,349Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320619349) {}
[INFO ] 2019-08-20T17:03:39,354Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:39,362Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320619349) {}
[INFO ] 2019-08-20T17:03:39,370Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T17:03:39,373Z [MockNode-14-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320619349) {}
[INFO ] 2019-08-20T17:03:39,377Z [MockNode-14-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:39,417Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA uploader=app filename=null {}
[INFO ] 2019-08-20T17:03:39,425Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320619349) {}
[INFO ] 2019-08-20T17:03:39,429Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320618312) {}
[INFO ] 2019-08-20T17:03:39,431Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:39,442Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320619349) {}
[INFO ] 2019-08-20T17:03:39,444Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:39,454Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320619349) {}
[INFO ] 2019-08-20T17:03:39,454Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:39,454Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320619349) {}
[INFO ] 2019-08-20T17:03:39,454Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:39,457Z [main] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20190820-170337.553/nodes/2/cordapps] {}
[INFO ] 2019-08-20T17:03:39,457Z [main] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170337.553/nodes/2/cordapps/bootcamp-cordapp.jar, rootPackageName=null) {}
[INFO ] 2019-08-20T17:03:39,457Z [main] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/Users/asadikhlas/Desktop/Asad/bootcamp-cordapp/build/mock-network/20190820-170337.553/nodes/2/cordapps/bootcamp-cordapp.jar {}
[INFO ] 2019-08-20T17:03:39,475Z [main] cordapp.JarScanningCordappLoader.findNotaryService - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-20T17:03:39,480Z [main] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-08-20T17:03:39,502Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TokenIssueFlowInitiator to initiate bootcamp.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:39,503Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered bootcamp.TwoPartyFlow to initiate bootcamp.TwoPartyResponder (version 1) {}
[INFO ] 2019-08-20T17:03:39,503Z [main] internal.NodeFlowManager.registerInitiatedFlow - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-20T17:03:39,506Z [main] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-20T17:03:37.553Z
      epoch=1
  } {}
[INFO ] 2019-08-20T17:03:39,876Z [main] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-08-20T17:03:39,878Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190820-170337.553/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-20T17:03:39,878Z [main] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-20T17:03:39,880Z [main] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-20T17:03:39,881Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:39,882Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:39,970Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-20T17:03:39,980Z [main] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-20T17:03:39,982Z [main] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-08-20T17:03:39,983Z [main] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-20T17:03:40,000Z [main] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:40,000Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:40,111Z [main] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-20T17:03:40,115Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-20T17:03:40,115Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320620115) {}
[INFO ] 2019-08-20T17:03:40,117Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:40,127Z [main] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320620115) {}
[INFO ] 2019-08-20T17:03:40,135Z [main] network.NetworkMapUpdater.start - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-20T17:03:40,138Z [MockNode-15-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320620115) {}
[INFO ] 2019-08-20T17:03:40,142Z [MockNode-15-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:40,183Z [main] persistence.NodeAttachmentService.invoke - Stored new attachment: id=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA uploader=app filename=null {}
[INFO ] 2019-08-20T17:03:40,191Z [main] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320620115) {}
[INFO ] 2019-08-20T17:03:40,194Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566320618312) {}
[INFO ] 2019-08-20T17:03:40,196Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:40,205Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320620115) {}
[INFO ] 2019-08-20T17:03:40,206Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:40,214Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566320619349) {}
[INFO ] 2019-08-20T17:03:40,215Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:40,223Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320620115) {}
[INFO ] 2019-08-20T17:03:40,224Z [main] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-08-20T17:03:40,232Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320620115) {}
[INFO ] 2019-08-20T17:03:40,233Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:40,233Z [main] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566320620115) {}
[INFO ] 2019-08-20T17:03:40,233Z [main] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-20T17:03:41,157Z [Mock network] corda.flow.notariseAndRecord - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=358a497d-021f-450a-b871-aa91388fcadc, invocation_id=4f8a16e8-18ca-436f-9b26-c4e5750261ca, invocation_timestamp=2019-08-20T17:03:40.233Z, origin=Only For Testing, session_id=4f8a16e8-18ca-436f-9b26-c4e5750261ca, session_timestamp=2019-08-20T17:03:40.233Z, thread-id=462, tx_id=3E42C711985C4586AA9600640E5FAED37F08D67EB1F9A6DD910B0FEBC48C0135}
[INFO ] 2019-08-20T17:03:41,157Z [Mock network] corda.flow.notariseAndRecord - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=358a497d-021f-450a-b871-aa91388fcadc, invocation_id=4f8a16e8-18ca-436f-9b26-c4e5750261ca, invocation_timestamp=2019-08-20T17:03:40.233Z, origin=Only For Testing, session_id=4f8a16e8-18ca-436f-9b26-c4e5750261ca, session_timestamp=2019-08-20T17:03:40.233Z, thread-id=462, tx_id=3E42C711985C4586AA9600640E5FAED37F08D67EB1F9A6DD910B0FEBC48C0135}
[INFO ] 2019-08-20T17:03:41,174Z [Mock network] corda.flow.notariseAndRecord - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=358a497d-021f-450a-b871-aa91388fcadc, invocation_id=4f8a16e8-18ca-436f-9b26-c4e5750261ca, invocation_timestamp=2019-08-20T17:03:40.233Z, origin=Only For Testing, session_id=4f8a16e8-18ca-436f-9b26-c4e5750261ca, session_timestamp=2019-08-20T17:03:40.233Z, thread-id=462, tx_id=3E42C711985C4586AA9600640E5FAED37F08D67EB1F9A6DD910B0FEBC48C0135}
[INFO ] 2019-08-20T17:03:41,210Z [Mock network] corda.flow.call - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=35f55952-757d-41ec-af30-e43f06b14934, invocation_id=0b529f84-1a65-482f-b832-9c31f3b8628f, invocation_timestamp=2019-08-20T17:03:41.195Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0b529f84-1a65-482f-b832-9c31f3b8628f, session_timestamp=2019-08-20T17:03:41.195Z, thread-id=462, tx_id=3E42C711985C4586AA9600640E5FAED37F08D67EB1F9A6DD910B0FEBC48C0135}
[WARN ] 2019-08-20T17:03:41,210Z [Mock network] corda.flow.maybeWireUpProgressTracking - ProgressTracker has not been started {fiber-id=10000010, flow-id=35f55952-757d-41ec-af30-e43f06b14934, invocation_id=0b529f84-1a65-482f-b832-9c31f3b8628f, invocation_timestamp=2019-08-20T17:03:41.195Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0b529f84-1a65-482f-b832-9c31f3b8628f, session_timestamp=2019-08-20T17:03:41.195Z, thread-id=462, tx_id=3E42C711985C4586AA9600640E5FAED37F08D67EB1F9A6DD910B0FEBC48C0135}
[INFO ] 2019-08-20T17:03:41,219Z [Mock network] corda.flow.call - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=35f55952-757d-41ec-af30-e43f06b14934, invocation_id=0b529f84-1a65-482f-b832-9c31f3b8628f, invocation_timestamp=2019-08-20T17:03:41.195Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0b529f84-1a65-482f-b832-9c31f3b8628f, session_timestamp=2019-08-20T17:03:41.195Z, thread-id=462, tx_id=3E42C711985C4586AA9600640E5FAED37F08D67EB1F9A6DD910B0FEBC48C0135}
[INFO ] 2019-08-20T17:03:41,232Z [Mock network] corda.flow.call - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=358a497d-021f-450a-b871-aa91388fcadc, invocation_id=4f8a16e8-18ca-436f-9b26-c4e5750261ca, invocation_timestamp=2019-08-20T17:03:40.233Z, origin=Only For Testing, session_id=4f8a16e8-18ca-436f-9b26-c4e5750261ca, session_timestamp=2019-08-20T17:03:40.233Z, thread-id=462, tx_id=3E42C711985C4586AA9600640E5FAED37F08D67EB1F9A6DD910B0FEBC48C0135}
[INFO ] 2019-08-20T17:03:41,232Z [Mock network] corda.flow.call - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=358a497d-021f-450a-b871-aa91388fcadc, invocation_id=4f8a16e8-18ca-436f-9b26-c4e5750261ca, invocation_timestamp=2019-08-20T17:03:40.233Z, origin=Only For Testing, session_id=4f8a16e8-18ca-436f-9b26-c4e5750261ca, session_timestamp=2019-08-20T17:03:40.233Z, thread-id=462, tx_id=3E42C711985C4586AA9600640E5FAED37F08D67EB1F9A6DD910B0FEBC48C0135}
[INFO ] 2019-08-20T17:03:41,238Z [Mock network] corda.flow.run - Flow raised an error... sending it to flow hospital {fiber-id=10000010, flow-id=35f55952-757d-41ec-af30-e43f06b14934, invocation_id=0b529f84-1a65-482f-b832-9c31f3b8628f, invocation_timestamp=2019-08-20T17:03:41.195Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0b529f84-1a65-482f-b832-9c31f3b8628f, session_timestamp=2019-08-20T17:03:41.195Z, thread-id=462, tx_id=3E42C711985C4586AA9600640E5FAED37F08D67EB1F9A6DD910B0FEBC48C0135}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-1679276437357606060) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T17:03:41,239Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [35f55952-757d-41ec-af30-e43f06b14934] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Invocation, sessionId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-1679276437357606060)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--4194541065285232951-7725715173752921469)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))]), frozenFiber=97B2CA11DE78FAF6EBF542BEA9FF5447A873E2C5D513CB079C95B12B0BBDEA91), errorState=Clean, numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@158de428, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@54d2c960], isFlowResumed=true, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=18f6f5c1-1a5c-4eb1-93ef-c5edffa4c561) {fiber-id=10000010, flow-id=35f55952-757d-41ec-af30-e43f06b14934, invocation_id=0b529f84-1a65-482f-b832-9c31f3b8628f, invocation_timestamp=2019-08-20T17:03:41.195Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0b529f84-1a65-482f-b832-9c31f3b8628f, session_timestamp=2019-08-20T17:03:41.195Z, thread-id=462, tx_id=3E42C711985C4586AA9600640E5FAED37F08D67EB1F9A6DD910B0FEBC48C0135}
[INFO ] 2019-08-20T17:03:41,239Z [Mock network] statemachine.StaffedFlowHospital.invoke - Flow [35f55952-757d-41ec-af30-e43f06b14934] has error [0] {fiber-id=10000010, flow-id=35f55952-757d-41ec-af30-e43f06b14934, invocation_id=0b529f84-1a65-482f-b832-9c31f3b8628f, invocation_timestamp=2019-08-20T17:03:41.195Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0b529f84-1a65-482f-b832-9c31f3b8628f, session_timestamp=2019-08-20T17:03:41.195Z, thread-id=462, tx_id=3E42C711985C4586AA9600640E5FAED37F08D67EB1F9A6DD910B0FEBC48C0135}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-1679276437357606060) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[INFO ] 2019-08-20T17:03:41,239Z [Mock network] statemachine.StaffedFlowHospital.flowErrored - Flow [35f55952-757d-41ec-af30-e43f06b14934] error allowed to propagate {fiber-id=10000010, flow-id=35f55952-757d-41ec-af30-e43f06b14934, invocation_id=0b529f84-1a65-482f-b832-9c31f3b8628f, invocation_timestamp=2019-08-20T17:03:41.195Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0b529f84-1a65-482f-b832-9c31f3b8628f, session_timestamp=2019-08-20T17:03:41.195Z, thread-id=462, tx_id=3E42C711985C4586AA9600640E5FAED37F08D67EB1F9A6DD910B0FEBC48C0135}
[WARN ] 2019-08-20T17:03:41,243Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [35f55952-757d-41ec-af30-e43f06b14934] errored, dumping all transitions:

 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.204Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[35f55952-757d-41ec-af30-e43f06b14934], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Invocation, sessionId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=D11F93865D6A9781CA9FC4E49031C96096683B3538F5DC3D267769B76EBC7504), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@75e7c148])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@75e7c148])
    SignalFlowHasStarted(flowId=[35f55952-757d-41ec-af30-e43f06b14934])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4194541065285232951), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-1679276437357606060), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--4194541065285232951-7725715173752921469-0-0), senderUUID=18f6f5c1-1a5c-4eb1-93ef-c5edffa4c561))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-1679276437357606060): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4194541065285232951)), errors=[], deduplicationSeed=D--4194541065285232951-7725715173752921469)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@75e7c148]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.204Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.204Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.207Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))]), maySkipCheckpoint=false, fiber=7DA7BAF28C06DECCE8C04F3BC76047AB590F72FDD89AA296479F1A3C7717C00B, )
  Actions: 
    PersistCheckpoint(id=[35f55952-757d-41ec-af30-e43f06b14934], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Invocation, sessionId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-1679276437357606060)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4194541065285232951)), errors=[], deduplicationSeed=D--4194541065285232951-7725715173752921469)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))]), frozenFiber=7DA7BAF28C06DECCE8C04F3BC76047AB590F72FDD89AA296479F1A3C7717C00B), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=D11F93865D6A9781CA9FC4E49031C96096683B3538F5DC3D267769B76EBC7504)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))]), frozenFiber=7DA7BAF28C06DECCE8C04F3BC76047AB590F72FDD89AA296479F1A3C7717C00B)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.208Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-1679276437357606060).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.210Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.217Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=A5F1A4AF1B87305FE858D2F01459AF7819F1FEA05AC65CEED6C4A0F597D92584, )
  Actions: 
    PersistCheckpoint(id=[35f55952-757d-41ec-af30-e43f06b14934], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Invocation, sessionId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-1679276437357606060)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4194541065285232951)), errors=[], deduplicationSeed=D--4194541065285232951-7725715173752921469)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=A5F1A4AF1B87305FE858D2F01459AF7819F1FEA05AC65CEED6C4A0F597D92584), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    7DA7BAF28C06DECCE8C04F3BC76047AB590F72FDD89AA296479F1A3C7717C00B
    A5F1A4AF1B87305FE858D2F01459AF7819F1FEA05AC65CEED6C4A0F597D92584
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.219Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4194541065285232951), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--4194541065285232951-7725715173752921469-2-0), senderUUID=18f6f5c1-1a5c-4eb1-93ef-c5edffa4c561))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.219Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.223Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.226Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))]), maySkipCheckpoint=false, fiber=97B2CA11DE78FAF6EBF542BEA9FF5447A873E2C5D513CB079C95B12B0BBDEA91, )
  Actions: 
    PersistCheckpoint(id=[35f55952-757d-41ec-af30-e43f06b14934], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Invocation, sessionId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-1679276437357606060)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4194541065285232951)), errors=[], deduplicationSeed=D--4194541065285232951-7725715173752921469)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))]), frozenFiber=97B2CA11DE78FAF6EBF542BEA9FF5447A873E2C5D513CB079C95B12B0BBDEA91), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))])
checkpoint.flowState.frozenFiber.hash: 
    A5F1A4AF1B87305FE858D2F01459AF7819F1FEA05AC65CEED6C4A0F597D92584
    97B2CA11DE78FAF6EBF542BEA9FF5447A873E2C5D513CB079C95B12B0BBDEA91
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.226Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.238Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-1679276437357606060), payload=net.corda.node.services.statemachine.EndSessionMessage@6949125f), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@54d2c960, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-1679276437357606060).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=-4194541065285232951))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@54d2c960]


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.238Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-1679276437357606060) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.238Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.239Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-1679276437357606060) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-3929452759416164848, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-1679276437357606060) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.239Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.239Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000010, flow-id=35f55952-757d-41ec-af30-e43f06b14934, invocation_id=0b529f84-1a65-482f-b832-9c31f3b8628f, invocation_timestamp=2019-08-20T17:03:41.195Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0b529f84-1a65-482f-b832-9c31f3b8628f, session_timestamp=2019-08-20T17:03:41.195Z, thread-id=462, tx_id=3E42C711985C4586AA9600640E5FAED37F08D67EB1F9A6DD910B0FEBC48C0135}
[WARN ] 2019-08-20T17:03:41,243Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [35f55952-757d-41ec-af30-e43f06b14934] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000010, flow-id=35f55952-757d-41ec-af30-e43f06b14934, invocation_id=0b529f84-1a65-482f-b832-9c31f3b8628f, invocation_timestamp=2019-08-20T17:03:41.195Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0b529f84-1a65-482f-b832-9c31f3b8628f, session_timestamp=2019-08-20T17:03:41.195Z, thread-id=462, tx_id=3E42C711985C4586AA9600640E5FAED37F08D67EB1F9A6DD910B0FEBC48C0135}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-1679276437357606060) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
[WARN ] 2019-08-20T17:03:41,243Z [Mock network] statemachine.ActionExecutorImpl.executePropagateErrors - Propagating error {fiber-id=10000010, flow-id=35f55952-757d-41ec-af30-e43f06b14934, invocation_id=0b529f84-1a65-482f-b832-9c31f3b8628f, invocation_timestamp=2019-08-20T17:03:41.195Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0b529f84-1a65-482f-b832-9c31f3b8628f, session_timestamp=2019-08-20T17:03:41.195Z, thread-id=462, tx_id=3E42C711985C4586AA9600640E5FAED37F08D67EB1F9A6DD910B0FEBC48C0135}
[WARN ] 2019-08-20T17:03:41,251Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [35f55952-757d-41ec-af30-e43f06b14934] errored, dumping all transitions:

 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.204Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[35f55952-757d-41ec-af30-e43f06b14934], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Invocation, sessionId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=D11F93865D6A9781CA9FC4E49031C96096683B3538F5DC3D267769B76EBC7504), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@75e7c148])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@75e7c148])
    SignalFlowHasStarted(flowId=[35f55952-757d-41ec-af30-e43f06b14934])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4194541065285232951), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-1679276437357606060), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--4194541065285232951-7725715173752921469-0-0), senderUUID=18f6f5c1-1a5c-4eb1-93ef-c5edffa4c561))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-1679276437357606060): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4194541065285232951)), errors=[], deduplicationSeed=D--4194541065285232951-7725715173752921469)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@75e7c148]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.204Z
  Event: EnterSubFlow(subFlowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.204Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.207Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))]), maySkipCheckpoint=false, fiber=7DA7BAF28C06DECCE8C04F3BC76047AB590F72FDD89AA296479F1A3C7717C00B, )
  Actions: 
    PersistCheckpoint(id=[35f55952-757d-41ec-af30-e43f06b14934], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Invocation, sessionId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-1679276437357606060)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4194541065285232951)), errors=[], deduplicationSeed=D--4194541065285232951-7725715173752921469)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))]), frozenFiber=7DA7BAF28C06DECCE8C04F3BC76047AB590F72FDD89AA296479F1A3C7717C00B), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=D11F93865D6A9781CA9FC4E49031C96096683B3538F5DC3D267769B76EBC7504)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))]), frozenFiber=7DA7BAF28C06DECCE8C04F3BC76047AB590F72FDD89AA296479F1A3C7717C00B)
checkpoint.numberOfSuspends: 
    0
    1
isFlowResumed: 
    true
    false


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.208Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-1679276437357606060).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.210Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.217Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=A5F1A4AF1B87305FE858D2F01459AF7819F1FEA05AC65CEED6C4A0F597D92584, )
  Actions: 
    PersistCheckpoint(id=[35f55952-757d-41ec-af30-e43f06b14934], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Invocation, sessionId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-1679276437357606060)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4194541065285232951)), errors=[], deduplicationSeed=D--4194541065285232951-7725715173752921469)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=A5F1A4AF1B87305FE858D2F01459AF7819F1FEA05AC65CEED6C4A0F597D92584), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))])
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    7DA7BAF28C06DECCE8C04F3BC76047AB590F72FDD89AA296479F1A3C7717C00B
    A5F1A4AF1B87305FE858D2F01459AF7819F1FEA05AC65CEED6C4A0F597D92584
checkpoint.numberOfSuspends: 
    1
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.219Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4194541065285232951), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--4194541065285232951-7725715173752921469-2-0), senderUUID=18f6f5c1-1a5c-4eb1-93ef-c5edffa4c561))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.219Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.223Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.226Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))]), maySkipCheckpoint=false, fiber=97B2CA11DE78FAF6EBF542BEA9FF5447A873E2C5D513CB079C95B12B0BBDEA91, )
  Actions: 
    PersistCheckpoint(id=[35f55952-757d-41ec-af30-e43f06b14934], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Invocation, sessionId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-1679276437357606060)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4194541065285232951)), errors=[], deduplicationSeed=D--4194541065285232951-7725715173752921469)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))]), frozenFiber=97B2CA11DE78FAF6EBF542BEA9FF5447A873E2C5D513CB079C95B12B0BBDEA91), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))])
checkpoint.flowState.frozenFiber.hash: 
    A5F1A4AF1B87305FE858D2F01459AF7819F1FEA05AC65CEED6C4A0F597D92584
    97B2CA11DE78FAF6EBF542BEA9FF5447A873E2C5D513CB079C95B12B0BBDEA91
checkpoint.numberOfSuspends: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.226Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.238Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-1679276437357606060), payload=net.corda.node.services.statemachine.EndSessionMessage@6949125f), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@54d2c960, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-1679276437357606060).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=-4194541065285232951))
    Ended
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@54d2c960]


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.238Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-1679276437357606060) with empty buffer)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.238Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false), Inlined(flowClass=class bootcamp.TokenIssueFlowResponder$1, subFlowVersion=CoreFlow(platformVersion=4), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)]


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.239Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-1679276437357606060) with empty buffer)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-3929452759416164848, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-1679276437357606060) with empty buffer)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.239Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.239Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [35f55952-757d-41ec-af30-e43f06b14934] ---
  Timestamp: 2019-08-20T17:03:41.248Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-3929452759416164848)], sessions=[Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--4194541065285232951-7725715173752921469)], senderUUID=18f6f5c1-1a5c-4eb1-93ef-c5edffa4c561)
    CreateTransaction
    RemoveCheckpoint(id=[35f55952-757d-41ec-af30-e43f06b14934])
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@54d2c960])
    ReleaseSoftLocks(uuid=35f55952-757d-41ec-af30-e43f06b14934)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@54d2c960])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-1679276437357606060)])
    RemoveFlow(flowId=[35f55952-757d-41ec-af30-e43f06b14934], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-3929452759416164848, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-1679276437357606060) with empty buffer)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Invocation, sessionId=0b529f84-1a65-482f-b832-9c31f3b8628f, timestamp: 2019-08-20T17:03:41.195Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-1679276437357606060)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=D--4194541065285232951-7725715173752921469)}, subFlowStack=[Inlined(flowClass=class bootcamp.TokenIssueFlowResponder, subFlowVersion=CorDappFlow(platformVersion=4, corDappName=bootcamp-cordapp, corDappHash=57D4443B146937AF3C33368E2F299B92E207F19DDD85ECEF41818FEBDD11FFFA), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(counterparty=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-1679276437357606060))]), frozenFiber=97B2CA11DE78FAF6EBF542BEA9FF5447A873E2C5D513CB079C95B12B0BBDEA91), errorState=Errored(errors=[FlowError(errorId=-3929452759416164848, exception=net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-1679276437357606060) with empty buffer)], propagatedIndex=1, propagating=true), numberOfSuspends=3), flowLogic=bootcamp.TokenIssueFlowResponder@158de428, pendingDeduplicationHandlers=[], isFlowResumed=false, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=18f6f5c1-1a5c-4eb1-93ef-c5edffa4c561))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.errorState.propagatedIndex: 
    0
    1
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@54d2c960]
    []
isRemoved: 
    false
    true
 {fiber-id=10000010, flow-id=35f55952-757d-41ec-af30-e43f06b14934, invocation_id=0b529f84-1a65-482f-b832-9c31f3b8628f, invocation_timestamp=2019-08-20T17:03:41.195Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0b529f84-1a65-482f-b832-9c31f3b8628f, session_timestamp=2019-08-20T17:03:41.195Z, thread-id=462, tx_id=3E42C711985C4586AA9600640E5FAED37F08D67EB1F9A6DD910B0FEBC48C0135}
[WARN ] 2019-08-20T17:03:41,251Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor.executeTransition - Flow [35f55952-757d-41ec-af30-e43f06b14934] error [errorCode=13t7p1u, moreInformationAt=https://errors.corda.net/OS/4.0/13t7p1u] {fiber-id=10000010, flow-id=35f55952-757d-41ec-af30-e43f06b14934, invocation_id=0b529f84-1a65-482f-b832-9c31f3b8628f, invocation_timestamp=2019-08-20T17:03:41.195Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0b529f84-1a65-482f-b832-9c31f3b8628f, session_timestamp=2019-08-20T17:03:41.195Z, thread-id=462, tx_id=3E42C711985C4586AA9600640E5FAED37F08D67EB1F9A6DD910B0FEBC48C0135}
net.corda.core.flows.UnexpectedFlowEndException: Tried to access ended session SessionId(toLong=-1679276437357606060) with empty buffer
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:161) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:407) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:294) ~[corda-core-4.0.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:198) ~[corda-core-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:290) ~[corda-node-4.0.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:314) ~[corda-core-4.0.jar:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:19) ~[main/:?]
	at bootcamp.TokenIssueFlowResponder.call(TokenIssueFlowResponder.java:7) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:228) ~[corda-node-4.0.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:45) ~[corda-node-4.0.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.0.jar:?]
